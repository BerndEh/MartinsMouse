ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_WheelLED.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_WheelLED_initVar
  20              		.bss
  21              		.type	PWM_WheelLED_initVar, %object
  22              		.size	PWM_WheelLED_initVar, 1
  23              	PWM_WheelLED_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_WheelLED_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_WheelLED_Start
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_WheelLED_Start, %function
  31              	PWM_WheelLED_Start:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM_WheelLED.c"
   1:Generated_Source\PSoC4/PWM_WheelLED.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_WheelLED.c **** * File Name: PWM_WheelLED.c
   3:Generated_Source\PSoC4/PWM_WheelLED.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM_WheelLED.c **** *
   5:Generated_Source\PSoC4/PWM_WheelLED.c **** * Description:
   6:Generated_Source\PSoC4/PWM_WheelLED.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM_WheelLED.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM_WheelLED.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM_WheelLED.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM_WheelLED.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM_WheelLED.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM_WheelLED.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM_WheelLED.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  15:Generated_Source\PSoC4/PWM_WheelLED.c **** * Note:
  16:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  17:Generated_Source\PSoC4/PWM_WheelLED.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM_WheelLED.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM_WheelLED.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM_WheelLED.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM_WheelLED.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM_WheelLED.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  24:Generated_Source\PSoC4/PWM_WheelLED.c **** #include "PWM_WheelLED.h"
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 2


  25:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  26:Generated_Source\PSoC4/PWM_WheelLED.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM_WheelLED.c **** #ifdef PWM_WheelLED_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM_WheelLED.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM_WheelLED.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* PWM_WheelLED_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  32:Generated_Source\PSoC4/PWM_WheelLED.c **** uint8 PWM_WheelLED_initVar = 0u;
  33:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  34:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  35:Generated_Source\PSoC4/PWM_WheelLED.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM_WheelLED.c **** * Function Name: PWM_WheelLED_Start
  37:Generated_Source\PSoC4/PWM_WheelLED.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  39:Generated_Source\PSoC4/PWM_WheelLED.c **** * Summary:
  40:Generated_Source\PSoC4/PWM_WheelLED.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM_WheelLED.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM_WheelLED.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  44:Generated_Source\PSoC4/PWM_WheelLED.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
  46:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  47:Generated_Source\PSoC4/PWM_WheelLED.c **** * Return:
  48:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
  49:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  50:Generated_Source\PSoC4/PWM_WheelLED.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM_WheelLED.c **** *  PWM_WheelLED_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM_WheelLED.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  54:Generated_Source\PSoC4/PWM_WheelLED.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM_WheelLED.c **** void PWM_WheelLED_Start(void) 
  56:Generated_Source\PSoC4/PWM_WheelLED.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC4/PWM_WheelLED.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM_WheelLED.c ****     if(PWM_WheelLED_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
  60:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_WheelLED_Init
  61:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
  63:Generated_Source\PSoC4/PWM_WheelLED.c ****     PWM_WheelLED_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_WheelLED_Enable
  64:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  65:Generated_Source\PSoC4/PWM_WheelLED.c **** }
  58              		.loc 1 65 0
  59 001a C046     		nop
  60 001c BD46     		mov	sp, r7
  61              		@ sp needed
  62 001e 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 0020 00000000 		.word	PWM_WheelLED_initVar
  67              		.cfi_endproc
  68              	.LFE2:
  69              		.size	PWM_WheelLED_Start, .-PWM_WheelLED_Start
  70              		.section	.text.PWM_WheelLED_Init,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_WheelLED_Init
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_WheelLED_Init, %function
  76              	PWM_WheelLED_Init:
  77              	.LFB3:
  66:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  67:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  68:Generated_Source\PSoC4/PWM_WheelLED.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM_WheelLED.c **** * Function Name: PWM_WheelLED_Init
  70:Generated_Source\PSoC4/PWM_WheelLED.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  72:Generated_Source\PSoC4/PWM_WheelLED.c **** * Summary:
  73:Generated_Source\PSoC4/PWM_WheelLED.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM_WheelLED.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM_WheelLED.c **** *  PWM_WheelLED_Start().
  76:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  77:Generated_Source\PSoC4/PWM_WheelLED.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
  79:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  80:Generated_Source\PSoC4/PWM_WheelLED.c **** * Return:
  81:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
  82:Generated_Source\PSoC4/PWM_WheelLED.c **** *
  83:Generated_Source\PSoC4/PWM_WheelLED.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM_WheelLED.c **** void PWM_WheelLED_Init(void) 
  85:Generated_Source\PSoC4/PWM_WheelLED.c **** {
  78              		.loc 1 85 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 90B5     		push	{r4, r7, lr}
  83              		.cfi_def_cfa_offset 12
  84              		.cfi_offset 4, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 4


  87 0002 83B0     		sub	sp, sp, #12
  88              		.cfi_def_cfa_offset 24
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UsingFixedFunction || PWM_WheelLED_UseControl)
  87:Generated_Source\PSoC4/PWM_WheelLED.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UsingFixedFunction || PWM_WheelLED_UseControl) */
  89:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  90:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if(!PWM_WheelLED_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(PWM_WheelLED_UseStatus)
  92:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM_WheelLED.c ****             uint8 PWM_WheelLED_interruptState;
  94:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UseStatus) */
  95:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (!PWM_WheelLED_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM_WheelLED.c **** 
  97:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_CONTROL |= PWM_WheelLED_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if (PWM_WheelLED_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_CONTROL |= PWM_WheelLED_CFG0_DB;
 102:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 104:Generated_Source\PSoC4/PWM_WheelLED.c ****         ctrl = PWM_WheelLED_CONTROL3 & ((uint8 )(~PWM_WheelLED_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_CONTROL3 = ctrl | PWM_WheelLED_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 107:Generated_Source\PSoC4/PWM_WheelLED.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_RT1 &= ((uint8)(~PWM_WheelLED_RT1_MASK));
 109:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_RT1 |= PWM_WheelLED_SYNC;
 110:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 111:Generated_Source\PSoC4/PWM_WheelLED.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_RT1 &= ((uint8)(~PWM_WheelLED_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_RT1 |= PWM_WheelLED_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 115:Generated_Source\PSoC4/PWM_WheelLED.c ****     #elif (PWM_WheelLED_UseControl)
 116:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM_WheelLED.c ****         ctrl = PWM_WheelLED_CONTROL & ((uint8)(~PWM_WheelLED_CTRL_CMPMODE2_MASK)) &
  91              		.loc 1 117 0
  92 0006 1E4B     		ldr	r3, .L6
  93 0008 1B78     		ldrb	r3, [r3]
  94 000a DAB2     		uxtb	r2, r3
  95 000c FB1D     		adds	r3, r7, #7
  96 000e 3F21     		movs	r1, #63
  97 0010 8A43     		bics	r2, r1
  98 0012 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/PWM_WheelLED.c ****                 ((uint8)(~PWM_WheelLED_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_CONTROL = ctrl | PWM_WheelLED_DEFAULT_COMPARE2_MODE |
  99              		.loc 1 119 0
 100 0014 1A4A     		ldr	r2, .L6
 101 0016 FB1D     		adds	r3, r7, #7
 102 0018 1B78     		ldrb	r3, [r3]
 103 001a 0921     		movs	r1, #9
 104 001c 0B43     		orrs	r3, r1
 105 001e DBB2     		uxtb	r3, r3
 106 0020 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC4/PWM_WheelLED.c ****                                    PWM_WheelLED_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM_WheelLED.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 5


 123:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (!PWM_WheelLED_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if (PWM_WheelLED_Resolution == 8)
 125:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_AUX_CONTROLDP0 |= (PWM_WheelLED_AUX_CTRL_FIFO0_CLR);
 107              		.loc 1 126 0
 108 0022 184A     		ldr	r2, .L6+4
 109 0024 174B     		ldr	r3, .L6+4
 110 0026 1B78     		ldrb	r3, [r3]
 111 0028 DBB2     		uxtb	r3, r3
 112 002a 0121     		movs	r1, #1
 113 002c 0B43     		orrs	r3, r1
 114 002e DBB2     		uxtb	r3, r3
 115 0030 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else /* (PWM_WheelLED_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_AUX_CONTROLDP0 |= (PWM_WheelLED_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_AUX_CONTROLDP1 |= (PWM_WheelLED_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 133:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_WriteCounter(PWM_WheelLED_INIT_PERIOD_VALUE);
 116              		.loc 1 133 0
 117 0032 FF20     		movs	r0, #255
 118 0034 FFF7FEFF 		bl	PWM_WheelLED_WriteCounter
 134:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (!PWM_WheelLED_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 136:Generated_Source\PSoC4/PWM_WheelLED.c ****     PWM_WheelLED_WritePeriod(PWM_WheelLED_INIT_PERIOD_VALUE);
 119              		.loc 1 136 0
 120 0038 FF20     		movs	r0, #255
 121 003a FFF7FEFF 		bl	PWM_WheelLED_WritePeriod
 137:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 138:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if (PWM_WheelLED_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_WriteCompare(PWM_WheelLED_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 141:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_WriteCompare1(PWM_WheelLED_INIT_COMPARE_VALUE1);
 122              		.loc 1 141 0
 123 003e 0120     		movs	r0, #1
 124 0040 FFF7FEFF 		bl	PWM_WheelLED_WriteCompare1
 142:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_WriteCompare2(PWM_WheelLED_INIT_COMPARE_VALUE2);
 125              		.loc 1 142 0
 126 0044 1020     		movs	r0, #16
 127 0046 FFF7FEFF 		bl	PWM_WheelLED_WriteCompare2
 143:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 145:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if (PWM_WheelLED_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_WriteKillTime(PWM_WheelLED_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 149:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if (PWM_WheelLED_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_WriteDeadTime(PWM_WheelLED_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 153:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UseStatus || PWM_WheelLED_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_SetInterruptMode(PWM_WheelLED_INIT_INTERRUPTS_MODE);
 128              		.loc 1 154 0
 129 004a 0420     		movs	r0, #4
 130 004c FFF7FEFF 		bl	PWM_WheelLED_SetInterruptMode
 155:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UseStatus || PWM_WheelLED_UsingFixedFunction) */
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 6


 156:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 157:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_GLOBAL_ENABLE |= PWM_WheelLED_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_CONTROL2 |= PWM_WheelLED_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM_WheelLED.c ****     #else
 163:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(PWM_WheelLED_UseStatus)
 164:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 165:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_interruptState = CyEnterCriticalSection();
 131              		.loc 1 167 0
 132 0050 BC1D     		adds	r4, r7, #6
 133 0052 FFF7FEFF 		bl	CyEnterCriticalSection
 134 0056 0300     		movs	r3, r0
 135 0058 2370     		strb	r3, [r4]
 168:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_STATUS_AUX_CTRL |= PWM_WheelLED_STATUS_ACTL_INT_EN_MASK;
 136              		.loc 1 169 0
 137 005a 0A4A     		ldr	r2, .L6+4
 138 005c 094B     		ldr	r3, .L6+4
 139 005e 1B78     		ldrb	r3, [r3]
 140 0060 DBB2     		uxtb	r3, r3
 141 0062 1021     		movs	r1, #16
 142 0064 0B43     		orrs	r3, r1
 143 0066 DBB2     		uxtb	r3, r3
 144 0068 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 171:Generated_Source\PSoC4/PWM_WheelLED.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM_WheelLED.c ****             CyExitCriticalSection(PWM_WheelLED_interruptState);
 145              		.loc 1 172 0
 146 006a BB1D     		adds	r3, r7, #6
 147 006c 1B78     		ldrb	r3, [r3]
 148 006e 1800     		movs	r0, r3
 149 0070 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 174:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Clear the FIFO to enable the PWM_WheelLED_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM_WheelLED.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_ClearFIFO();
 150              		.loc 1 176 0
 151 0074 FFF7FEFF 		bl	PWM_WheelLED_ClearFIFO
 177:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UseStatus) */
 178:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM_WheelLED.c **** }
 152              		.loc 1 179 0
 153 0078 C046     		nop
 154 007a BD46     		mov	sp, r7
 155 007c 03B0     		add	sp, sp, #12
 156              		@ sp needed
 157 007e 90BD     		pop	{r4, r7, pc}
 158              	.L7:
 159              		.align	2
 160              	.L6:
 161 0080 73000F40 		.word	1074724979
 162 0084 93000F40 		.word	1074725011
 163              		.cfi_endproc
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 7


 164              	.LFE3:
 165              		.size	PWM_WheelLED_Init, .-PWM_WheelLED_Init
 166              		.section	.text.PWM_WheelLED_Enable,"ax",%progbits
 167              		.align	2
 168              		.global	PWM_WheelLED_Enable
 169              		.code	16
 170              		.thumb_func
 171              		.type	PWM_WheelLED_Enable, %function
 172              	PWM_WheelLED_Enable:
 173              	.LFB4:
 180:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 181:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 182:Generated_Source\PSoC4/PWM_WheelLED.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM_WheelLED.c **** * Function Name: PWM_WheelLED_Enable
 184:Generated_Source\PSoC4/PWM_WheelLED.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 186:Generated_Source\PSoC4/PWM_WheelLED.c **** * Summary:
 187:Generated_Source\PSoC4/PWM_WheelLED.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 189:Generated_Source\PSoC4/PWM_WheelLED.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
 191:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 192:Generated_Source\PSoC4/PWM_WheelLED.c **** * Return:
 193:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
 194:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 195:Generated_Source\PSoC4/PWM_WheelLED.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM_WheelLED.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 198:Generated_Source\PSoC4/PWM_WheelLED.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM_WheelLED.c **** void PWM_WheelLED_Enable(void) 
 200:Generated_Source\PSoC4/PWM_WheelLED.c **** {
 174              		.loc 1 200 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC4/PWM_WheelLED.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_GLOBAL_ENABLE |= PWM_WheelLED_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_GLOBAL_STBY_ENABLE |= PWM_WheelLED_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 207:Generated_Source\PSoC4/PWM_WheelLED.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UseControl || PWM_WheelLED_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_CONTROL |= PWM_WheelLED_CTRL_ENABLE;
 184              		.loc 1 209 0
 185 0004 0549     		ldr	r1, .L9
 186 0006 054B     		ldr	r3, .L9
 187 0008 1B78     		ldrb	r3, [r3]
 188 000a DBB2     		uxtb	r3, r3
 189 000c 8022     		movs	r2, #128
 190 000e 5242     		rsbs	r2, r2, #0
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 8


 191 0010 1343     		orrs	r3, r2
 192 0012 DBB2     		uxtb	r3, r3
 193 0014 0B70     		strb	r3, [r1]
 210:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UseControl || PWM_WheelLED_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM_WheelLED.c **** }
 194              		.loc 1 211 0
 195 0016 C046     		nop
 196 0018 BD46     		mov	sp, r7
 197              		@ sp needed
 198 001a 80BD     		pop	{r7, pc}
 199              	.L10:
 200              		.align	2
 201              	.L9:
 202 001c 73000F40 		.word	1074724979
 203              		.cfi_endproc
 204              	.LFE4:
 205              		.size	PWM_WheelLED_Enable, .-PWM_WheelLED_Enable
 206              		.section	.text.PWM_WheelLED_Stop,"ax",%progbits
 207              		.align	2
 208              		.global	PWM_WheelLED_Stop
 209              		.code	16
 210              		.thumb_func
 211              		.type	PWM_WheelLED_Stop, %function
 212              	PWM_WheelLED_Stop:
 213              	.LFB5:
 212:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 213:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 214:Generated_Source\PSoC4/PWM_WheelLED.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM_WheelLED.c **** * Function Name: PWM_WheelLED_Stop
 216:Generated_Source\PSoC4/PWM_WheelLED.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 218:Generated_Source\PSoC4/PWM_WheelLED.c **** * Summary:
 219:Generated_Source\PSoC4/PWM_WheelLED.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM_WheelLED.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 222:Generated_Source\PSoC4/PWM_WheelLED.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
 224:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 225:Generated_Source\PSoC4/PWM_WheelLED.c **** * Return:
 226:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
 227:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 228:Generated_Source\PSoC4/PWM_WheelLED.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM_WheelLED.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM_WheelLED.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 232:Generated_Source\PSoC4/PWM_WheelLED.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM_WheelLED.c **** void PWM_WheelLED_Stop(void) 
 234:Generated_Source\PSoC4/PWM_WheelLED.c **** {
 214              		.loc 1 234 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 9


 223              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UseControl || PWM_WheelLED_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_CONTROL &= ((uint8)(~PWM_WheelLED_CTRL_ENABLE));
 224              		.loc 1 236 0
 225 0004 054A     		ldr	r2, .L12
 226 0006 054B     		ldr	r3, .L12
 227 0008 1B78     		ldrb	r3, [r3]
 228 000a DBB2     		uxtb	r3, r3
 229 000c 7F21     		movs	r1, #127
 230 000e 0B40     		ands	r3, r1
 231 0010 DBB2     		uxtb	r3, r3
 232 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UseControl || PWM_WheelLED_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 239:Generated_Source\PSoC4/PWM_WheelLED.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_GLOBAL_ENABLE &= ((uint8)(~PWM_WheelLED_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM_WheelLED.c ****         PWM_WheelLED_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_WheelLED_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM_WheelLED.c **** }
 233              		.loc 1 244 0
 234 0014 C046     		nop
 235 0016 BD46     		mov	sp, r7
 236              		@ sp needed
 237 0018 80BD     		pop	{r7, pc}
 238              	.L13:
 239 001a C046     		.align	2
 240              	.L12:
 241 001c 73000F40 		.word	1074724979
 242              		.cfi_endproc
 243              	.LFE5:
 244              		.size	PWM_WheelLED_Stop, .-PWM_WheelLED_Stop
 245              		.section	.text.PWM_WheelLED_WriteCounter,"ax",%progbits
 246              		.align	2
 247              		.global	PWM_WheelLED_WriteCounter
 248              		.code	16
 249              		.thumb_func
 250              		.type	PWM_WheelLED_WriteCounter, %function
 251              	PWM_WheelLED_WriteCounter:
 252              	.LFB6:
 245:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 246:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (PWM_WheelLED_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 249:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 250:Generated_Source\PSoC4/PWM_WheelLED.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Function Name: PWM_WheelLED_SetCompareMode
 252:Generated_Source\PSoC4/PWM_WheelLED.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 254:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 258:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM_WheelLED.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 10


 262:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Return:
 263:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  None
 264:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 265:Generated_Source\PSoC4/PWM_WheelLED.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM_WheelLED.c ****         void PWM_WheelLED_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM_WheelLED.c ****         {
 268:Generated_Source\PSoC4/PWM_WheelLED.c ****             #if(PWM_WheelLED_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 270:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #if(0 != PWM_WheelLED_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM_WheelLED.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_WheelLED_CTRL_CMPM
 272:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #else
 273:Generated_Source\PSoC4/PWM_WheelLED.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #endif /* (0 != PWM_WheelLED_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 276:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_CONTROL3 &= ((uint8)(~PWM_WheelLED_CTRL_CMPMODE1_MASK)); /*Clear Exist
 277:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 279:Generated_Source\PSoC4/PWM_WheelLED.c ****             #elif (PWM_WheelLED_UseControl)
 280:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 281:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #if(0 != PWM_WheelLED_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM_WheelLED.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_WheelLED_CTRL_CMP
 283:Generated_Source\PSoC4/PWM_WheelLED.c ****                                                 PWM_WheelLED_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #else
 285:Generated_Source\PSoC4/PWM_WheelLED.c ****                     uint8 comparemode1masked = comparemode & PWM_WheelLED_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #endif /* (0 != PWM_WheelLED_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 288:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #if(0 != PWM_WheelLED_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM_WheelLED.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_WheelLED_CTRL_CMP
 290:Generated_Source\PSoC4/PWM_WheelLED.c ****                                                PWM_WheelLED_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #else
 292:Generated_Source\PSoC4/PWM_WheelLED.c ****                     uint8 comparemode2masked = comparemode & PWM_WheelLED_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM_WheelLED.c ****                 #endif /* (0 != PWM_WheelLED_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 295:Generated_Source\PSoC4/PWM_WheelLED.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_CONTROL &= ((uint8)(~(PWM_WheelLED_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM_WheelLED.c ****                                             PWM_WheelLED_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 300:Generated_Source\PSoC4/PWM_WheelLED.c ****             #else
 301:Generated_Source\PSoC4/PWM_WheelLED.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM_WheelLED.c ****             #endif /* (PWM_WheelLED_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM_WheelLED.c ****         }
 304:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* PWM_WheelLED_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 306:Generated_Source\PSoC4/PWM_WheelLED.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 308:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 310:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 311:Generated_Source\PSoC4/PWM_WheelLED.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Function Name: PWM_WheelLED_SetCompareMode1
 313:Generated_Source\PSoC4/PWM_WheelLED.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 315:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 318:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Parameters:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 11


 319:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM_WheelLED.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 322:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Return:
 323:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  None
 324:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 325:Generated_Source\PSoC4/PWM_WheelLED.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_WheelLED.c ****         void PWM_WheelLED_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM_WheelLED.c ****         {
 328:Generated_Source\PSoC4/PWM_WheelLED.c ****             #if(0 != PWM_WheelLED_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM_WheelLED.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_WheelLED_CTRL_CMPMODE1
 330:Generated_Source\PSoC4/PWM_WheelLED.c ****                                            PWM_WheelLED_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM_WheelLED.c ****             #else
 332:Generated_Source\PSoC4/PWM_WheelLED.c ****                 uint8 comparemodemasked = comparemode & PWM_WheelLED_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM_WheelLED.c ****             #endif /* (0 != PWM_WheelLED_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 335:Generated_Source\PSoC4/PWM_WheelLED.c ****             #if (PWM_WheelLED_UseControl)
 336:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_CONTROL &= ((uint8)(~PWM_WheelLED_CTRL_CMPMODE1_MASK)); /*Clear existi
 337:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM_WheelLED.c ****             #endif /* (PWM_WheelLED_UseControl) */
 339:Generated_Source\PSoC4/PWM_WheelLED.c ****         }
 340:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* PWM_WheelLED_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 342:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (PWM_WheelLED_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 344:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 345:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_SetCompareMode2
 347:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 349:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 352:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM_WheelLED.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 356:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 357:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 358:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 359:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 362:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 363:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(0 != PWM_WheelLED_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM_WheelLED.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_WheelLED_CTRL_CMPMODE2_SHI
 365:Generated_Source\PSoC4/PWM_WheelLED.c ****                                                  PWM_WheelLED_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 367:Generated_Source\PSoC4/PWM_WheelLED.c ****             uint8 comparemodemasked = comparemode & PWM_WheelLED_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (0 != PWM_WheelLED_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 370:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if (PWM_WheelLED_UseControl)
 371:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_CONTROL &= ((uint8)(~PWM_WheelLED_CTRL_CMPMODE2_MASK)); /*Clear existing m
 372:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UseControl) */
 374:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 375:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /*PWM_WheelLED_CompareMode2SW */
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 12


 376:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 377:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 379:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 380:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (!PWM_WheelLED_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 382:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 383:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_WriteCounter
 385:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 387:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 393:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 396:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 397:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 398:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 399:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 402:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/PWM_WheelLED.c ****                                        
 405:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 253              		.loc 1 405 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 0200     		movs	r2, r0
 266 0008 FB1D     		adds	r3, r7, #7
 267 000a 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC4/PWM_WheelLED.c ****         CY_SET_REG8(PWM_WheelLED_COUNTER_LSB_PTR, counter);
 268              		.loc 1 406 0
 269 000c 034A     		ldr	r2, .L15
 270 000e FB1D     		adds	r3, r7, #7
 271 0010 1B78     		ldrb	r3, [r3]
 272 0012 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 273              		.loc 1 407 0
 274 0014 C046     		nop
 275 0016 BD46     		mov	sp, r7
 276 0018 02B0     		add	sp, sp, #8
 277              		@ sp needed
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 13


 278 001a 80BD     		pop	{r7, pc}
 279              	.L16:
 280              		.align	2
 281              	.L15:
 282 001c 03000F40 		.word	1074724867
 283              		.cfi_endproc
 284              	.LFE6:
 285              		.size	PWM_WheelLED_WriteCounter, .-PWM_WheelLED_WriteCounter
 286              		.section	.text.PWM_WheelLED_ReadCounter,"ax",%progbits
 287              		.align	2
 288              		.global	PWM_WheelLED_ReadCounter
 289              		.code	16
 290              		.thumb_func
 291              		.type	PWM_WheelLED_ReadCounter, %function
 292              	PWM_WheelLED_ReadCounter:
 293              	.LFB7:
 408:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 409:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 410:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadCounter
 412:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 414:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 418:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 420:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 421:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 422:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 424:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 294              		.loc 1 426 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM_WheelLED.c ****           (void)CY_GET_REG8(PWM_WheelLED_COUNTERCAP_LSB_PTR_8BIT);
 304              		.loc 1 430 0
 305 0004 034B     		ldr	r3, .L19
 306 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 432:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM_WheelLED.c ****         return (CY_GET_REG8(PWM_WheelLED_CAPTURE_LSB_PTR));
 307              		.loc 1 433 0
 308 0008 034B     		ldr	r3, .L19+4
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 14


 309 000a 1B78     		ldrb	r3, [r3]
 310 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 311              		.loc 1 434 0
 312 000e 1800     		movs	r0, r3
 313 0010 BD46     		mov	sp, r7
 314              		@ sp needed
 315 0012 80BD     		pop	{r7, pc}
 316              	.L20:
 317              		.align	2
 318              	.L19:
 319 0014 13000F40 		.word	1074724883
 320 0018 53000F40 		.word	1074724947
 321              		.cfi_endproc
 322              	.LFE7:
 323              		.size	PWM_WheelLED_ReadCounter, .-PWM_WheelLED_ReadCounter
 324              		.section	.text.PWM_WheelLED_ClearFIFO,"ax",%progbits
 325              		.align	2
 326              		.global	PWM_WheelLED_ClearFIFO
 327              		.code	16
 328              		.thumb_func
 329              		.type	PWM_WheelLED_ClearFIFO, %function
 330              	PWM_WheelLED_ClearFIFO:
 331              	.LFB8:
 435:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 436:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if (PWM_WheelLED_UseStatus)
 437:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 438:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 439:Generated_Source\PSoC4/PWM_WheelLED.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Function Name: PWM_WheelLED_ClearFIFO
 441:Generated_Source\PSoC4/PWM_WheelLED.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 443:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 446:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  None
 448:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 449:Generated_Source\PSoC4/PWM_WheelLED.c ****         * Return:
 450:Generated_Source\PSoC4/PWM_WheelLED.c ****         *  None
 451:Generated_Source\PSoC4/PWM_WheelLED.c ****         *
 452:Generated_Source\PSoC4/PWM_WheelLED.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM_WheelLED.c ****         void PWM_WheelLED_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM_WheelLED.c ****         {
 332              		.loc 1 454 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC4/PWM_WheelLED.c ****             while(0u != (PWM_WheelLED_ReadStatusRegister() & PWM_WheelLED_STATUS_FIFONEMPTY))
 342              		.loc 1 455 0
 343 0004 01E0     		b	.L22
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 15


 344              	.L23:
 456:Generated_Source\PSoC4/PWM_WheelLED.c ****             {
 457:Generated_Source\PSoC4/PWM_WheelLED.c ****                 (void)PWM_WheelLED_ReadCapture();
 345              		.loc 1 457 0
 346 0006 FFF7FEFF 		bl	PWM_WheelLED_ReadCapture
 347              	.L22:
 455:Generated_Source\PSoC4/PWM_WheelLED.c ****             while(0u != (PWM_WheelLED_ReadStatusRegister() & PWM_WheelLED_STATUS_FIFONEMPTY))
 348              		.loc 1 455 0
 349 000a FFF7FEFF 		bl	PWM_WheelLED_ReadStatusRegister
 350 000e 0300     		movs	r3, r0
 351 0010 1A00     		movs	r2, r3
 352 0012 1023     		movs	r3, #16
 353 0014 1340     		ands	r3, r2
 354 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC4/PWM_WheelLED.c ****             }
 459:Generated_Source\PSoC4/PWM_WheelLED.c ****         }
 355              		.loc 1 459 0
 356 0018 C046     		nop
 357 001a BD46     		mov	sp, r7
 358              		@ sp needed
 359 001c 80BD     		pop	{r7, pc}
 360              		.cfi_endproc
 361              	.LFE8:
 362              		.size	PWM_WheelLED_ClearFIFO, .-PWM_WheelLED_ClearFIFO
 363 001e C046     		.section	.text.PWM_WheelLED_WritePeriod,"ax",%progbits
 364              		.align	2
 365              		.global	PWM_WheelLED_WritePeriod
 366              		.code	16
 367              		.thumb_func
 368              		.type	PWM_WheelLED_WritePeriod, %function
 369              	PWM_WheelLED_WritePeriod:
 370              	.LFB9:
 460:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 461:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* PWM_WheelLED_UseStatus */
 462:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 463:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* !PWM_WheelLED_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 465:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 466:Generated_Source\PSoC4/PWM_WheelLED.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM_WheelLED.c **** * Function Name: PWM_WheelLED_WritePeriod
 468:Generated_Source\PSoC4/PWM_WheelLED.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 470:Generated_Source\PSoC4/PWM_WheelLED.c **** * Summary:
 471:Generated_Source\PSoC4/PWM_WheelLED.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM_WheelLED.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 474:Generated_Source\PSoC4/PWM_WheelLED.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM_WheelLED.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM_WheelLED.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 478:Generated_Source\PSoC4/PWM_WheelLED.c **** * Return:
 479:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
 480:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 481:Generated_Source\PSoC4/PWM_WheelLED.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM_WheelLED.c **** void PWM_WheelLED_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC4/PWM_WheelLED.c **** {
 371              		.loc 1 483 0
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 16


 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 8
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375 0000 80B5     		push	{r7, lr}
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 7, -8
 378              		.cfi_offset 14, -4
 379 0002 82B0     		sub	sp, sp, #8
 380              		.cfi_def_cfa_offset 16
 381 0004 00AF     		add	r7, sp, #0
 382              		.cfi_def_cfa_register 7
 383 0006 0200     		movs	r2, r0
 384 0008 FB1D     		adds	r3, r7, #7
 385 000a 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if(PWM_WheelLED_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM_WheelLED.c ****         CY_SET_REG16(PWM_WheelLED_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM_WheelLED.c ****     #else
 487:Generated_Source\PSoC4/PWM_WheelLED.c ****         CY_SET_REG8(PWM_WheelLED_PERIOD_LSB_PTR, period);
 386              		.loc 1 487 0
 387 000c 034A     		ldr	r2, .L25
 388 000e FB1D     		adds	r3, r7, #7
 389 0010 1B78     		ldrb	r3, [r3]
 390 0012 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM_WheelLED.c **** }
 391              		.loc 1 489 0
 392 0014 C046     		nop
 393 0016 BD46     		mov	sp, r7
 394 0018 02B0     		add	sp, sp, #8
 395              		@ sp needed
 396 001a 80BD     		pop	{r7, pc}
 397              	.L26:
 398              		.align	2
 399              	.L25:
 400 001c 43000F40 		.word	1074724931
 401              		.cfi_endproc
 402              	.LFE9:
 403              		.size	PWM_WheelLED_WritePeriod, .-PWM_WheelLED_WritePeriod
 404              		.section	.text.PWM_WheelLED_WriteCompare1,"ax",%progbits
 405              		.align	2
 406              		.global	PWM_WheelLED_WriteCompare1
 407              		.code	16
 408              		.thumb_func
 409              		.type	PWM_WheelLED_WriteCompare1, %function
 410              	PWM_WheelLED_WriteCompare1:
 411              	.LFB10:
 490:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 491:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (PWM_WheelLED_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 493:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 494:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_WriteCompare
 496:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 498:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 17


 501:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 505:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 508:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 509:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 510:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 511:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 515:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/PWM_WheelLED.c ****                                        
 518:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 519:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(PWM_WheelLED_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM_WheelLED.c ****             CY_SET_REG16(PWM_WheelLED_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 522:Generated_Source\PSoC4/PWM_WheelLED.c ****             CY_SET_REG8(PWM_WheelLED_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 525:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if (PWM_WheelLED_PWMMode == PWM_WheelLED__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM_WheelLED.c ****             #if(PWM_WheelLED_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM_WheelLED.c ****                 CY_SET_REG16(PWM_WheelLED_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM_WheelLED.c ****             #else
 529:Generated_Source\PSoC4/PWM_WheelLED.c ****                 CY_SET_REG8(PWM_WheelLED_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM_WheelLED.c ****             #endif /* (PWM_WheelLED_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_PWMMode == PWM_WheelLED__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 533:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 534:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 535:Generated_Source\PSoC4/PWM_WheelLED.c **** #else
 536:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 537:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 538:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_WriteCompare1
 540:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 542:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 543:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 548:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 551:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 552:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 553:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 554:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/PWM_WheelLED.c ****                                         
 557:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 18


 412              		.loc 1 557 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 0000 80B5     		push	{r7, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 82B0     		sub	sp, sp, #8
 421              		.cfi_def_cfa_offset 16
 422 0004 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 424 0006 0200     		movs	r2, r0
 425 0008 FB1D     		adds	r3, r7, #7
 426 000a 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(PWM_WheelLED_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM_WheelLED.c ****             CY_SET_REG16(PWM_WheelLED_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 561:Generated_Source\PSoC4/PWM_WheelLED.c ****             CY_SET_REG8(PWM_WheelLED_COMPARE1_LSB_PTR, compare);
 427              		.loc 1 561 0
 428 000c 034A     		ldr	r2, .L28
 429 000e FB1D     		adds	r3, r7, #7
 430 0010 1B78     		ldrb	r3, [r3]
 431 0012 1370     		strb	r3, [r2]
 562:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 432              		.loc 1 563 0
 433 0014 C046     		nop
 434 0016 BD46     		mov	sp, r7
 435 0018 02B0     		add	sp, sp, #8
 436              		@ sp needed
 437 001a 80BD     		pop	{r7, pc}
 438              	.L29:
 439              		.align	2
 440              	.L28:
 441 001c 23000F40 		.word	1074724899
 442              		.cfi_endproc
 443              	.LFE10:
 444              		.size	PWM_WheelLED_WriteCompare1, .-PWM_WheelLED_WriteCompare1
 445              		.section	.text.PWM_WheelLED_WriteCompare2,"ax",%progbits
 446              		.align	2
 447              		.global	PWM_WheelLED_WriteCompare2
 448              		.code	16
 449              		.thumb_func
 450              		.type	PWM_WheelLED_WriteCompare2, %function
 451              	PWM_WheelLED_WriteCompare2:
 452              	.LFB11:
 564:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 565:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 566:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_WriteCompare2
 568:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 570:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  The compare output will be driven high when the present counter value is
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 19


 574:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 577:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 580:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 581:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 582:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 583:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/PWM_WheelLED.c ****                                         
 586:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 453              		.loc 1 586 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 8
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 80B5     		push	{r7, lr}
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 82B0     		sub	sp, sp, #8
 462              		.cfi_def_cfa_offset 16
 463 0004 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 465 0006 0200     		movs	r2, r0
 466 0008 FB1D     		adds	r3, r7, #7
 467 000a 1A70     		strb	r2, [r3]
 587:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(PWM_WheelLED_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM_WheelLED.c ****             CY_SET_REG16(PWM_WheelLED_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 590:Generated_Source\PSoC4/PWM_WheelLED.c ****             CY_SET_REG8(PWM_WheelLED_COMPARE2_LSB_PTR, compare);
 468              		.loc 1 590 0
 469 000c 034A     		ldr	r2, .L31
 470 000e FB1D     		adds	r3, r7, #7
 471 0010 1B78     		ldrb	r3, [r3]
 472 0012 1370     		strb	r3, [r2]
 591:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 473              		.loc 1 592 0
 474 0014 C046     		nop
 475 0016 BD46     		mov	sp, r7
 476 0018 02B0     		add	sp, sp, #8
 477              		@ sp needed
 478 001a 80BD     		pop	{r7, pc}
 479              	.L32:
 480              		.align	2
 481              	.L31:
 482 001c 33000F40 		.word	1074724915
 483              		.cfi_endproc
 484              	.LFE11:
 485              		.size	PWM_WheelLED_WriteCompare2, .-PWM_WheelLED_WriteCompare2
 486              		.section	.text.PWM_WheelLED_SetInterruptMode,"ax",%progbits
 487              		.align	2
 488              		.global	PWM_WheelLED_SetInterruptMode
 489              		.code	16
 490              		.thumb_func
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 20


 491              		.type	PWM_WheelLED_SetInterruptMode, %function
 492              	PWM_WheelLED_SetInterruptMode:
 493              	.LFB12:
 593:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 595:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (PWM_WheelLED_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 597:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 598:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_WriteDeadTime
 600:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 602:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 605:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 608:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 609:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 610:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 611:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 614:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(!PWM_WheelLED_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM_WheelLED.c ****             CY_SET_REG8(PWM_WheelLED_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 618:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM_WheelLED.c ****             PWM_WheelLED_DEADBAND_COUNT &= ((uint8)(~PWM_WheelLED_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 622:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM_WheelLED.c ****             #if(PWM_WheelLED_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_WheelLED_DEADBAND_CO
 625:Generated_Source\PSoC4/PWM_WheelLED.c ****                                                     PWM_WheelLED_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM_WheelLED.c ****             #else
 627:Generated_Source\PSoC4/PWM_WheelLED.c ****                 PWM_WheelLED_DEADBAND_COUNT |= deadtime & PWM_WheelLED_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM_WheelLED.c ****             #endif /* (PWM_WheelLED_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 630:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (!PWM_WheelLED_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 632:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 633:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 634:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadDeadTime
 636:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 638:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 641:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 643:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 644:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 645:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 21


 647:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 650:Generated_Source\PSoC4/PWM_WheelLED.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(!PWM_WheelLED_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM_WheelLED.c ****             return (CY_GET_REG8(PWM_WheelLED_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 654:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 655:Generated_Source\PSoC4/PWM_WheelLED.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM_WheelLED.c ****             #if(PWM_WheelLED_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/PWM_WheelLED.c ****                 return ((uint8)(((uint8)(PWM_WheelLED_DEADBAND_COUNT & PWM_WheelLED_DEADBAND_COUNT_
 658:Generated_Source\PSoC4/PWM_WheelLED.c ****                                                                            PWM_WheelLED_DEADBAND_CO
 659:Generated_Source\PSoC4/PWM_WheelLED.c ****             #else
 660:Generated_Source\PSoC4/PWM_WheelLED.c ****                 return (PWM_WheelLED_DEADBAND_COUNT & PWM_WheelLED_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM_WheelLED.c ****             #endif /* (PWM_WheelLED_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (!PWM_WheelLED_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 664:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 666:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (PWM_WheelLED_UseStatus || PWM_WheelLED_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 668:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 669:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_SetInterruptMode
 671:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 673:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 677:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 680:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 681:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 682:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 683:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 494              		.loc 1 685 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 82B0     		sub	sp, sp, #8
 503              		.cfi_def_cfa_offset 16
 504 0004 00AF     		add	r7, sp, #0
 505              		.cfi_def_cfa_register 7
 506 0006 0200     		movs	r2, r0
 507 0008 FB1D     		adds	r3, r7, #7
 508 000a 1A70     		strb	r2, [r3]
 686:Generated_Source\PSoC4/PWM_WheelLED.c ****         CY_SET_REG8(PWM_WheelLED_STATUS_MASK_PTR, interruptMode);
 509              		.loc 1 686 0
 510 000c 034A     		ldr	r2, .L34
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 22


 511 000e FB1D     		adds	r3, r7, #7
 512 0010 1B78     		ldrb	r3, [r3]
 513 0012 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 514              		.loc 1 687 0
 515 0014 C046     		nop
 516 0016 BD46     		mov	sp, r7
 517 0018 02B0     		add	sp, sp, #8
 518              		@ sp needed
 519 001a 80BD     		pop	{r7, pc}
 520              	.L35:
 521              		.align	2
 522              	.L34:
 523 001c 83000F40 		.word	1074724995
 524              		.cfi_endproc
 525              	.LFE12:
 526              		.size	PWM_WheelLED_SetInterruptMode, .-PWM_WheelLED_SetInterruptMode
 527              		.section	.text.PWM_WheelLED_ReadStatusRegister,"ax",%progbits
 528              		.align	2
 529              		.global	PWM_WheelLED_ReadStatusRegister
 530              		.code	16
 531              		.thumb_func
 532              		.type	PWM_WheelLED_ReadStatusRegister, %function
 533              	PWM_WheelLED_ReadStatusRegister:
 534              	.LFB13:
 688:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 689:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 690:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 694:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 697:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 699:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 700:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 701:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 710:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 535              		.loc 1 712 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 7, -8
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 23


 542              		.cfi_offset 14, -4
 543 0002 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC4/PWM_WheelLED.c ****         return (CY_GET_REG8(PWM_WheelLED_STATUS_PTR));
 545              		.loc 1 713 0
 546 0004 024B     		ldr	r3, .L38
 547 0006 1B78     		ldrb	r3, [r3]
 548 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 549              		.loc 1 714 0
 550 000a 1800     		movs	r0, r3
 551 000c BD46     		mov	sp, r7
 552              		@ sp needed
 553 000e 80BD     		pop	{r7, pc}
 554              	.L39:
 555              		.align	2
 556              	.L38:
 557 0010 63000F40 		.word	1074724963
 558              		.cfi_endproc
 559              	.LFE13:
 560              		.size	PWM_WheelLED_ReadStatusRegister, .-PWM_WheelLED_ReadStatusRegister
 561              		.section	.text.PWM_WheelLED_ReadControlRegister,"ax",%progbits
 562              		.align	2
 563              		.global	PWM_WheelLED_ReadControlRegister
 564              		.code	16
 565              		.thumb_func
 566              		.type	PWM_WheelLED_ReadControlRegister, %function
 567              	PWM_WheelLED_ReadControlRegister:
 568              	.LFB14:
 715:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 716:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* (PWM_WheelLED_UseStatus || PWM_WheelLED_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 718:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 719:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (PWM_WheelLED_UseControl)
 720:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 721:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 722:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadControlRegister
 724:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 726:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 730:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 732:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 733:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 734:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 736:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 569              		.loc 1 738 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 8
 572              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 24


 573 0000 80B5     		push	{r7, lr}
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 82B0     		sub	sp, sp, #8
 578              		.cfi_def_cfa_offset 16
 579 0004 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC4/PWM_WheelLED.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 741:Generated_Source\PSoC4/PWM_WheelLED.c ****         result = CY_GET_REG8(PWM_WheelLED_CONTROL_PTR);
 581              		.loc 1 741 0
 582 0006 054A     		ldr	r2, .L42
 583 0008 FB1D     		adds	r3, r7, #7
 584 000a 1278     		ldrb	r2, [r2]
 585 000c 1A70     		strb	r2, [r3]
 742:Generated_Source\PSoC4/PWM_WheelLED.c ****         return (result);
 586              		.loc 1 742 0
 587 000e FB1D     		adds	r3, r7, #7
 588 0010 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 589              		.loc 1 743 0
 590 0012 1800     		movs	r0, r3
 591 0014 BD46     		mov	sp, r7
 592 0016 02B0     		add	sp, sp, #8
 593              		@ sp needed
 594 0018 80BD     		pop	{r7, pc}
 595              	.L43:
 596 001a C046     		.align	2
 597              	.L42:
 598 001c 73000F40 		.word	1074724979
 599              		.cfi_endproc
 600              	.LFE14:
 601              		.size	PWM_WheelLED_ReadControlRegister, .-PWM_WheelLED_ReadControlRegister
 602              		.section	.text.PWM_WheelLED_WriteControlRegister,"ax",%progbits
 603              		.align	2
 604              		.global	PWM_WheelLED_WriteControlRegister
 605              		.code	16
 606              		.thumb_func
 607              		.type	PWM_WheelLED_WriteControlRegister, %function
 608              	PWM_WheelLED_WriteControlRegister:
 609              	.LFB15:
 744:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 745:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 746:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_WriteControlRegister
 748:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 750:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 754:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [5:3] : Compare Mode2
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 25


 759:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 761:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 762:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 763:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 764:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM_WheelLED.c ****     void PWM_WheelLED_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 610              		.loc 1 766 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 8
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614 0000 80B5     		push	{r7, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 0002 82B0     		sub	sp, sp, #8
 619              		.cfi_def_cfa_offset 16
 620 0004 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 622 0006 0200     		movs	r2, r0
 623 0008 FB1D     		adds	r3, r7, #7
 624 000a 1A70     		strb	r2, [r3]
 767:Generated_Source\PSoC4/PWM_WheelLED.c ****         CY_SET_REG8(PWM_WheelLED_CONTROL_PTR, control);
 625              		.loc 1 767 0
 626 000c 034A     		ldr	r2, .L45
 627 000e FB1D     		adds	r3, r7, #7
 628 0010 1B78     		ldrb	r3, [r3]
 629 0012 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 630              		.loc 1 768 0
 631 0014 C046     		nop
 632 0016 BD46     		mov	sp, r7
 633 0018 02B0     		add	sp, sp, #8
 634              		@ sp needed
 635 001a 80BD     		pop	{r7, pc}
 636              	.L46:
 637              		.align	2
 638              	.L45:
 639 001c 73000F40 		.word	1074724979
 640              		.cfi_endproc
 641              	.LFE15:
 642              		.size	PWM_WheelLED_WriteControlRegister, .-PWM_WheelLED_WriteControlRegister
 643              		.section	.text.PWM_WheelLED_ReadCapture,"ax",%progbits
 644              		.align	2
 645              		.global	PWM_WheelLED_ReadCapture
 646              		.code	16
 647              		.thumb_func
 648              		.type	PWM_WheelLED_ReadCapture, %function
 649              	PWM_WheelLED_ReadCapture:
 650              	.LFB16:
 769:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 770:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* (PWM_WheelLED_UseControl) */
 771:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 772:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 773:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (!PWM_WheelLED_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM_WheelLED.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 26


 775:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 776:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadCapture
 778:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 780:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 783:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 785:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 786:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 787:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 789:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 651              		.loc 1 791 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC4/PWM_WheelLED.c ****         return (CY_GET_REG8(PWM_WheelLED_CAPTURE_LSB_PTR));
 661              		.loc 1 792 0
 662 0004 024B     		ldr	r3, .L49
 663 0006 1B78     		ldrb	r3, [r3]
 664 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 665              		.loc 1 793 0
 666 000a 1800     		movs	r0, r3
 667 000c BD46     		mov	sp, r7
 668              		@ sp needed
 669 000e 80BD     		pop	{r7, pc}
 670              	.L50:
 671              		.align	2
 672              	.L49:
 673 0010 53000F40 		.word	1074724947
 674              		.cfi_endproc
 675              	.LFE16:
 676              		.size	PWM_WheelLED_ReadCapture, .-PWM_WheelLED_ReadCapture
 677              		.section	.text.PWM_WheelLED_ReadCompare1,"ax",%progbits
 678              		.align	2
 679              		.global	PWM_WheelLED_ReadCompare1
 680              		.code	16
 681              		.thumb_func
 682              		.type	PWM_WheelLED_ReadCompare1, %function
 683              	PWM_WheelLED_ReadCompare1:
 684              	.LFB17:
 794:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 795:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* (!PWM_WheelLED_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 797:Generated_Source\PSoC4/PWM_WheelLED.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 27


 798:Generated_Source\PSoC4/PWM_WheelLED.c **** #if (PWM_WheelLED_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 800:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 801:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadCompare
 803:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 805:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 809:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 811:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 812:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 813:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 815:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 818:Generated_Source\PSoC4/PWM_WheelLED.c ****         #if(PWM_WheelLED_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM_WheelLED.c ****             return ((uint8)CY_GET_REG16(PWM_WheelLED_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM_WheelLED.c ****         #else
 821:Generated_Source\PSoC4/PWM_WheelLED.c ****             return (CY_GET_REG8(PWM_WheelLED_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC4/PWM_WheelLED.c ****         #endif /* (PWM_WheelLED_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 824:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 825:Generated_Source\PSoC4/PWM_WheelLED.c **** #else
 826:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 827:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 828:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadCompare1
 830:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 832:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 835:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 837:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 838:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 839:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 841:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 685              		.loc 1 843 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689 0000 80B5     		push	{r7, lr}
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 00AF     		add	r7, sp, #0
 694              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC4/PWM_WheelLED.c ****         return (CY_GET_REG8(PWM_WheelLED_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 28


 695              		.loc 1 844 0
 696 0004 024B     		ldr	r3, .L53
 697 0006 1B78     		ldrb	r3, [r3]
 698 0008 DBB2     		uxtb	r3, r3
 845:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 699              		.loc 1 845 0
 700 000a 1800     		movs	r0, r3
 701 000c BD46     		mov	sp, r7
 702              		@ sp needed
 703 000e 80BD     		pop	{r7, pc}
 704              	.L54:
 705              		.align	2
 706              	.L53:
 707 0010 23000F40 		.word	1074724899
 708              		.cfi_endproc
 709              	.LFE17:
 710              		.size	PWM_WheelLED_ReadCompare1, .-PWM_WheelLED_ReadCompare1
 711              		.section	.text.PWM_WheelLED_ReadCompare2,"ax",%progbits
 712              		.align	2
 713              		.global	PWM_WheelLED_ReadCompare2
 714              		.code	16
 715              		.thumb_func
 716              		.type	PWM_WheelLED_ReadCompare2, %function
 717              	PWM_WheelLED_ReadCompare2:
 718              	.LFB18:
 846:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 847:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 848:Generated_Source\PSoC4/PWM_WheelLED.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Function Name: PWM_WheelLED_ReadCompare2
 850:Generated_Source\PSoC4/PWM_WheelLED.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 852:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 855:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  None
 857:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 858:Generated_Source\PSoC4/PWM_WheelLED.c ****     * Return:
 859:Generated_Source\PSoC4/PWM_WheelLED.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM_WheelLED.c ****     *
 861:Generated_Source\PSoC4/PWM_WheelLED.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM_WheelLED.c ****     uint8 PWM_WheelLED_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM_WheelLED.c ****     {
 719              		.loc 1 863 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC4/PWM_WheelLED.c ****         return (CY_GET_REG8(PWM_WheelLED_COMPARE2_LSB_PTR));
 729              		.loc 1 864 0
 730 0004 024B     		ldr	r3, .L57
 731 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 29


 732 0008 DBB2     		uxtb	r3, r3
 865:Generated_Source\PSoC4/PWM_WheelLED.c ****     }
 733              		.loc 1 865 0
 734 000a 1800     		movs	r0, r3
 735 000c BD46     		mov	sp, r7
 736              		@ sp needed
 737 000e 80BD     		pop	{r7, pc}
 738              	.L58:
 739              		.align	2
 740              	.L57:
 741 0010 33000F40 		.word	1074724915
 742              		.cfi_endproc
 743              	.LFE18:
 744              		.size	PWM_WheelLED_ReadCompare2, .-PWM_WheelLED_ReadCompare2
 745              		.section	.text.PWM_WheelLED_ReadPeriod,"ax",%progbits
 746              		.align	2
 747              		.global	PWM_WheelLED_ReadPeriod
 748              		.code	16
 749              		.thumb_func
 750              		.type	PWM_WheelLED_ReadPeriod, %function
 751              	PWM_WheelLED_ReadPeriod:
 752              	.LFB19:
 866:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 867:Generated_Source\PSoC4/PWM_WheelLED.c **** #endif /* (PWM_WheelLED_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 869:Generated_Source\PSoC4/PWM_WheelLED.c **** 
 870:Generated_Source\PSoC4/PWM_WheelLED.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM_WheelLED.c **** * Function Name: PWM_WheelLED_ReadPeriod
 872:Generated_Source\PSoC4/PWM_WheelLED.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 874:Generated_Source\PSoC4/PWM_WheelLED.c **** * Summary:
 875:Generated_Source\PSoC4/PWM_WheelLED.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 877:Generated_Source\PSoC4/PWM_WheelLED.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM_WheelLED.c **** *  None
 879:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 880:Generated_Source\PSoC4/PWM_WheelLED.c **** * Return:
 881:Generated_Source\PSoC4/PWM_WheelLED.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM_WheelLED.c **** *
 883:Generated_Source\PSoC4/PWM_WheelLED.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM_WheelLED.c **** uint8 PWM_WheelLED_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM_WheelLED.c **** {
 753              		.loc 1 885 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 80B5     		push	{r7, lr}
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC4/PWM_WheelLED.c ****     #if(PWM_WheelLED_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM_WheelLED.c ****         return ((uint8)CY_GET_REG16(PWM_WheelLED_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM_WheelLED.c ****     #else
 889:Generated_Source\PSoC4/PWM_WheelLED.c ****         return (CY_GET_REG8(PWM_WheelLED_PERIOD_LSB_PTR));
 763              		.loc 1 889 0
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 30


 764 0004 024B     		ldr	r3, .L61
 765 0006 1B78     		ldrb	r3, [r3]
 766 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC4/PWM_WheelLED.c ****     #endif /* (PWM_WheelLED_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM_WheelLED.c **** }
 767              		.loc 1 891 0
 768 000a 1800     		movs	r0, r3
 769 000c BD46     		mov	sp, r7
 770              		@ sp needed
 771 000e 80BD     		pop	{r7, pc}
 772              	.L62:
 773              		.align	2
 774              	.L61:
 775 0010 43000F40 		.word	1074724931
 776              		.cfi_endproc
 777              	.LFE19:
 778              		.size	PWM_WheelLED_ReadPeriod, .-PWM_WheelLED_ReadPeriod
 779              		.text
 780              	.Letext0:
 781              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 782              		.section	.debug_info,"",%progbits
 783              	.Ldebug_info0:
 784 0000 C2020000 		.4byte	0x2c2
 785 0004 0400     		.2byte	0x4
 786 0006 00000000 		.4byte	.Ldebug_abbrev0
 787 000a 04       		.byte	0x4
 788 000b 01       		.uleb128 0x1
 789 000c 4B010000 		.4byte	.LASF41
 790 0010 0C       		.byte	0xc
 791 0011 BF030000 		.4byte	.LASF42
 792 0015 54020000 		.4byte	.LASF43
 793 0019 00000000 		.4byte	.Ldebug_ranges0+0
 794 001d 00000000 		.4byte	0
 795 0021 00000000 		.4byte	.Ldebug_line0
 796 0025 02       		.uleb128 0x2
 797 0026 01       		.byte	0x1
 798 0027 06       		.byte	0x6
 799 0028 93030000 		.4byte	.LASF0
 800 002c 02       		.uleb128 0x2
 801 002d 01       		.byte	0x1
 802 002e 08       		.byte	0x8
 803 002f 18010000 		.4byte	.LASF1
 804 0033 02       		.uleb128 0x2
 805 0034 02       		.byte	0x2
 806 0035 05       		.byte	0x5
 807 0036 6F030000 		.4byte	.LASF2
 808 003a 02       		.uleb128 0x2
 809 003b 02       		.byte	0x2
 810 003c 07       		.byte	0x7
 811 003d 60000000 		.4byte	.LASF3
 812 0041 02       		.uleb128 0x2
 813 0042 04       		.byte	0x4
 814 0043 05       		.byte	0x5
 815 0044 79030000 		.4byte	.LASF4
 816 0048 02       		.uleb128 0x2
 817 0049 04       		.byte	0x4
 818 004a 07       		.byte	0x7
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 31


 819 004b 2B010000 		.4byte	.LASF5
 820 004f 02       		.uleb128 0x2
 821 0050 08       		.byte	0x8
 822 0051 05       		.byte	0x5
 823 0052 53030000 		.4byte	.LASF6
 824 0056 02       		.uleb128 0x2
 825 0057 08       		.byte	0x8
 826 0058 07       		.byte	0x7
 827 0059 9B020000 		.4byte	.LASF7
 828 005d 03       		.uleb128 0x3
 829 005e 04       		.byte	0x4
 830 005f 05       		.byte	0x5
 831 0060 696E7400 		.ascii	"int\000"
 832 0064 02       		.uleb128 0x2
 833 0065 04       		.byte	0x4
 834 0066 07       		.byte	0x7
 835 0067 47020000 		.4byte	.LASF8
 836 006b 04       		.uleb128 0x4
 837 006c 3D010000 		.4byte	.LASF12
 838 0070 02       		.byte	0x2
 839 0071 E401     		.2byte	0x1e4
 840 0073 2C000000 		.4byte	0x2c
 841 0077 02       		.uleb128 0x2
 842 0078 04       		.byte	0x4
 843 0079 04       		.byte	0x4
 844 007a EA000000 		.4byte	.LASF9
 845 007e 02       		.uleb128 0x2
 846 007f 08       		.byte	0x8
 847 0080 04       		.byte	0x4
 848 0081 FB010000 		.4byte	.LASF10
 849 0085 02       		.uleb128 0x2
 850 0086 01       		.byte	0x1
 851 0087 08       		.byte	0x8
 852 0088 82030000 		.4byte	.LASF11
 853 008c 04       		.uleb128 0x4
 854 008d 26010000 		.4byte	.LASF13
 855 0091 02       		.byte	0x2
 856 0092 8E02     		.2byte	0x28e
 857 0094 98000000 		.4byte	0x98
 858 0098 05       		.uleb128 0x5
 859 0099 6B000000 		.4byte	0x6b
 860 009d 02       		.uleb128 0x2
 861 009e 08       		.byte	0x8
 862 009f 04       		.byte	0x4
 863 00a0 87030000 		.4byte	.LASF14
 864 00a4 02       		.uleb128 0x2
 865 00a5 04       		.byte	0x4
 866 00a6 07       		.byte	0x7
 867 00a7 10030000 		.4byte	.LASF15
 868 00ab 06       		.uleb128 0x6
 869 00ac C5000000 		.4byte	.LASF18
 870 00b0 01       		.byte	0x1
 871 00b1 37       		.byte	0x37
 872 00b2 00000000 		.4byte	.LFB2
 873 00b6 24000000 		.4byte	.LFE2-.LFB2
 874 00ba 01       		.uleb128 0x1
 875 00bb 9C       		.byte	0x9c
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 32


 876 00bc 07       		.uleb128 0x7
 877 00bd 02020000 		.4byte	.LASF21
 878 00c1 01       		.byte	0x1
 879 00c2 54       		.byte	0x54
 880 00c3 00000000 		.4byte	.LFB3
 881 00c7 88000000 		.4byte	.LFE3-.LFB3
 882 00cb 01       		.uleb128 0x1
 883 00cc 9C       		.byte	0x9c
 884 00cd EE000000 		.4byte	0xee
 885 00d1 08       		.uleb128 0x8
 886 00d2 0B030000 		.4byte	.LASF16
 887 00d6 01       		.byte	0x1
 888 00d7 57       		.byte	0x57
 889 00d8 6B000000 		.4byte	0x6b
 890 00dc 02       		.uleb128 0x2
 891 00dd 91       		.byte	0x91
 892 00de 6F       		.sleb128 -17
 893 00df 08       		.uleb128 0x8
 894 00e0 A9000000 		.4byte	.LASF17
 895 00e4 01       		.byte	0x1
 896 00e5 5D       		.byte	0x5d
 897 00e6 6B000000 		.4byte	0x6b
 898 00ea 02       		.uleb128 0x2
 899 00eb 91       		.byte	0x91
 900 00ec 6E       		.sleb128 -18
 901 00ed 00       		.byte	0
 902 00ee 09       		.uleb128 0x9
 903 00ef 00000000 		.4byte	.LASF19
 904 00f3 01       		.byte	0x1
 905 00f4 C7       		.byte	0xc7
 906 00f5 00000000 		.4byte	.LFB4
 907 00f9 20000000 		.4byte	.LFE4-.LFB4
 908 00fd 01       		.uleb128 0x1
 909 00fe 9C       		.byte	0x9c
 910 00ff 09       		.uleb128 0x9
 911 0100 D8000000 		.4byte	.LASF20
 912 0104 01       		.byte	0x1
 913 0105 E9       		.byte	0xe9
 914 0106 00000000 		.4byte	.LFB5
 915 010a 20000000 		.4byte	.LFE5-.LFB5
 916 010e 01       		.uleb128 0x1
 917 010f 9C       		.byte	0x9c
 918 0110 0A       		.uleb128 0xa
 919 0111 14020000 		.4byte	.LASF22
 920 0115 01       		.byte	0x1
 921 0116 9301     		.2byte	0x193
 922 0118 00000000 		.4byte	.LFB6
 923 011c 20000000 		.4byte	.LFE6-.LFB6
 924 0120 01       		.uleb128 0x1
 925 0121 9C       		.byte	0x9c
 926 0122 36010000 		.4byte	0x136
 927 0126 0B       		.uleb128 0xb
 928 0127 F0000000 		.4byte	.LASF25
 929 012b 01       		.byte	0x1
 930 012c 9301     		.2byte	0x193
 931 012e 6B000000 		.4byte	0x6b
 932 0132 02       		.uleb128 0x2
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 33


 933 0133 91       		.byte	0x91
 934 0134 77       		.sleb128 -9
 935 0135 00       		.byte	0
 936 0136 0C       		.uleb128 0xc
 937 0137 3A030000 		.4byte	.LASF32
 938 013b 01       		.byte	0x1
 939 013c A901     		.2byte	0x1a9
 940 013e 6B000000 		.4byte	0x6b
 941 0142 00000000 		.4byte	.LFB7
 942 0146 1C000000 		.4byte	.LFE7-.LFB7
 943 014a 01       		.uleb128 0x1
 944 014b 9C       		.byte	0x9c
 945 014c 0D       		.uleb128 0xd
 946 014d 49000000 		.4byte	.LASF23
 947 0151 01       		.byte	0x1
 948 0152 C501     		.2byte	0x1c5
 949 0154 00000000 		.4byte	.LFB8
 950 0158 1E000000 		.4byte	.LFE8-.LFB8
 951 015c 01       		.uleb128 0x1
 952 015d 9C       		.byte	0x9c
 953 015e 0A       		.uleb128 0xa
 954 015f 14000000 		.4byte	.LASF24
 955 0163 01       		.byte	0x1
 956 0164 E201     		.2byte	0x1e2
 957 0166 00000000 		.4byte	.LFB9
 958 016a 20000000 		.4byte	.LFE9-.LFB9
 959 016e 01       		.uleb128 0x1
 960 016f 9C       		.byte	0x9c
 961 0170 84010000 		.4byte	0x184
 962 0174 0B       		.uleb128 0xb
 963 0175 42000000 		.4byte	.LASF26
 964 0179 01       		.byte	0x1
 965 017a E201     		.2byte	0x1e2
 966 017c 6B000000 		.4byte	0x6b
 967 0180 02       		.uleb128 0x2
 968 0181 91       		.byte	0x91
 969 0182 77       		.sleb128 -9
 970 0183 00       		.byte	0
 971 0184 0A       		.uleb128 0xa
 972 0185 73000000 		.4byte	.LASF27
 973 0189 01       		.byte	0x1
 974 018a 2B02     		.2byte	0x22b
 975 018c 00000000 		.4byte	.LFB10
 976 0190 20000000 		.4byte	.LFE10-.LFB10
 977 0194 01       		.uleb128 0x1
 978 0195 9C       		.byte	0x9c
 979 0196 AA010000 		.4byte	0x1aa
 980 019a 0B       		.uleb128 0xb
 981 019b 9F030000 		.4byte	.LASF28
 982 019f 01       		.byte	0x1
 983 01a0 2B02     		.2byte	0x22b
 984 01a2 6B000000 		.4byte	0x6b
 985 01a6 02       		.uleb128 0x2
 986 01a7 91       		.byte	0x91
 987 01a8 77       		.sleb128 -9
 988 01a9 00       		.byte	0
 989 01aa 0A       		.uleb128 0xa
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 34


 990 01ab 8E000000 		.4byte	.LASF29
 991 01af 01       		.byte	0x1
 992 01b0 4802     		.2byte	0x248
 993 01b2 00000000 		.4byte	.LFB11
 994 01b6 20000000 		.4byte	.LFE11-.LFB11
 995 01ba 01       		.uleb128 0x1
 996 01bb 9C       		.byte	0x9c
 997 01bc D0010000 		.4byte	0x1d0
 998 01c0 0B       		.uleb128 0xb
 999 01c1 9F030000 		.4byte	.LASF28
 1000 01c5 01       		.byte	0x1
 1001 01c6 4802     		.2byte	0x248
 1002 01c8 6B000000 		.4byte	0x6b
 1003 01cc 02       		.uleb128 0x2
 1004 01cd 91       		.byte	0x91
 1005 01ce 77       		.sleb128 -9
 1006 01cf 00       		.byte	0
 1007 01d0 0A       		.uleb128 0xa
 1008 01d1 ED020000 		.4byte	.LASF30
 1009 01d5 01       		.byte	0x1
 1010 01d6 AC02     		.2byte	0x2ac
 1011 01d8 00000000 		.4byte	.LFB12
 1012 01dc 20000000 		.4byte	.LFE12-.LFB12
 1013 01e0 01       		.uleb128 0x1
 1014 01e1 9C       		.byte	0x9c
 1015 01e2 F6010000 		.4byte	0x1f6
 1016 01e6 0B       		.uleb128 0xb
 1017 01e7 61030000 		.4byte	.LASF31
 1018 01eb 01       		.byte	0x1
 1019 01ec AC02     		.2byte	0x2ac
 1020 01ee 6B000000 		.4byte	0x6b
 1021 01f2 02       		.uleb128 0x2
 1022 01f3 91       		.byte	0x91
 1023 01f4 77       		.sleb128 -9
 1024 01f5 00       		.byte	0
 1025 01f6 0C       		.uleb128 0xc
 1026 01f7 F8000000 		.4byte	.LASF33
 1027 01fb 01       		.byte	0x1
 1028 01fc C702     		.2byte	0x2c7
 1029 01fe 6B000000 		.4byte	0x6b
 1030 0202 00000000 		.4byte	.LFB13
 1031 0206 14000000 		.4byte	.LFE13-.LFB13
 1032 020a 01       		.uleb128 0x1
 1033 020b 9C       		.byte	0x9c
 1034 020c 0E       		.uleb128 0xe
 1035 020d 19030000 		.4byte	.LASF44
 1036 0211 01       		.byte	0x1
 1037 0212 E102     		.2byte	0x2e1
 1038 0214 6B000000 		.4byte	0x6b
 1039 0218 00000000 		.4byte	.LFB14
 1040 021c 20000000 		.4byte	.LFE14-.LFB14
 1041 0220 01       		.uleb128 0x1
 1042 0221 9C       		.byte	0x9c
 1043 0222 36020000 		.4byte	0x236
 1044 0226 0F       		.uleb128 0xf
 1045 0227 CC020000 		.4byte	.LASF34
 1046 022b 01       		.byte	0x1
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 35


 1047 022c E302     		.2byte	0x2e3
 1048 022e 6B000000 		.4byte	0x6b
 1049 0232 02       		.uleb128 0x2
 1050 0233 91       		.byte	0x91
 1051 0234 77       		.sleb128 -9
 1052 0235 00       		.byte	0
 1053 0236 0A       		.uleb128 0xa
 1054 0237 D9010000 		.4byte	.LASF35
 1055 023b 01       		.byte	0x1
 1056 023c FD02     		.2byte	0x2fd
 1057 023e 00000000 		.4byte	.LFB15
 1058 0242 20000000 		.4byte	.LFE15-.LFB15
 1059 0246 01       		.uleb128 0x1
 1060 0247 9C       		.byte	0x9c
 1061 0248 5C020000 		.4byte	0x25c
 1062 024c 0B       		.uleb128 0xb
 1063 024d 43010000 		.4byte	.LASF36
 1064 0251 01       		.byte	0x1
 1065 0252 FD02     		.2byte	0x2fd
 1066 0254 6B000000 		.4byte	0x6b
 1067 0258 02       		.uleb128 0x2
 1068 0259 91       		.byte	0x91
 1069 025a 77       		.sleb128 -9
 1070 025b 00       		.byte	0
 1071 025c 0C       		.uleb128 0xc
 1072 025d 2E020000 		.4byte	.LASF37
 1073 0261 01       		.byte	0x1
 1074 0262 1603     		.2byte	0x316
 1075 0264 6B000000 		.4byte	0x6b
 1076 0268 00000000 		.4byte	.LFB16
 1077 026c 14000000 		.4byte	.LFE16-.LFB16
 1078 0270 01       		.uleb128 0x1
 1079 0271 9C       		.byte	0x9c
 1080 0272 0C       		.uleb128 0xc
 1081 0273 D3020000 		.4byte	.LASF38
 1082 0277 01       		.byte	0x1
 1083 0278 4A03     		.2byte	0x34a
 1084 027a 6B000000 		.4byte	0x6b
 1085 027e 00000000 		.4byte	.LFB17
 1086 0282 14000000 		.4byte	.LFE17-.LFB17
 1087 0286 01       		.uleb128 0x1
 1088 0287 9C       		.byte	0x9c
 1089 0288 0C       		.uleb128 0xc
 1090 0289 B2020000 		.4byte	.LASF39
 1091 028d 01       		.byte	0x1
 1092 028e 5E03     		.2byte	0x35e
 1093 0290 6B000000 		.4byte	0x6b
 1094 0294 00000000 		.4byte	.LFB18
 1095 0298 14000000 		.4byte	.LFE18-.LFB18
 1096 029c 01       		.uleb128 0x1
 1097 029d 9C       		.byte	0x9c
 1098 029e 0C       		.uleb128 0xc
 1099 029f A7030000 		.4byte	.LASF40
 1100 02a3 01       		.byte	0x1
 1101 02a4 7403     		.2byte	0x374
 1102 02a6 6B000000 		.4byte	0x6b
 1103 02aa 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 36


 1104 02ae 14000000 		.4byte	.LFE19-.LFB19
 1105 02b2 01       		.uleb128 0x1
 1106 02b3 9C       		.byte	0x9c
 1107 02b4 10       		.uleb128 0x10
 1108 02b5 2D000000 		.4byte	.LASF45
 1109 02b9 01       		.byte	0x1
 1110 02ba 20       		.byte	0x20
 1111 02bb 6B000000 		.4byte	0x6b
 1112 02bf 05       		.uleb128 0x5
 1113 02c0 03       		.byte	0x3
 1114 02c1 00000000 		.4byte	PWM_WheelLED_initVar
 1115 02c5 00       		.byte	0
 1116              		.section	.debug_abbrev,"",%progbits
 1117              	.Ldebug_abbrev0:
 1118 0000 01       		.uleb128 0x1
 1119 0001 11       		.uleb128 0x11
 1120 0002 01       		.byte	0x1
 1121 0003 25       		.uleb128 0x25
 1122 0004 0E       		.uleb128 0xe
 1123 0005 13       		.uleb128 0x13
 1124 0006 0B       		.uleb128 0xb
 1125 0007 03       		.uleb128 0x3
 1126 0008 0E       		.uleb128 0xe
 1127 0009 1B       		.uleb128 0x1b
 1128 000a 0E       		.uleb128 0xe
 1129 000b 55       		.uleb128 0x55
 1130 000c 17       		.uleb128 0x17
 1131 000d 11       		.uleb128 0x11
 1132 000e 01       		.uleb128 0x1
 1133 000f 10       		.uleb128 0x10
 1134 0010 17       		.uleb128 0x17
 1135 0011 00       		.byte	0
 1136 0012 00       		.byte	0
 1137 0013 02       		.uleb128 0x2
 1138 0014 24       		.uleb128 0x24
 1139 0015 00       		.byte	0
 1140 0016 0B       		.uleb128 0xb
 1141 0017 0B       		.uleb128 0xb
 1142 0018 3E       		.uleb128 0x3e
 1143 0019 0B       		.uleb128 0xb
 1144 001a 03       		.uleb128 0x3
 1145 001b 0E       		.uleb128 0xe
 1146 001c 00       		.byte	0
 1147 001d 00       		.byte	0
 1148 001e 03       		.uleb128 0x3
 1149 001f 24       		.uleb128 0x24
 1150 0020 00       		.byte	0
 1151 0021 0B       		.uleb128 0xb
 1152 0022 0B       		.uleb128 0xb
 1153 0023 3E       		.uleb128 0x3e
 1154 0024 0B       		.uleb128 0xb
 1155 0025 03       		.uleb128 0x3
 1156 0026 08       		.uleb128 0x8
 1157 0027 00       		.byte	0
 1158 0028 00       		.byte	0
 1159 0029 04       		.uleb128 0x4
 1160 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 37


 1161 002b 00       		.byte	0
 1162 002c 03       		.uleb128 0x3
 1163 002d 0E       		.uleb128 0xe
 1164 002e 3A       		.uleb128 0x3a
 1165 002f 0B       		.uleb128 0xb
 1166 0030 3B       		.uleb128 0x3b
 1167 0031 05       		.uleb128 0x5
 1168 0032 49       		.uleb128 0x49
 1169 0033 13       		.uleb128 0x13
 1170 0034 00       		.byte	0
 1171 0035 00       		.byte	0
 1172 0036 05       		.uleb128 0x5
 1173 0037 35       		.uleb128 0x35
 1174 0038 00       		.byte	0
 1175 0039 49       		.uleb128 0x49
 1176 003a 13       		.uleb128 0x13
 1177 003b 00       		.byte	0
 1178 003c 00       		.byte	0
 1179 003d 06       		.uleb128 0x6
 1180 003e 2E       		.uleb128 0x2e
 1181 003f 00       		.byte	0
 1182 0040 3F       		.uleb128 0x3f
 1183 0041 19       		.uleb128 0x19
 1184 0042 03       		.uleb128 0x3
 1185 0043 0E       		.uleb128 0xe
 1186 0044 3A       		.uleb128 0x3a
 1187 0045 0B       		.uleb128 0xb
 1188 0046 3B       		.uleb128 0x3b
 1189 0047 0B       		.uleb128 0xb
 1190 0048 27       		.uleb128 0x27
 1191 0049 19       		.uleb128 0x19
 1192 004a 11       		.uleb128 0x11
 1193 004b 01       		.uleb128 0x1
 1194 004c 12       		.uleb128 0x12
 1195 004d 06       		.uleb128 0x6
 1196 004e 40       		.uleb128 0x40
 1197 004f 18       		.uleb128 0x18
 1198 0050 9642     		.uleb128 0x2116
 1199 0052 19       		.uleb128 0x19
 1200 0053 00       		.byte	0
 1201 0054 00       		.byte	0
 1202 0055 07       		.uleb128 0x7
 1203 0056 2E       		.uleb128 0x2e
 1204 0057 01       		.byte	0x1
 1205 0058 3F       		.uleb128 0x3f
 1206 0059 19       		.uleb128 0x19
 1207 005a 03       		.uleb128 0x3
 1208 005b 0E       		.uleb128 0xe
 1209 005c 3A       		.uleb128 0x3a
 1210 005d 0B       		.uleb128 0xb
 1211 005e 3B       		.uleb128 0x3b
 1212 005f 0B       		.uleb128 0xb
 1213 0060 27       		.uleb128 0x27
 1214 0061 19       		.uleb128 0x19
 1215 0062 11       		.uleb128 0x11
 1216 0063 01       		.uleb128 0x1
 1217 0064 12       		.uleb128 0x12
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 38


 1218 0065 06       		.uleb128 0x6
 1219 0066 40       		.uleb128 0x40
 1220 0067 18       		.uleb128 0x18
 1221 0068 9642     		.uleb128 0x2116
 1222 006a 19       		.uleb128 0x19
 1223 006b 01       		.uleb128 0x1
 1224 006c 13       		.uleb128 0x13
 1225 006d 00       		.byte	0
 1226 006e 00       		.byte	0
 1227 006f 08       		.uleb128 0x8
 1228 0070 34       		.uleb128 0x34
 1229 0071 00       		.byte	0
 1230 0072 03       		.uleb128 0x3
 1231 0073 0E       		.uleb128 0xe
 1232 0074 3A       		.uleb128 0x3a
 1233 0075 0B       		.uleb128 0xb
 1234 0076 3B       		.uleb128 0x3b
 1235 0077 0B       		.uleb128 0xb
 1236 0078 49       		.uleb128 0x49
 1237 0079 13       		.uleb128 0x13
 1238 007a 02       		.uleb128 0x2
 1239 007b 18       		.uleb128 0x18
 1240 007c 00       		.byte	0
 1241 007d 00       		.byte	0
 1242 007e 09       		.uleb128 0x9
 1243 007f 2E       		.uleb128 0x2e
 1244 0080 00       		.byte	0
 1245 0081 3F       		.uleb128 0x3f
 1246 0082 19       		.uleb128 0x19
 1247 0083 03       		.uleb128 0x3
 1248 0084 0E       		.uleb128 0xe
 1249 0085 3A       		.uleb128 0x3a
 1250 0086 0B       		.uleb128 0xb
 1251 0087 3B       		.uleb128 0x3b
 1252 0088 0B       		.uleb128 0xb
 1253 0089 27       		.uleb128 0x27
 1254 008a 19       		.uleb128 0x19
 1255 008b 11       		.uleb128 0x11
 1256 008c 01       		.uleb128 0x1
 1257 008d 12       		.uleb128 0x12
 1258 008e 06       		.uleb128 0x6
 1259 008f 40       		.uleb128 0x40
 1260 0090 18       		.uleb128 0x18
 1261 0091 9742     		.uleb128 0x2117
 1262 0093 19       		.uleb128 0x19
 1263 0094 00       		.byte	0
 1264 0095 00       		.byte	0
 1265 0096 0A       		.uleb128 0xa
 1266 0097 2E       		.uleb128 0x2e
 1267 0098 01       		.byte	0x1
 1268 0099 3F       		.uleb128 0x3f
 1269 009a 19       		.uleb128 0x19
 1270 009b 03       		.uleb128 0x3
 1271 009c 0E       		.uleb128 0xe
 1272 009d 3A       		.uleb128 0x3a
 1273 009e 0B       		.uleb128 0xb
 1274 009f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 39


 1275 00a0 05       		.uleb128 0x5
 1276 00a1 27       		.uleb128 0x27
 1277 00a2 19       		.uleb128 0x19
 1278 00a3 11       		.uleb128 0x11
 1279 00a4 01       		.uleb128 0x1
 1280 00a5 12       		.uleb128 0x12
 1281 00a6 06       		.uleb128 0x6
 1282 00a7 40       		.uleb128 0x40
 1283 00a8 18       		.uleb128 0x18
 1284 00a9 9742     		.uleb128 0x2117
 1285 00ab 19       		.uleb128 0x19
 1286 00ac 01       		.uleb128 0x1
 1287 00ad 13       		.uleb128 0x13
 1288 00ae 00       		.byte	0
 1289 00af 00       		.byte	0
 1290 00b0 0B       		.uleb128 0xb
 1291 00b1 05       		.uleb128 0x5
 1292 00b2 00       		.byte	0
 1293 00b3 03       		.uleb128 0x3
 1294 00b4 0E       		.uleb128 0xe
 1295 00b5 3A       		.uleb128 0x3a
 1296 00b6 0B       		.uleb128 0xb
 1297 00b7 3B       		.uleb128 0x3b
 1298 00b8 05       		.uleb128 0x5
 1299 00b9 49       		.uleb128 0x49
 1300 00ba 13       		.uleb128 0x13
 1301 00bb 02       		.uleb128 0x2
 1302 00bc 18       		.uleb128 0x18
 1303 00bd 00       		.byte	0
 1304 00be 00       		.byte	0
 1305 00bf 0C       		.uleb128 0xc
 1306 00c0 2E       		.uleb128 0x2e
 1307 00c1 00       		.byte	0
 1308 00c2 3F       		.uleb128 0x3f
 1309 00c3 19       		.uleb128 0x19
 1310 00c4 03       		.uleb128 0x3
 1311 00c5 0E       		.uleb128 0xe
 1312 00c6 3A       		.uleb128 0x3a
 1313 00c7 0B       		.uleb128 0xb
 1314 00c8 3B       		.uleb128 0x3b
 1315 00c9 05       		.uleb128 0x5
 1316 00ca 27       		.uleb128 0x27
 1317 00cb 19       		.uleb128 0x19
 1318 00cc 49       		.uleb128 0x49
 1319 00cd 13       		.uleb128 0x13
 1320 00ce 11       		.uleb128 0x11
 1321 00cf 01       		.uleb128 0x1
 1322 00d0 12       		.uleb128 0x12
 1323 00d1 06       		.uleb128 0x6
 1324 00d2 40       		.uleb128 0x40
 1325 00d3 18       		.uleb128 0x18
 1326 00d4 9742     		.uleb128 0x2117
 1327 00d6 19       		.uleb128 0x19
 1328 00d7 00       		.byte	0
 1329 00d8 00       		.byte	0
 1330 00d9 0D       		.uleb128 0xd
 1331 00da 2E       		.uleb128 0x2e
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 40


 1332 00db 00       		.byte	0
 1333 00dc 3F       		.uleb128 0x3f
 1334 00dd 19       		.uleb128 0x19
 1335 00de 03       		.uleb128 0x3
 1336 00df 0E       		.uleb128 0xe
 1337 00e0 3A       		.uleb128 0x3a
 1338 00e1 0B       		.uleb128 0xb
 1339 00e2 3B       		.uleb128 0x3b
 1340 00e3 05       		.uleb128 0x5
 1341 00e4 27       		.uleb128 0x27
 1342 00e5 19       		.uleb128 0x19
 1343 00e6 11       		.uleb128 0x11
 1344 00e7 01       		.uleb128 0x1
 1345 00e8 12       		.uleb128 0x12
 1346 00e9 06       		.uleb128 0x6
 1347 00ea 40       		.uleb128 0x40
 1348 00eb 18       		.uleb128 0x18
 1349 00ec 9642     		.uleb128 0x2116
 1350 00ee 19       		.uleb128 0x19
 1351 00ef 00       		.byte	0
 1352 00f0 00       		.byte	0
 1353 00f1 0E       		.uleb128 0xe
 1354 00f2 2E       		.uleb128 0x2e
 1355 00f3 01       		.byte	0x1
 1356 00f4 3F       		.uleb128 0x3f
 1357 00f5 19       		.uleb128 0x19
 1358 00f6 03       		.uleb128 0x3
 1359 00f7 0E       		.uleb128 0xe
 1360 00f8 3A       		.uleb128 0x3a
 1361 00f9 0B       		.uleb128 0xb
 1362 00fa 3B       		.uleb128 0x3b
 1363 00fb 05       		.uleb128 0x5
 1364 00fc 27       		.uleb128 0x27
 1365 00fd 19       		.uleb128 0x19
 1366 00fe 49       		.uleb128 0x49
 1367 00ff 13       		.uleb128 0x13
 1368 0100 11       		.uleb128 0x11
 1369 0101 01       		.uleb128 0x1
 1370 0102 12       		.uleb128 0x12
 1371 0103 06       		.uleb128 0x6
 1372 0104 40       		.uleb128 0x40
 1373 0105 18       		.uleb128 0x18
 1374 0106 9742     		.uleb128 0x2117
 1375 0108 19       		.uleb128 0x19
 1376 0109 01       		.uleb128 0x1
 1377 010a 13       		.uleb128 0x13
 1378 010b 00       		.byte	0
 1379 010c 00       		.byte	0
 1380 010d 0F       		.uleb128 0xf
 1381 010e 34       		.uleb128 0x34
 1382 010f 00       		.byte	0
 1383 0110 03       		.uleb128 0x3
 1384 0111 0E       		.uleb128 0xe
 1385 0112 3A       		.uleb128 0x3a
 1386 0113 0B       		.uleb128 0xb
 1387 0114 3B       		.uleb128 0x3b
 1388 0115 05       		.uleb128 0x5
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 41


 1389 0116 49       		.uleb128 0x49
 1390 0117 13       		.uleb128 0x13
 1391 0118 02       		.uleb128 0x2
 1392 0119 18       		.uleb128 0x18
 1393 011a 00       		.byte	0
 1394 011b 00       		.byte	0
 1395 011c 10       		.uleb128 0x10
 1396 011d 34       		.uleb128 0x34
 1397 011e 00       		.byte	0
 1398 011f 03       		.uleb128 0x3
 1399 0120 0E       		.uleb128 0xe
 1400 0121 3A       		.uleb128 0x3a
 1401 0122 0B       		.uleb128 0xb
 1402 0123 3B       		.uleb128 0x3b
 1403 0124 0B       		.uleb128 0xb
 1404 0125 49       		.uleb128 0x49
 1405 0126 13       		.uleb128 0x13
 1406 0127 3F       		.uleb128 0x3f
 1407 0128 19       		.uleb128 0x19
 1408 0129 02       		.uleb128 0x2
 1409 012a 18       		.uleb128 0x18
 1410 012b 00       		.byte	0
 1411 012c 00       		.byte	0
 1412 012d 00       		.byte	0
 1413              		.section	.debug_aranges,"",%progbits
 1414 0000 A4000000 		.4byte	0xa4
 1415 0004 0200     		.2byte	0x2
 1416 0006 00000000 		.4byte	.Ldebug_info0
 1417 000a 04       		.byte	0x4
 1418 000b 00       		.byte	0
 1419 000c 0000     		.2byte	0
 1420 000e 0000     		.2byte	0
 1421 0010 00000000 		.4byte	.LFB2
 1422 0014 24000000 		.4byte	.LFE2-.LFB2
 1423 0018 00000000 		.4byte	.LFB3
 1424 001c 88000000 		.4byte	.LFE3-.LFB3
 1425 0020 00000000 		.4byte	.LFB4
 1426 0024 20000000 		.4byte	.LFE4-.LFB4
 1427 0028 00000000 		.4byte	.LFB5
 1428 002c 20000000 		.4byte	.LFE5-.LFB5
 1429 0030 00000000 		.4byte	.LFB6
 1430 0034 20000000 		.4byte	.LFE6-.LFB6
 1431 0038 00000000 		.4byte	.LFB7
 1432 003c 1C000000 		.4byte	.LFE7-.LFB7
 1433 0040 00000000 		.4byte	.LFB8
 1434 0044 1E000000 		.4byte	.LFE8-.LFB8
 1435 0048 00000000 		.4byte	.LFB9
 1436 004c 20000000 		.4byte	.LFE9-.LFB9
 1437 0050 00000000 		.4byte	.LFB10
 1438 0054 20000000 		.4byte	.LFE10-.LFB10
 1439 0058 00000000 		.4byte	.LFB11
 1440 005c 20000000 		.4byte	.LFE11-.LFB11
 1441 0060 00000000 		.4byte	.LFB12
 1442 0064 20000000 		.4byte	.LFE12-.LFB12
 1443 0068 00000000 		.4byte	.LFB13
 1444 006c 14000000 		.4byte	.LFE13-.LFB13
 1445 0070 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 42


 1446 0074 20000000 		.4byte	.LFE14-.LFB14
 1447 0078 00000000 		.4byte	.LFB15
 1448 007c 20000000 		.4byte	.LFE15-.LFB15
 1449 0080 00000000 		.4byte	.LFB16
 1450 0084 14000000 		.4byte	.LFE16-.LFB16
 1451 0088 00000000 		.4byte	.LFB17
 1452 008c 14000000 		.4byte	.LFE17-.LFB17
 1453 0090 00000000 		.4byte	.LFB18
 1454 0094 14000000 		.4byte	.LFE18-.LFB18
 1455 0098 00000000 		.4byte	.LFB19
 1456 009c 14000000 		.4byte	.LFE19-.LFB19
 1457 00a0 00000000 		.4byte	0
 1458 00a4 00000000 		.4byte	0
 1459              		.section	.debug_ranges,"",%progbits
 1460              	.Ldebug_ranges0:
 1461 0000 00000000 		.4byte	.LFB2
 1462 0004 24000000 		.4byte	.LFE2
 1463 0008 00000000 		.4byte	.LFB3
 1464 000c 88000000 		.4byte	.LFE3
 1465 0010 00000000 		.4byte	.LFB4
 1466 0014 20000000 		.4byte	.LFE4
 1467 0018 00000000 		.4byte	.LFB5
 1468 001c 20000000 		.4byte	.LFE5
 1469 0020 00000000 		.4byte	.LFB6
 1470 0024 20000000 		.4byte	.LFE6
 1471 0028 00000000 		.4byte	.LFB7
 1472 002c 1C000000 		.4byte	.LFE7
 1473 0030 00000000 		.4byte	.LFB8
 1474 0034 1E000000 		.4byte	.LFE8
 1475 0038 00000000 		.4byte	.LFB9
 1476 003c 20000000 		.4byte	.LFE9
 1477 0040 00000000 		.4byte	.LFB10
 1478 0044 20000000 		.4byte	.LFE10
 1479 0048 00000000 		.4byte	.LFB11
 1480 004c 20000000 		.4byte	.LFE11
 1481 0050 00000000 		.4byte	.LFB12
 1482 0054 20000000 		.4byte	.LFE12
 1483 0058 00000000 		.4byte	.LFB13
 1484 005c 14000000 		.4byte	.LFE13
 1485 0060 00000000 		.4byte	.LFB14
 1486 0064 20000000 		.4byte	.LFE14
 1487 0068 00000000 		.4byte	.LFB15
 1488 006c 20000000 		.4byte	.LFE15
 1489 0070 00000000 		.4byte	.LFB16
 1490 0074 14000000 		.4byte	.LFE16
 1491 0078 00000000 		.4byte	.LFB17
 1492 007c 14000000 		.4byte	.LFE17
 1493 0080 00000000 		.4byte	.LFB18
 1494 0084 14000000 		.4byte	.LFE18
 1495 0088 00000000 		.4byte	.LFB19
 1496 008c 14000000 		.4byte	.LFE19
 1497 0090 00000000 		.4byte	0
 1498 0094 00000000 		.4byte	0
 1499              		.section	.debug_line,"",%progbits
 1500              	.Ldebug_line0:
 1501 0000 AC010000 		.section	.debug_str,"MS",%progbits,1
 1501      02004900 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 43


 1501      00000201 
 1501      FB0E0D00 
 1501      01010101 
 1502              	.LASF19:
 1503 0000 50574D5F 		.ascii	"PWM_WheelLED_Enable\000"
 1503      57686565 
 1503      6C4C4544 
 1503      5F456E61 
 1503      626C6500 
 1504              	.LASF24:
 1505 0014 50574D5F 		.ascii	"PWM_WheelLED_WritePeriod\000"
 1505      57686565 
 1505      6C4C4544 
 1505      5F577269 
 1505      74655065 
 1506              	.LASF45:
 1507 002d 50574D5F 		.ascii	"PWM_WheelLED_initVar\000"
 1507      57686565 
 1507      6C4C4544 
 1507      5F696E69 
 1507      74566172 
 1508              	.LASF26:
 1509 0042 70657269 		.ascii	"period\000"
 1509      6F6400
 1510              	.LASF23:
 1511 0049 50574D5F 		.ascii	"PWM_WheelLED_ClearFIFO\000"
 1511      57686565 
 1511      6C4C4544 
 1511      5F436C65 
 1511      61724649 
 1512              	.LASF3:
 1513 0060 73686F72 		.ascii	"short unsigned int\000"
 1513      7420756E 
 1513      7369676E 
 1513      65642069 
 1513      6E7400
 1514              	.LASF27:
 1515 0073 50574D5F 		.ascii	"PWM_WheelLED_WriteCompare1\000"
 1515      57686565 
 1515      6C4C4544 
 1515      5F577269 
 1515      7465436F 
 1516              	.LASF29:
 1517 008e 50574D5F 		.ascii	"PWM_WheelLED_WriteCompare2\000"
 1517      57686565 
 1517      6C4C4544 
 1517      5F577269 
 1517      7465436F 
 1518              	.LASF17:
 1519 00a9 50574D5F 		.ascii	"PWM_WheelLED_interruptState\000"
 1519      57686565 
 1519      6C4C4544 
 1519      5F696E74 
 1519      65727275 
 1520              	.LASF18:
 1521 00c5 50574D5F 		.ascii	"PWM_WheelLED_Start\000"
 1521      57686565 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 44


 1521      6C4C4544 
 1521      5F537461 
 1521      727400
 1522              	.LASF20:
 1523 00d8 50574D5F 		.ascii	"PWM_WheelLED_Stop\000"
 1523      57686565 
 1523      6C4C4544 
 1523      5F53746F 
 1523      7000
 1524              	.LASF9:
 1525 00ea 666C6F61 		.ascii	"float\000"
 1525      7400
 1526              	.LASF25:
 1527 00f0 636F756E 		.ascii	"counter\000"
 1527      74657200 
 1528              	.LASF33:
 1529 00f8 50574D5F 		.ascii	"PWM_WheelLED_ReadStatusRegister\000"
 1529      57686565 
 1529      6C4C4544 
 1529      5F526561 
 1529      64537461 
 1530              	.LASF1:
 1531 0118 756E7369 		.ascii	"unsigned char\000"
 1531      676E6564 
 1531      20636861 
 1531      7200
 1532              	.LASF13:
 1533 0126 72656738 		.ascii	"reg8\000"
 1533      00
 1534              	.LASF5:
 1535 012b 6C6F6E67 		.ascii	"long unsigned int\000"
 1535      20756E73 
 1535      69676E65 
 1535      6420696E 
 1535      7400
 1536              	.LASF12:
 1537 013d 75696E74 		.ascii	"uint8\000"
 1537      3800
 1538              	.LASF36:
 1539 0143 636F6E74 		.ascii	"control\000"
 1539      726F6C00 
 1540              	.LASF41:
 1541 014b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1541      43313120 
 1541      352E342E 
 1541      31203230 
 1541      31363036 
 1542 017e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1542      20726576 
 1542      6973696F 
 1542      6E203233 
 1542      37373135 
 1543 01b1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1543      66756E63 
 1543      74696F6E 
 1543      2D736563 
 1543      74696F6E 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 45


 1544              	.LASF35:
 1545 01d9 50574D5F 		.ascii	"PWM_WheelLED_WriteControlRegister\000"
 1545      57686565 
 1545      6C4C4544 
 1545      5F577269 
 1545      7465436F 
 1546              	.LASF10:
 1547 01fb 646F7562 		.ascii	"double\000"
 1547      6C6500
 1548              	.LASF21:
 1549 0202 50574D5F 		.ascii	"PWM_WheelLED_Init\000"
 1549      57686565 
 1549      6C4C4544 
 1549      5F496E69 
 1549      7400
 1550              	.LASF22:
 1551 0214 50574D5F 		.ascii	"PWM_WheelLED_WriteCounter\000"
 1551      57686565 
 1551      6C4C4544 
 1551      5F577269 
 1551      7465436F 
 1552              	.LASF37:
 1553 022e 50574D5F 		.ascii	"PWM_WheelLED_ReadCapture\000"
 1553      57686565 
 1553      6C4C4544 
 1553      5F526561 
 1553      64436170 
 1554              	.LASF8:
 1555 0247 756E7369 		.ascii	"unsigned int\000"
 1555      676E6564 
 1555      20696E74 
 1555      00
 1556              	.LASF43:
 1557 0254 433A5C55 		.ascii	"C:\\Users\\bernde\\Documents\\PSoC Creator\\Martins"
 1557      73657273 
 1557      5C626572 
 1557      6E64655C 
 1557      446F6375 
 1558 0282 4D6F7573 		.ascii	"Mouse\\MartinsMouse.cydsn\000"
 1558      655C4D61 
 1558      7274696E 
 1558      734D6F75 
 1558      73652E63 
 1559              	.LASF7:
 1560 029b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1560      206C6F6E 
 1560      6720756E 
 1560      7369676E 
 1560      65642069 
 1561              	.LASF39:
 1562 02b2 50574D5F 		.ascii	"PWM_WheelLED_ReadCompare2\000"
 1562      57686565 
 1562      6C4C4544 
 1562      5F526561 
 1562      64436F6D 
 1563              	.LASF34:
 1564 02cc 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 46


 1564      6C7400
 1565              	.LASF38:
 1566 02d3 50574D5F 		.ascii	"PWM_WheelLED_ReadCompare1\000"
 1566      57686565 
 1566      6C4C4544 
 1566      5F526561 
 1566      64436F6D 
 1567              	.LASF30:
 1568 02ed 50574D5F 		.ascii	"PWM_WheelLED_SetInterruptMode\000"
 1568      57686565 
 1568      6C4C4544 
 1568      5F536574 
 1568      496E7465 
 1569              	.LASF16:
 1570 030b 6374726C 		.ascii	"ctrl\000"
 1570      00
 1571              	.LASF15:
 1572 0310 73697A65 		.ascii	"sizetype\000"
 1572      74797065 
 1572      00
 1573              	.LASF44:
 1574 0319 50574D5F 		.ascii	"PWM_WheelLED_ReadControlRegister\000"
 1574      57686565 
 1574      6C4C4544 
 1574      5F526561 
 1574      64436F6E 
 1575              	.LASF32:
 1576 033a 50574D5F 		.ascii	"PWM_WheelLED_ReadCounter\000"
 1576      57686565 
 1576      6C4C4544 
 1576      5F526561 
 1576      64436F75 
 1577              	.LASF6:
 1578 0353 6C6F6E67 		.ascii	"long long int\000"
 1578      206C6F6E 
 1578      6720696E 
 1578      7400
 1579              	.LASF31:
 1580 0361 696E7465 		.ascii	"interruptMode\000"
 1580      72727570 
 1580      744D6F64 
 1580      6500
 1581              	.LASF2:
 1582 036f 73686F72 		.ascii	"short int\000"
 1582      7420696E 
 1582      7400
 1583              	.LASF4:
 1584 0379 6C6F6E67 		.ascii	"long int\000"
 1584      20696E74 
 1584      00
 1585              	.LASF11:
 1586 0382 63686172 		.ascii	"char\000"
 1586      00
 1587              	.LASF14:
 1588 0387 6C6F6E67 		.ascii	"long double\000"
 1588      20646F75 
 1588      626C6500 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\cc0OL7jr.s 			page 47


 1589              	.LASF0:
 1590 0393 7369676E 		.ascii	"signed char\000"
 1590      65642063 
 1590      68617200 
 1591              	.LASF28:
 1592 039f 636F6D70 		.ascii	"compare\000"
 1592      61726500 
 1593              	.LASF40:
 1594 03a7 50574D5F 		.ascii	"PWM_WheelLED_ReadPeriod\000"
 1594      57686565 
 1594      6C4C4544 
 1594      5F526561 
 1594      64506572 
 1595              	.LASF42:
 1596 03bf 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_WheelLED.c\000"
 1596      72617465 
 1596      645F536F 
 1596      75726365 
 1596      5C50536F 
 1597              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
