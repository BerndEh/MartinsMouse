ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_initVar
  20              		.bss
  21              		.type	PWM_initVar, %object
  22              		.size	PWM_initVar, 1
  23              	PWM_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_Init,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_Init, %function
  31              	PWM_Init:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:Generated_Source\PSoC4/PWM.c **** *  component
   8:Generated_Source\PSoC4/PWM.c **** *
   9:Generated_Source\PSoC4/PWM.c **** * Note:
  10:Generated_Source\PSoC4/PWM.c **** *  None
  11:Generated_Source\PSoC4/PWM.c **** *
  12:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM.c **** 
  19:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:Generated_Source\PSoC4/PWM.c **** 
  21:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:Generated_Source\PSoC4/PWM.c **** 
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 2


  25:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM.c **** *
  28:Generated_Source\PSoC4/PWM.c **** * Summary:
  29:Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:Generated_Source\PSoC4/PWM.c **** *
  31:Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM.c **** *  None
  33:Generated_Source\PSoC4/PWM.c **** *
  34:Generated_Source\PSoC4/PWM.c **** * Return:
  35:Generated_Source\PSoC4/PWM.c **** *  None
  36:Generated_Source\PSoC4/PWM.c **** *
  37:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:Generated_Source\PSoC4/PWM.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/PWM.c **** 
  41:Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM.c ****         
  45:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM.c **** 
  48:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM.c ****         
  51:Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:Generated_Source\PSoC4/PWM.c **** 
  57:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM.c ****         
  60:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM.c ****     
  63:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM.c ****         
  66:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM.c **** 
  69:Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 3


  72:Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM.c **** 
  78:Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM.c ****         #else
  84:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:Generated_Source\PSoC4/PWM.c **** 
  88:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  44              		.loc 1 89 0
  45 0004 124B     		ldr	r3, .L2
  46 0006 A622     		movs	r2, #166
  47 0008 D204     		lsls	r2, r2, #19
  48 000a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/PWM.c **** 
  91:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM.c ****         #else
  95:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  49              		.loc 1 95 0
  50 000c 104B     		ldr	r3, .L2
  51 000e 104A     		ldr	r2, .L2
  52 0010 1268     		ldr	r2, [r2]
  53 0012 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/PWM.c ****             
  97:Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM.c ****             #else 
 103:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
  54              		.loc 1 103 0
  55 0014 0020     		movs	r0, #0
  56 0016 FFF7FEFF 		bl	PWM_WriteCounter
 104:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
  57              		.loc 1 108 0
  58 001a 0D4B     		ldr	r3, .L2
  59 001c 0C4A     		ldr	r2, .L2
  60 001e 1268     		ldr	r2, [r2]
  61 0020 C821     		movs	r1, #200
  62 0022 C901     		lsls	r1, r1, #7
  63 0024 0A43     		orrs	r2, r1
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 4


  64 0026 1A60     		str	r2, [r3]
 109:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
  65              		.loc 1 116 0
  66 0028 0A4B     		ldr	r3, .L2+4
  67 002a 0C22     		movs	r2, #12
  68 002c 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWM.c ****     
 118:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  69              		.loc 1 119 0
  70 002e 0120     		movs	r0, #1
  71 0030 FFF7FEFF 		bl	PWM_SetInterruptMode
 120:Generated_Source\PSoC4/PWM.c **** 
 121:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM.c ****         #else
 128:Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
  72              		.loc 1 129 0
  73 0034 084B     		ldr	r3, .L2+8
  74 0036 3122     		movs	r2, #49
  75 0038 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM.c **** 
 132:Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM.c **** 
 140:Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM.c **** 
 145:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  76              		.loc 1 146 0
  77 003a 084B     		ldr	r3, .L2+12
  78 003c 1800     		movs	r0, r3
  79 003e FFF7FEFF 		bl	PWM_WritePeriod
 147:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  80              		.loc 1 147 0
  81 0042 074B     		ldr	r3, .L2+16
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 5


  82 0044 1800     		movs	r0, r3
  83 0046 FFF7FEFF 		bl	PWM_WriteCompare
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM.c **** 
 154:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:Generated_Source\PSoC4/PWM.c ****     
 160:Generated_Source\PSoC4/PWM.c **** }
  84              		.loc 1 160 0
  85 004a C046     		nop
  86 004c BD46     		mov	sp, r7
  87              		@ sp needed
  88 004e 80BD     		pop	{r7, pc}
  89              	.L3:
  90              		.align	2
  91              	.L2:
  92 0050 00012040 		.word	1075839232
  93 0054 24012040 		.word	1075839268
  94 0058 28012040 		.word	1075839272
  95 005c FFFF0000 		.word	65535
  96 0060 E8FD0000 		.word	65000
  97              		.cfi_endproc
  98              	.LFE2:
  99              		.size	PWM_Init, .-PWM_Init
 100              		.section	.text.PWM_Enable,"ax",%progbits
 101              		.align	2
 102              		.global	PWM_Enable
 103              		.code	16
 104              		.thumb_func
 105              		.type	PWM_Enable, %function
 106              	PWM_Enable:
 107              	.LFB3:
 161:Generated_Source\PSoC4/PWM.c **** 
 162:Generated_Source\PSoC4/PWM.c **** 
 163:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM.c **** *
 167:Generated_Source\PSoC4/PWM.c **** * Summary:
 168:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:Generated_Source\PSoC4/PWM.c **** *
 170:Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM.c **** *  None
 172:Generated_Source\PSoC4/PWM.c **** *
 173:Generated_Source\PSoC4/PWM.c **** * Return:
 174:Generated_Source\PSoC4/PWM.c **** *  None
 175:Generated_Source\PSoC4/PWM.c **** *
 176:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 6


 108              		.loc 1 178 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 8
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 90B5     		push	{r4, r7, lr}
 113              		.cfi_def_cfa_offset 12
 114              		.cfi_offset 4, -12
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 83B0     		sub	sp, sp, #12
 118              		.cfi_def_cfa_offset 24
 119 0004 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 121              		.loc 1 181 0
 122 0006 FC1D     		adds	r4, r7, #7
 123 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 124 000c 0300     		movs	r3, r0
 125 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 126              		.loc 1 182 0
 127 0010 094B     		ldr	r3, .L5
 128 0012 094A     		ldr	r2, .L5
 129 0014 1268     		ldr	r2, [r2]
 130 0016 0121     		movs	r1, #1
 131 0018 0A43     		orrs	r2, r1
 132 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 133              		.loc 1 183 0
 134 001c FB1D     		adds	r3, r7, #7
 135 001e 1B78     		ldrb	r3, [r3]
 136 0020 1800     		movs	r0, r3
 137 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/PWM.c **** 
 185:Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 138              		.loc 1 188 0
 139 0026 1821     		movs	r1, #24
 140 0028 0120     		movs	r0, #1
 141 002a FFF7FEFF 		bl	PWM_TriggerCommand
 189:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:Generated_Source\PSoC4/PWM.c **** 
 192:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:Generated_Source\PSoC4/PWM.c ****     
 198:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 199:Generated_Source\PSoC4/PWM.c ****         #if (0u != PWM_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u != PWM_QUAD_AUTO_START) */
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 7


 202:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 203:Generated_Source\PSoC4/PWM.c **** }
 142              		.loc 1 203 0
 143 002e C046     		nop
 144 0030 BD46     		mov	sp, r7
 145 0032 03B0     		add	sp, sp, #12
 146              		@ sp needed
 147 0034 90BD     		pop	{r4, r7, pc}
 148              	.L6:
 149 0036 C046     		.align	2
 150              	.L5:
 151 0038 00002040 		.word	1075838976
 152              		.cfi_endproc
 153              	.LFE3:
 154              		.size	PWM_Enable, .-PWM_Enable
 155              		.section	.text.PWM_Start,"ax",%progbits
 156              		.align	2
 157              		.global	PWM_Start
 158              		.code	16
 159              		.thumb_func
 160              		.type	PWM_Start, %function
 161              	PWM_Start:
 162              	.LFB4:
 204:Generated_Source\PSoC4/PWM.c **** 
 205:Generated_Source\PSoC4/PWM.c **** 
 206:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 208:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM.c **** *
 210:Generated_Source\PSoC4/PWM.c **** * Summary:
 211:Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 212:Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 213:Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM.c **** *
 216:Generated_Source\PSoC4/PWM.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM.c **** *  None
 218:Generated_Source\PSoC4/PWM.c **** *
 219:Generated_Source\PSoC4/PWM.c **** * Return:
 220:Generated_Source\PSoC4/PWM.c **** *  None
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 228:Generated_Source\PSoC4/PWM.c **** *
 229:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 231:Generated_Source\PSoC4/PWM.c **** {
 163              		.loc 1 231 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 8


 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 173              		.loc 1 232 0
 174 0004 064B     		ldr	r3, .L9
 175 0006 1B78     		ldrb	r3, [r3]
 176 0008 002B     		cmp	r3, #0
 177 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/PWM.c ****     {
 234:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 178              		.loc 1 234 0
 179 000c FFF7FEFF 		bl	PWM_Init
 235:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 180              		.loc 1 235 0
 181 0010 034B     		ldr	r3, .L9
 182 0012 0122     		movs	r2, #1
 183 0014 1A70     		strb	r2, [r3]
 184              	.L8:
 236:Generated_Source\PSoC4/PWM.c ****     }
 237:Generated_Source\PSoC4/PWM.c **** 
 238:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 185              		.loc 1 238 0
 186 0016 FFF7FEFF 		bl	PWM_Enable
 239:Generated_Source\PSoC4/PWM.c **** }
 187              		.loc 1 239 0
 188 001a C046     		nop
 189 001c BD46     		mov	sp, r7
 190              		@ sp needed
 191 001e 80BD     		pop	{r7, pc}
 192              	.L10:
 193              		.align	2
 194              	.L9:
 195 0020 00000000 		.word	PWM_initVar
 196              		.cfi_endproc
 197              	.LFE4:
 198              		.size	PWM_Start, .-PWM_Start
 199              		.section	.text.PWM_Stop,"ax",%progbits
 200              		.align	2
 201              		.global	PWM_Stop
 202              		.code	16
 203              		.thumb_func
 204              		.type	PWM_Stop, %function
 205              	PWM_Stop:
 206              	.LFB5:
 240:Generated_Source\PSoC4/PWM.c **** 
 241:Generated_Source\PSoC4/PWM.c **** 
 242:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 244:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM.c **** *
 246:Generated_Source\PSoC4/PWM.c **** * Summary:
 247:Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 248:Generated_Source\PSoC4/PWM.c **** *
 249:Generated_Source\PSoC4/PWM.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 9


 251:Generated_Source\PSoC4/PWM.c **** *
 252:Generated_Source\PSoC4/PWM.c **** * Return:
 253:Generated_Source\PSoC4/PWM.c **** *  None
 254:Generated_Source\PSoC4/PWM.c **** *
 255:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 257:Generated_Source\PSoC4/PWM.c **** {
 207              		.loc 1 257 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 90B5     		push	{r4, r7, lr}
 212              		.cfi_def_cfa_offset 12
 213              		.cfi_offset 4, -12
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 83B0     		sub	sp, sp, #12
 217              		.cfi_def_cfa_offset 24
 218 0004 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM.c **** 
 260:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 220              		.loc 1 260 0
 221 0006 FC1D     		adds	r4, r7, #7
 222 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 223 000c 0300     		movs	r3, r0
 224 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/PWM.c **** 
 262:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 225              		.loc 1 262 0
 226 0010 074B     		ldr	r3, .L12
 227 0012 074A     		ldr	r2, .L12
 228 0014 1268     		ldr	r2, [r2]
 229 0016 0121     		movs	r1, #1
 230 0018 8A43     		bics	r2, r1
 231 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/PWM.c **** 
 264:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 232              		.loc 1 264 0
 233 001c FB1D     		adds	r3, r7, #7
 234 001e 1B78     		ldrb	r3, [r3]
 235 0020 1800     		movs	r0, r3
 236 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/PWM.c **** }
 237              		.loc 1 265 0
 238 0026 C046     		nop
 239 0028 BD46     		mov	sp, r7
 240 002a 03B0     		add	sp, sp, #12
 241              		@ sp needed
 242 002c 90BD     		pop	{r4, r7, pc}
 243              	.L13:
 244 002e C046     		.align	2
 245              	.L12:
 246 0030 00002040 		.word	1075838976
 247              		.cfi_endproc
 248              	.LFE5:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 10


 249              		.size	PWM_Stop, .-PWM_Stop
 250              		.section	.text.PWM_SetMode,"ax",%progbits
 251              		.align	2
 252              		.global	PWM_SetMode
 253              		.code	16
 254              		.thumb_func
 255              		.type	PWM_SetMode, %function
 256              	PWM_SetMode:
 257              	.LFB6:
 266:Generated_Source\PSoC4/PWM.c **** 
 267:Generated_Source\PSoC4/PWM.c **** 
 268:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 270:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM.c **** *
 272:Generated_Source\PSoC4/PWM.c **** * Summary:
 273:Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 274:Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM.c **** *
 277:Generated_Source\PSoC4/PWM.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 279:Generated_Source\PSoC4/PWM.c **** *   Values:
 280:Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM.c **** *
 289:Generated_Source\PSoC4/PWM.c **** * Return:
 290:Generated_Source\PSoC4/PWM.c **** *  None
 291:Generated_Source\PSoC4/PWM.c **** *
 292:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM.c **** {
 258              		.loc 1 294 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 16
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262 0000 90B5     		push	{r4, r7, lr}
 263              		.cfi_def_cfa_offset 12
 264              		.cfi_offset 4, -12
 265              		.cfi_offset 7, -8
 266              		.cfi_offset 14, -4
 267 0002 85B0     		sub	sp, sp, #20
 268              		.cfi_def_cfa_offset 32
 269 0004 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
 271 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM.c **** 
 297:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 272              		.loc 1 297 0
 273 0008 0F23     		movs	r3, #15
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 11


 274 000a FC18     		adds	r4, r7, r3
 275 000c FFF7FEFF 		bl	CyEnterCriticalSection
 276 0010 0300     		movs	r3, r0
 277 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/PWM.c **** 
 299:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 278              		.loc 1 299 0
 279 0014 0A4B     		ldr	r3, .L15
 280 0016 0A4A     		ldr	r2, .L15
 281 0018 1268     		ldr	r2, [r2]
 282 001a 0A49     		ldr	r1, .L15+4
 283 001c 0A40     		ands	r2, r1
 284 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 285              		.loc 1 300 0
 286 0020 074B     		ldr	r3, .L15
 287 0022 074A     		ldr	r2, .L15
 288 0024 1168     		ldr	r1, [r2]
 289 0026 7A68     		ldr	r2, [r7, #4]
 290 0028 0A43     		orrs	r2, r1
 291 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/PWM.c **** 
 302:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 292              		.loc 1 302 0
 293 002c 0F23     		movs	r3, #15
 294 002e FB18     		adds	r3, r7, r3
 295 0030 1B78     		ldrb	r3, [r3]
 296 0032 1800     		movs	r0, r3
 297 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/PWM.c **** }
 298              		.loc 1 303 0
 299 0038 C046     		nop
 300 003a BD46     		mov	sp, r7
 301 003c 05B0     		add	sp, sp, #20
 302              		@ sp needed
 303 003e 90BD     		pop	{r4, r7, pc}
 304              	.L16:
 305              		.align	2
 306              	.L15:
 307 0040 00012040 		.word	1075839232
 308 0044 FFFFFFF8 		.word	-117440513
 309              		.cfi_endproc
 310              	.LFE6:
 311              		.size	PWM_SetMode, .-PWM_SetMode
 312              		.section	.text.PWM_SetQDMode,"ax",%progbits
 313              		.align	2
 314              		.global	PWM_SetQDMode
 315              		.code	16
 316              		.thumb_func
 317              		.type	PWM_SetQDMode, %function
 318              	PWM_SetQDMode:
 319              	.LFB7:
 304:Generated_Source\PSoC4/PWM.c **** 
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 308:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 12


 309:Generated_Source\PSoC4/PWM.c **** *
 310:Generated_Source\PSoC4/PWM.c **** * Summary:
 311:Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM.c **** *
 314:Generated_Source\PSoC4/PWM.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM.c **** *   Values:
 317:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM.c **** *
 322:Generated_Source\PSoC4/PWM.c **** * Return:
 323:Generated_Source\PSoC4/PWM.c **** *  None
 324:Generated_Source\PSoC4/PWM.c **** *
 325:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM.c **** {
 320              		.loc 1 327 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 16
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324 0000 90B5     		push	{r4, r7, lr}
 325              		.cfi_def_cfa_offset 12
 326              		.cfi_offset 4, -12
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 85B0     		sub	sp, sp, #20
 330              		.cfi_def_cfa_offset 32
 331 0004 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 333 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM.c **** 
 330:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 334              		.loc 1 330 0
 335 0008 0F23     		movs	r3, #15
 336 000a FC18     		adds	r4, r7, r3
 337 000c FFF7FEFF 		bl	CyEnterCriticalSection
 338 0010 0300     		movs	r3, r0
 339 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/PWM.c **** 
 332:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 340              		.loc 1 332 0
 341 0014 0A4B     		ldr	r3, .L18
 342 0016 0A4A     		ldr	r2, .L18
 343 0018 1268     		ldr	r2, [r2]
 344 001a 0A49     		ldr	r1, .L18+4
 345 001c 0A40     		ands	r2, r1
 346 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 347              		.loc 1 333 0
 348 0020 074B     		ldr	r3, .L18
 349 0022 074A     		ldr	r2, .L18
 350 0024 1168     		ldr	r1, [r2]
 351 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 13


 352 0028 0A43     		orrs	r2, r1
 353 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 354              		.loc 1 335 0
 355 002c 0F23     		movs	r3, #15
 356 002e FB18     		adds	r3, r7, r3
 357 0030 1B78     		ldrb	r3, [r3]
 358 0032 1800     		movs	r0, r3
 359 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/PWM.c **** }
 360              		.loc 1 336 0
 361 0038 C046     		nop
 362 003a BD46     		mov	sp, r7
 363 003c 05B0     		add	sp, sp, #20
 364              		@ sp needed
 365 003e 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367              		.align	2
 368              	.L18:
 369 0040 00012040 		.word	1075839232
 370 0044 FFFF8FFF 		.word	-7340033
 371              		.cfi_endproc
 372              	.LFE7:
 373              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 374              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 375              		.align	2
 376              		.global	PWM_SetPrescaler
 377              		.code	16
 378              		.thumb_func
 379              		.type	PWM_SetPrescaler, %function
 380              	PWM_SetPrescaler:
 381              	.LFB8:
 337:Generated_Source\PSoC4/PWM.c **** 
 338:Generated_Source\PSoC4/PWM.c **** 
 339:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 341:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM.c **** *
 343:Generated_Source\PSoC4/PWM.c **** * Summary:
 344:Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM.c **** *
 347:Generated_Source\PSoC4/PWM.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM.c **** *   Values:
 350:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM.c **** *
 359:Generated_Source\PSoC4/PWM.c **** * Return:
 360:Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 14


 361:Generated_Source\PSoC4/PWM.c **** *
 362:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM.c **** {
 382              		.loc 1 364 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 16
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386 0000 90B5     		push	{r4, r7, lr}
 387              		.cfi_def_cfa_offset 12
 388              		.cfi_offset 4, -12
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 85B0     		sub	sp, sp, #20
 392              		.cfi_def_cfa_offset 32
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM.c **** 
 367:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 396              		.loc 1 367 0
 397 0008 0F23     		movs	r3, #15
 398 000a FC18     		adds	r4, r7, r3
 399 000c FFF7FEFF 		bl	CyEnterCriticalSection
 400 0010 0300     		movs	r3, r0
 401 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/PWM.c **** 
 369:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 402              		.loc 1 369 0
 403 0014 0A4B     		ldr	r3, .L21
 404 0016 0A4A     		ldr	r2, .L21
 405 0018 1268     		ldr	r2, [r2]
 406 001a 0A49     		ldr	r1, .L21+4
 407 001c 0A40     		ands	r2, r1
 408 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 409              		.loc 1 370 0
 410 0020 074B     		ldr	r3, .L21
 411 0022 074A     		ldr	r2, .L21
 412 0024 1168     		ldr	r1, [r2]
 413 0026 7A68     		ldr	r2, [r7, #4]
 414 0028 0A43     		orrs	r2, r1
 415 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/PWM.c **** 
 372:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 416              		.loc 1 372 0
 417 002c 0F23     		movs	r3, #15
 418 002e FB18     		adds	r3, r7, r3
 419 0030 1B78     		ldrb	r3, [r3]
 420 0032 1800     		movs	r0, r3
 421 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/PWM.c **** }
 422              		.loc 1 373 0
 423 0038 C046     		nop
 424 003a BD46     		mov	sp, r7
 425 003c 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 15


 426              		@ sp needed
 427 003e 90BD     		pop	{r4, r7, pc}
 428              	.L22:
 429              		.align	2
 430              	.L21:
 431 0040 00012040 		.word	1075839232
 432 0044 FF00FFFF 		.word	-65281
 433              		.cfi_endproc
 434              	.LFE8:
 435              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 436              		.section	.text.PWM_SetOneShot,"ax",%progbits
 437              		.align	2
 438              		.global	PWM_SetOneShot
 439              		.code	16
 440              		.thumb_func
 441              		.type	PWM_SetOneShot, %function
 442              	PWM_SetOneShot:
 443              	.LFB9:
 374:Generated_Source\PSoC4/PWM.c **** 
 375:Generated_Source\PSoC4/PWM.c **** 
 376:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 378:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM.c **** *
 380:Generated_Source\PSoC4/PWM.c **** * Summary:
 381:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 382:Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM.c **** *
 385:Generated_Source\PSoC4/PWM.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM.c **** *   Values:
 388:Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM.c **** *
 391:Generated_Source\PSoC4/PWM.c **** * Return:
 392:Generated_Source\PSoC4/PWM.c **** *  None
 393:Generated_Source\PSoC4/PWM.c **** *
 394:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM.c **** {
 444              		.loc 1 396 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 16
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 90B5     		push	{r4, r7, lr}
 449              		.cfi_def_cfa_offset 12
 450              		.cfi_offset 4, -12
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0002 85B0     		sub	sp, sp, #20
 454              		.cfi_def_cfa_offset 32
 455 0004 00AF     		add	r7, sp, #0
 456              		.cfi_def_cfa_register 7
 457 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 16


 399:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 458              		.loc 1 399 0
 459 0008 0F23     		movs	r3, #15
 460 000a FC18     		adds	r4, r7, r3
 461 000c FFF7FEFF 		bl	CyEnterCriticalSection
 462 0010 0300     		movs	r3, r0
 463 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/PWM.c **** 
 401:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 464              		.loc 1 401 0
 465 0014 0C4B     		ldr	r3, .L24
 466 0016 0C4A     		ldr	r2, .L24
 467 0018 1268     		ldr	r2, [r2]
 468 001a 0C49     		ldr	r1, .L24+4
 469 001c 0A40     		ands	r2, r1
 470 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 471              		.loc 1 402 0
 472 0020 094B     		ldr	r3, .L24
 473 0022 094A     		ldr	r2, .L24
 474 0024 1168     		ldr	r1, [r2]
 475 0026 7A68     		ldr	r2, [r7, #4]
 476 0028 9004     		lsls	r0, r2, #18
 477 002a 8022     		movs	r2, #128
 478 002c D202     		lsls	r2, r2, #11
 479 002e 0240     		ands	r2, r0
 480 0030 0A43     		orrs	r2, r1
 481 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM.c **** 
 405:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 482              		.loc 1 405 0
 483 0034 0F23     		movs	r3, #15
 484 0036 FB18     		adds	r3, r7, r3
 485 0038 1B78     		ldrb	r3, [r3]
 486 003a 1800     		movs	r0, r3
 487 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/PWM.c **** }
 488              		.loc 1 406 0
 489 0040 C046     		nop
 490 0042 BD46     		mov	sp, r7
 491 0044 05B0     		add	sp, sp, #20
 492              		@ sp needed
 493 0046 90BD     		pop	{r4, r7, pc}
 494              	.L25:
 495              		.align	2
 496              	.L24:
 497 0048 00012040 		.word	1075839232
 498 004c FFFFFBFF 		.word	-262145
 499              		.cfi_endproc
 500              	.LFE9:
 501              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 502              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 503              		.align	2
 504              		.global	PWM_SetPWMMode
 505              		.code	16
 506              		.thumb_func
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 17


 507              		.type	PWM_SetPWMMode, %function
 508              	PWM_SetPWMMode:
 509              	.LFB10:
 407:Generated_Source\PSoC4/PWM.c **** 
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 411:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM.c **** *
 413:Generated_Source\PSoC4/PWM.c **** * Summary:
 414:Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM.c **** *
 420:Generated_Source\PSoC4/PWM.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM.c **** *   Values:
 424:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM.c **** *
 445:Generated_Source\PSoC4/PWM.c **** * Return:
 446:Generated_Source\PSoC4/PWM.c **** *  None
 447:Generated_Source\PSoC4/PWM.c **** *
 448:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM.c **** {
 510              		.loc 1 450 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 8
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514 0000 80B5     		push	{r7, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 82B0     		sub	sp, sp, #8
 519              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 18


 520 0004 00AF     		add	r7, sp, #0
 521              		.cfi_def_cfa_register 7
 522 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 523              		.loc 1 451 0
 524 0008 044B     		ldr	r3, .L27
 525 000a 7A68     		ldr	r2, [r7, #4]
 526 000c 3F21     		movs	r1, #63
 527 000e 0A40     		ands	r2, r1
 528 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/PWM.c **** }
 529              		.loc 1 452 0
 530 0012 C046     		nop
 531 0014 BD46     		mov	sp, r7
 532 0016 02B0     		add	sp, sp, #8
 533              		@ sp needed
 534 0018 80BD     		pop	{r7, pc}
 535              	.L28:
 536 001a C046     		.align	2
 537              	.L27:
 538 001c 28012040 		.word	1075839272
 539              		.cfi_endproc
 540              	.LFE10:
 541              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 542              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 543              		.align	2
 544              		.global	PWM_SetPWMSyncKill
 545              		.code	16
 546              		.thumb_func
 547              		.type	PWM_SetPWMSyncKill, %function
 548              	PWM_SetPWMSyncKill:
 549              	.LFB11:
 453:Generated_Source\PSoC4/PWM.c **** 
 454:Generated_Source\PSoC4/PWM.c **** 
 455:Generated_Source\PSoC4/PWM.c **** 
 456:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM.c **** *
 460:Generated_Source\PSoC4/PWM.c **** * Summary:
 461:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM.c **** *
 466:Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM.c **** *
 469:Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM.c **** 
 474:Generated_Source\PSoC4/PWM.c **** *
 475:Generated_Source\PSoC4/PWM.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 19


 478:Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** * Return:
 482:Generated_Source\PSoC4/PWM.c **** *  None
 483:Generated_Source\PSoC4/PWM.c **** *
 484:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM.c **** {
 550              		.loc 1 486 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 16
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 0000 90B5     		push	{r4, r7, lr}
 555              		.cfi_def_cfa_offset 12
 556              		.cfi_offset 4, -12
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 85B0     		sub	sp, sp, #20
 560              		.cfi_def_cfa_offset 32
 561 0004 00AF     		add	r7, sp, #0
 562              		.cfi_def_cfa_register 7
 563 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM.c **** 
 489:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 564              		.loc 1 489 0
 565 0008 0F23     		movs	r3, #15
 566 000a FC18     		adds	r4, r7, r3
 567 000c FFF7FEFF 		bl	CyEnterCriticalSection
 568 0010 0300     		movs	r3, r0
 569 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 570              		.loc 1 491 0
 571 0014 0C4B     		ldr	r3, .L30
 572 0016 0C4A     		ldr	r2, .L30
 573 0018 1268     		ldr	r2, [r2]
 574 001a 0421     		movs	r1, #4
 575 001c 8A43     		bics	r2, r1
 576 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 577              		.loc 1 492 0
 578 0020 094B     		ldr	r3, .L30
 579 0022 094A     		ldr	r2, .L30
 580 0024 1168     		ldr	r1, [r2]
 581 0026 7A68     		ldr	r2, [r7, #4]
 582 0028 9200     		lsls	r2, r2, #2
 583 002a 0420     		movs	r0, #4
 584 002c 0240     		ands	r2, r0
 585 002e 0A43     		orrs	r2, r1
 586 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM.c **** 
 495:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 587              		.loc 1 495 0
 588 0032 0F23     		movs	r3, #15
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 20


 589 0034 FB18     		adds	r3, r7, r3
 590 0036 1B78     		ldrb	r3, [r3]
 591 0038 1800     		movs	r0, r3
 592 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/PWM.c **** }
 593              		.loc 1 496 0
 594 003e C046     		nop
 595 0040 BD46     		mov	sp, r7
 596 0042 05B0     		add	sp, sp, #20
 597              		@ sp needed
 598 0044 90BD     		pop	{r4, r7, pc}
 599              	.L31:
 600 0046 C046     		.align	2
 601              	.L30:
 602 0048 00012040 		.word	1075839232
 603              		.cfi_endproc
 604              	.LFE11:
 605              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 606              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 607              		.align	2
 608              		.global	PWM_SetPWMStopOnKill
 609              		.code	16
 610              		.thumb_func
 611              		.type	PWM_SetPWMStopOnKill, %function
 612              	PWM_SetPWMStopOnKill:
 613              	.LFB12:
 497:Generated_Source\PSoC4/PWM.c **** 
 498:Generated_Source\PSoC4/PWM.c **** 
 499:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM.c **** *
 503:Generated_Source\PSoC4/PWM.c **** * Summary:
 504:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM.c **** *
 508:Generated_Source\PSoC4/PWM.c **** *
 509:Generated_Source\PSoC4/PWM.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM.c **** *   Values:
 512:Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM.c **** *
 515:Generated_Source\PSoC4/PWM.c **** * Return:
 516:Generated_Source\PSoC4/PWM.c **** *  None
 517:Generated_Source\PSoC4/PWM.c **** *
 518:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM.c **** {
 614              		.loc 1 520 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 16
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 90B5     		push	{r4, r7, lr}
 619              		.cfi_def_cfa_offset 12
 620              		.cfi_offset 4, -12
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 21


 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 85B0     		sub	sp, sp, #20
 624              		.cfi_def_cfa_offset 32
 625 0004 00AF     		add	r7, sp, #0
 626              		.cfi_def_cfa_register 7
 627 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM.c **** 
 523:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 628              		.loc 1 523 0
 629 0008 0F23     		movs	r3, #15
 630 000a FC18     		adds	r4, r7, r3
 631 000c FFF7FEFF 		bl	CyEnterCriticalSection
 632 0010 0300     		movs	r3, r0
 633 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 634              		.loc 1 525 0
 635 0014 0C4B     		ldr	r3, .L33
 636 0016 0C4A     		ldr	r2, .L33
 637 0018 1268     		ldr	r2, [r2]
 638 001a 0821     		movs	r1, #8
 639 001c 8A43     		bics	r2, r1
 640 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 641              		.loc 1 526 0
 642 0020 094B     		ldr	r3, .L33
 643 0022 094A     		ldr	r2, .L33
 644 0024 1168     		ldr	r1, [r2]
 645 0026 7A68     		ldr	r2, [r7, #4]
 646 0028 D200     		lsls	r2, r2, #3
 647 002a 0820     		movs	r0, #8
 648 002c 0240     		ands	r2, r0
 649 002e 0A43     		orrs	r2, r1
 650 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM.c **** 
 529:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 651              		.loc 1 529 0
 652 0032 0F23     		movs	r3, #15
 653 0034 FB18     		adds	r3, r7, r3
 654 0036 1B78     		ldrb	r3, [r3]
 655 0038 1800     		movs	r0, r3
 656 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/PWM.c **** }
 657              		.loc 1 530 0
 658 003e C046     		nop
 659 0040 BD46     		mov	sp, r7
 660 0042 05B0     		add	sp, sp, #20
 661              		@ sp needed
 662 0044 90BD     		pop	{r4, r7, pc}
 663              	.L34:
 664 0046 C046     		.align	2
 665              	.L33:
 666 0048 00012040 		.word	1075839232
 667              		.cfi_endproc
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 22


 668              	.LFE12:
 669              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 670              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 671              		.align	2
 672              		.global	PWM_SetPWMDeadTime
 673              		.code	16
 674              		.thumb_func
 675              		.type	PWM_SetPWMDeadTime, %function
 676              	PWM_SetPWMDeadTime:
 677              	.LFB13:
 531:Generated_Source\PSoC4/PWM.c **** 
 532:Generated_Source\PSoC4/PWM.c **** 
 533:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM.c **** *
 537:Generated_Source\PSoC4/PWM.c **** * Summary:
 538:Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM.c **** 
 543:Generated_Source\PSoC4/PWM.c **** *
 544:Generated_Source\PSoC4/PWM.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM.c **** *
 548:Generated_Source\PSoC4/PWM.c **** * Return:
 549:Generated_Source\PSoC4/PWM.c **** *  None
 550:Generated_Source\PSoC4/PWM.c **** *
 551:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM.c **** {
 678              		.loc 1 553 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 16
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 90B5     		push	{r4, r7, lr}
 683              		.cfi_def_cfa_offset 12
 684              		.cfi_offset 4, -12
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 85B0     		sub	sp, sp, #20
 688              		.cfi_def_cfa_offset 32
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 691 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM.c **** 
 556:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 692              		.loc 1 556 0
 693 0008 0F23     		movs	r3, #15
 694 000a FC18     		adds	r4, r7, r3
 695 000c FFF7FEFF 		bl	CyEnterCriticalSection
 696 0010 0300     		movs	r3, r0
 697 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 23


 558:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 698              		.loc 1 558 0
 699 0014 0C4B     		ldr	r3, .L36
 700 0016 0C4A     		ldr	r2, .L36
 701 0018 1268     		ldr	r2, [r2]
 702 001a 0C49     		ldr	r1, .L36+4
 703 001c 0A40     		ands	r2, r1
 704 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 705              		.loc 1 559 0
 706 0020 094B     		ldr	r3, .L36
 707 0022 094A     		ldr	r2, .L36
 708 0024 1168     		ldr	r1, [r2]
 709 0026 7A68     		ldr	r2, [r7, #4]
 710 0028 1202     		lsls	r2, r2, #8
 711 002a 1204     		lsls	r2, r2, #16
 712 002c 120C     		lsrs	r2, r2, #16
 713 002e 0A43     		orrs	r2, r1
 714 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM.c **** 
 562:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 715              		.loc 1 562 0
 716 0032 0F23     		movs	r3, #15
 717 0034 FB18     		adds	r3, r7, r3
 718 0036 1B78     		ldrb	r3, [r3]
 719 0038 1800     		movs	r0, r3
 720 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/PWM.c **** }
 721              		.loc 1 563 0
 722 003e C046     		nop
 723 0040 BD46     		mov	sp, r7
 724 0042 05B0     		add	sp, sp, #20
 725              		@ sp needed
 726 0044 90BD     		pop	{r4, r7, pc}
 727              	.L37:
 728 0046 C046     		.align	2
 729              	.L36:
 730 0048 00012040 		.word	1075839232
 731 004c FF00FFFF 		.word	-65281
 732              		.cfi_endproc
 733              	.LFE13:
 734              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 735              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 736              		.align	2
 737              		.global	PWM_SetPWMInvert
 738              		.code	16
 739              		.thumb_func
 740              		.type	PWM_SetPWMInvert, %function
 741              	PWM_SetPWMInvert:
 742              	.LFB14:
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 568:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 24


 570:Generated_Source\PSoC4/PWM.c **** * Summary:
 571:Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM.c **** *
 575:Generated_Source\PSoC4/PWM.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM.c **** *   Values:
 578:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM.c **** *
 581:Generated_Source\PSoC4/PWM.c **** * Return:
 582:Generated_Source\PSoC4/PWM.c **** *  None
 583:Generated_Source\PSoC4/PWM.c **** *
 584:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM.c **** {
 743              		.loc 1 586 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 16
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747 0000 90B5     		push	{r4, r7, lr}
 748              		.cfi_def_cfa_offset 12
 749              		.cfi_offset 4, -12
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 85B0     		sub	sp, sp, #20
 753              		.cfi_def_cfa_offset 32
 754 0004 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 756 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM.c **** 
 589:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 757              		.loc 1 589 0
 758 0008 0F23     		movs	r3, #15
 759 000a FC18     		adds	r4, r7, r3
 760 000c FFF7FEFF 		bl	CyEnterCriticalSection
 761 0010 0300     		movs	r3, r0
 762 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/PWM.c **** 
 591:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 763              		.loc 1 591 0
 764 0014 0A4B     		ldr	r3, .L39
 765 0016 0A4A     		ldr	r2, .L39
 766 0018 1268     		ldr	r2, [r2]
 767 001a 0A49     		ldr	r1, .L39+4
 768 001c 0A40     		ands	r2, r1
 769 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 770              		.loc 1 592 0
 771 0020 074B     		ldr	r3, .L39
 772 0022 074A     		ldr	r2, .L39
 773 0024 1168     		ldr	r1, [r2]
 774 0026 7A68     		ldr	r2, [r7, #4]
 775 0028 0A43     		orrs	r2, r1
 776 002a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 25


 593:Generated_Source\PSoC4/PWM.c **** 
 594:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 777              		.loc 1 594 0
 778 002c 0F23     		movs	r3, #15
 779 002e FB18     		adds	r3, r7, r3
 780 0030 1B78     		ldrb	r3, [r3]
 781 0032 1800     		movs	r0, r3
 782 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/PWM.c **** }
 783              		.loc 1 595 0
 784 0038 C046     		nop
 785 003a BD46     		mov	sp, r7
 786 003c 05B0     		add	sp, sp, #20
 787              		@ sp needed
 788 003e 90BD     		pop	{r4, r7, pc}
 789              	.L40:
 790              		.align	2
 791              	.L39:
 792 0040 00012040 		.word	1075839232
 793 0044 FFFFCFFF 		.word	-3145729
 794              		.cfi_endproc
 795              	.LFE14:
 796              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 797              		.section	.text.PWM_WriteCounter,"ax",%progbits
 798              		.align	2
 799              		.global	PWM_WriteCounter
 800              		.code	16
 801              		.thumb_func
 802              		.type	PWM_WriteCounter, %function
 803              	PWM_WriteCounter:
 804              	.LFB15:
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c **** 
 599:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 601:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM.c **** *
 603:Generated_Source\PSoC4/PWM.c **** * Summary:
 604:Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM.c **** *
 608:Generated_Source\PSoC4/PWM.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM.c **** *
 611:Generated_Source\PSoC4/PWM.c **** * Return:
 612:Generated_Source\PSoC4/PWM.c **** *  None
 613:Generated_Source\PSoC4/PWM.c **** *
 614:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM.c **** {
 805              		.loc 1 616 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 26


 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 7, -8
 812              		.cfi_offset 14, -4
 813 0002 82B0     		sub	sp, sp, #8
 814              		.cfi_def_cfa_offset 16
 815 0004 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 817 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 818              		.loc 1 617 0
 819 0008 044B     		ldr	r3, .L42
 820 000a 7A68     		ldr	r2, [r7, #4]
 821 000c 1204     		lsls	r2, r2, #16
 822 000e 120C     		lsrs	r2, r2, #16
 823 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PWM.c **** }
 824              		.loc 1 618 0
 825 0012 C046     		nop
 826 0014 BD46     		mov	sp, r7
 827 0016 02B0     		add	sp, sp, #8
 828              		@ sp needed
 829 0018 80BD     		pop	{r7, pc}
 830              	.L43:
 831 001a C046     		.align	2
 832              	.L42:
 833 001c 08012040 		.word	1075839240
 834              		.cfi_endproc
 835              	.LFE15:
 836              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 837              		.section	.text.PWM_ReadCounter,"ax",%progbits
 838              		.align	2
 839              		.global	PWM_ReadCounter
 840              		.code	16
 841              		.thumb_func
 842              		.type	PWM_ReadCounter, %function
 843              	PWM_ReadCounter:
 844              	.LFB16:
 619:Generated_Source\PSoC4/PWM.c **** 
 620:Generated_Source\PSoC4/PWM.c **** 
 621:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 623:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM.c **** *
 625:Generated_Source\PSoC4/PWM.c **** * Summary:
 626:Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM.c **** *
 628:Generated_Source\PSoC4/PWM.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM.c **** *  None
 630:Generated_Source\PSoC4/PWM.c **** *
 631:Generated_Source\PSoC4/PWM.c **** * Return:
 632:Generated_Source\PSoC4/PWM.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM.c **** *
 634:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM.c **** {
 845              		.loc 1 636 0
 846              		.cfi_startproc
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 27


 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 00AF     		add	r7, sp, #0
 854              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 855              		.loc 1 637 0
 856 0004 034B     		ldr	r3, .L46
 857 0006 1B68     		ldr	r3, [r3]
 858 0008 1B04     		lsls	r3, r3, #16
 859 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/PWM.c **** }
 860              		.loc 1 638 0
 861 000c 1800     		movs	r0, r3
 862 000e BD46     		mov	sp, r7
 863              		@ sp needed
 864 0010 80BD     		pop	{r7, pc}
 865              	.L47:
 866 0012 C046     		.align	2
 867              	.L46:
 868 0014 08012040 		.word	1075839240
 869              		.cfi_endproc
 870              	.LFE16:
 871              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 872              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 873              		.align	2
 874              		.global	PWM_SetCounterMode
 875              		.code	16
 876              		.thumb_func
 877              		.type	PWM_SetCounterMode, %function
 878              	PWM_SetCounterMode:
 879              	.LFB17:
 639:Generated_Source\PSoC4/PWM.c **** 
 640:Generated_Source\PSoC4/PWM.c **** 
 641:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 643:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM.c **** *
 645:Generated_Source\PSoC4/PWM.c **** * Summary:
 646:Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM.c **** *
 649:Generated_Source\PSoC4/PWM.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM.c **** *   Values:
 652:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM.c **** *
 660:Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 28


 661:Generated_Source\PSoC4/PWM.c **** *  None
 662:Generated_Source\PSoC4/PWM.c **** *
 663:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM.c **** {
 880              		.loc 1 665 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 16
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884 0000 90B5     		push	{r4, r7, lr}
 885              		.cfi_def_cfa_offset 12
 886              		.cfi_offset 4, -12
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0002 85B0     		sub	sp, sp, #20
 890              		.cfi_def_cfa_offset 32
 891 0004 00AF     		add	r7, sp, #0
 892              		.cfi_def_cfa_register 7
 893 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 894              		.loc 1 668 0
 895 0008 0F23     		movs	r3, #15
 896 000a FC18     		adds	r4, r7, r3
 897 000c FFF7FEFF 		bl	CyEnterCriticalSection
 898 0010 0300     		movs	r3, r0
 899 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/PWM.c **** 
 670:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 900              		.loc 1 670 0
 901 0014 0A4B     		ldr	r3, .L49
 902 0016 0A4A     		ldr	r2, .L49
 903 0018 1268     		ldr	r2, [r2]
 904 001a 0A49     		ldr	r1, .L49+4
 905 001c 0A40     		ands	r2, r1
 906 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 907              		.loc 1 671 0
 908 0020 074B     		ldr	r3, .L49
 909 0022 074A     		ldr	r2, .L49
 910 0024 1168     		ldr	r1, [r2]
 911 0026 7A68     		ldr	r2, [r7, #4]
 912 0028 0A43     		orrs	r2, r1
 913 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/PWM.c **** 
 673:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 914              		.loc 1 673 0
 915 002c 0F23     		movs	r3, #15
 916 002e FB18     		adds	r3, r7, r3
 917 0030 1B78     		ldrb	r3, [r3]
 918 0032 1800     		movs	r0, r3
 919 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/PWM.c **** }
 920              		.loc 1 674 0
 921 0038 C046     		nop
 922 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 29


 923 003c 05B0     		add	sp, sp, #20
 924              		@ sp needed
 925 003e 90BD     		pop	{r4, r7, pc}
 926              	.L50:
 927              		.align	2
 928              	.L49:
 929 0040 00012040 		.word	1075839232
 930 0044 FFFFFCFF 		.word	-196609
 931              		.cfi_endproc
 932              	.LFE17:
 933              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 934              		.section	.text.PWM_WritePeriod,"ax",%progbits
 935              		.align	2
 936              		.global	PWM_WritePeriod
 937              		.code	16
 938              		.thumb_func
 939              		.type	PWM_WritePeriod, %function
 940              	PWM_WritePeriod:
 941              	.LFB18:
 675:Generated_Source\PSoC4/PWM.c **** 
 676:Generated_Source\PSoC4/PWM.c **** 
 677:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 679:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM.c **** *
 681:Generated_Source\PSoC4/PWM.c **** * Summary:
 682:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM.c **** *
 686:Generated_Source\PSoC4/PWM.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM.c **** *
 689:Generated_Source\PSoC4/PWM.c **** * Return:
 690:Generated_Source\PSoC4/PWM.c **** *  None
 691:Generated_Source\PSoC4/PWM.c **** *
 692:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM.c **** {
 942              		.loc 1 694 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946 0000 80B5     		push	{r7, lr}
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 0002 82B0     		sub	sp, sp, #8
 951              		.cfi_def_cfa_offset 16
 952 0004 00AF     		add	r7, sp, #0
 953              		.cfi_def_cfa_register 7
 954 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 955              		.loc 1 695 0
 956 0008 044B     		ldr	r3, .L52
 957 000a 7A68     		ldr	r2, [r7, #4]
 958 000c 1204     		lsls	r2, r2, #16
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 30


 959 000e 120C     		lsrs	r2, r2, #16
 960 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/PWM.c **** }
 961              		.loc 1 696 0
 962 0012 C046     		nop
 963 0014 BD46     		mov	sp, r7
 964 0016 02B0     		add	sp, sp, #8
 965              		@ sp needed
 966 0018 80BD     		pop	{r7, pc}
 967              	.L53:
 968 001a C046     		.align	2
 969              	.L52:
 970 001c 14012040 		.word	1075839252
 971              		.cfi_endproc
 972              	.LFE18:
 973              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 974              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 975              		.align	2
 976              		.global	PWM_ReadPeriod
 977              		.code	16
 978              		.thumb_func
 979              		.type	PWM_ReadPeriod, %function
 980              	PWM_ReadPeriod:
 981              	.LFB19:
 697:Generated_Source\PSoC4/PWM.c **** 
 698:Generated_Source\PSoC4/PWM.c **** 
 699:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 701:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM.c **** *
 703:Generated_Source\PSoC4/PWM.c **** * Summary:
 704:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM.c **** *
 706:Generated_Source\PSoC4/PWM.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM.c **** *  None
 708:Generated_Source\PSoC4/PWM.c **** *
 709:Generated_Source\PSoC4/PWM.c **** * Return:
 710:Generated_Source\PSoC4/PWM.c **** *  Period value
 711:Generated_Source\PSoC4/PWM.c **** *
 712:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM.c **** {
 982              		.loc 1 714 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986 0000 80B5     		push	{r7, lr}
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 992              		.loc 1 715 0
 993 0004 034B     		ldr	r3, .L56
 994 0006 1B68     		ldr	r3, [r3]
 995 0008 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 31


 996 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/PWM.c **** }
 997              		.loc 1 716 0
 998 000c 1800     		movs	r0, r3
 999 000e BD46     		mov	sp, r7
 1000              		@ sp needed
 1001 0010 80BD     		pop	{r7, pc}
 1002              	.L57:
 1003 0012 C046     		.align	2
 1004              	.L56:
 1005 0014 14012040 		.word	1075839252
 1006              		.cfi_endproc
 1007              	.LFE19:
 1008              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 1009              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 1010              		.align	2
 1011              		.global	PWM_SetCompareSwap
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	PWM_SetCompareSwap, %function
 1015              	PWM_SetCompareSwap:
 1016              	.LFB20:
 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 721:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM.c **** *
 723:Generated_Source\PSoC4/PWM.c **** * Summary:
 724:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM.c **** *
 729:Generated_Source\PSoC4/PWM.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM.c **** *   Values:
 732:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM.c **** *
 735:Generated_Source\PSoC4/PWM.c **** * Return:
 736:Generated_Source\PSoC4/PWM.c **** *  None
 737:Generated_Source\PSoC4/PWM.c **** *
 738:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM.c **** {
 1017              		.loc 1 740 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 16
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 90B5     		push	{r4, r7, lr}
 1022              		.cfi_def_cfa_offset 12
 1023              		.cfi_offset 4, -12
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 85B0     		sub	sp, sp, #20
 1027              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 32


 1028 0004 00AF     		add	r7, sp, #0
 1029              		.cfi_def_cfa_register 7
 1030 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM.c **** 
 743:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1031              		.loc 1 743 0
 1032 0008 0F23     		movs	r3, #15
 1033 000a FC18     		adds	r4, r7, r3
 1034 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1035 0010 0300     		movs	r3, r0
 1036 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 1037              		.loc 1 745 0
 1038 0014 0B4B     		ldr	r3, .L59
 1039 0016 0B4A     		ldr	r2, .L59
 1040 0018 1268     		ldr	r2, [r2]
 1041 001a 0121     		movs	r1, #1
 1042 001c 8A43     		bics	r2, r1
 1043 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 1044              		.loc 1 746 0
 1045 0020 084B     		ldr	r3, .L59
 1046 0022 084A     		ldr	r2, .L59
 1047 0024 1168     		ldr	r1, [r2]
 1048 0026 7A68     		ldr	r2, [r7, #4]
 1049 0028 0120     		movs	r0, #1
 1050 002a 0240     		ands	r2, r0
 1051 002c 0A43     		orrs	r2, r1
 1052 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/PWM.c **** 
 748:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1053              		.loc 1 748 0
 1054 0030 0F23     		movs	r3, #15
 1055 0032 FB18     		adds	r3, r7, r3
 1056 0034 1B78     		ldrb	r3, [r3]
 1057 0036 1800     		movs	r0, r3
 1058 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/PWM.c **** }
 1059              		.loc 1 749 0
 1060 003c C046     		nop
 1061 003e BD46     		mov	sp, r7
 1062 0040 05B0     		add	sp, sp, #20
 1063              		@ sp needed
 1064 0042 90BD     		pop	{r4, r7, pc}
 1065              	.L60:
 1066              		.align	2
 1067              	.L59:
 1068 0044 00012040 		.word	1075839232
 1069              		.cfi_endproc
 1070              	.LFE20:
 1071              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 1072              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1073              		.align	2
 1074              		.global	PWM_WritePeriodBuf
 1075              		.code	16
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 33


 1076              		.thumb_func
 1077              		.type	PWM_WritePeriodBuf, %function
 1078              	PWM_WritePeriodBuf:
 1079              	.LFB21:
 750:Generated_Source\PSoC4/PWM.c **** 
 751:Generated_Source\PSoC4/PWM.c **** 
 752:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM.c **** *
 756:Generated_Source\PSoC4/PWM.c **** * Summary:
 757:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM.c **** *
 759:Generated_Source\PSoC4/PWM.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM.c **** *
 762:Generated_Source\PSoC4/PWM.c **** * Return:
 763:Generated_Source\PSoC4/PWM.c **** *  None
 764:Generated_Source\PSoC4/PWM.c **** *
 765:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM.c **** {
 1080              		.loc 1 767 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 8
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 82B0     		sub	sp, sp, #8
 1089              		.cfi_def_cfa_offset 16
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1093              		.loc 1 768 0
 1094 0008 044B     		ldr	r3, .L62
 1095 000a 7A68     		ldr	r2, [r7, #4]
 1096 000c 1204     		lsls	r2, r2, #16
 1097 000e 120C     		lsrs	r2, r2, #16
 1098 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/PWM.c **** }
 1099              		.loc 1 769 0
 1100 0012 C046     		nop
 1101 0014 BD46     		mov	sp, r7
 1102 0016 02B0     		add	sp, sp, #8
 1103              		@ sp needed
 1104 0018 80BD     		pop	{r7, pc}
 1105              	.L63:
 1106 001a C046     		.align	2
 1107              	.L62:
 1108 001c 18012040 		.word	1075839256
 1109              		.cfi_endproc
 1110              	.LFE21:
 1111              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1112              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 34


 1113              		.align	2
 1114              		.global	PWM_ReadPeriodBuf
 1115              		.code	16
 1116              		.thumb_func
 1117              		.type	PWM_ReadPeriodBuf, %function
 1118              	PWM_ReadPeriodBuf:
 1119              	.LFB22:
 770:Generated_Source\PSoC4/PWM.c **** 
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM.c **** *
 776:Generated_Source\PSoC4/PWM.c **** * Summary:
 777:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM.c **** *
 779:Generated_Source\PSoC4/PWM.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM.c **** *  None
 781:Generated_Source\PSoC4/PWM.c **** *
 782:Generated_Source\PSoC4/PWM.c **** * Return:
 783:Generated_Source\PSoC4/PWM.c **** *  Period value
 784:Generated_Source\PSoC4/PWM.c **** *
 785:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM.c **** {
 1120              		.loc 1 787 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 0000 80B5     		push	{r7, lr}
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 7, -8
 1127              		.cfi_offset 14, -4
 1128 0002 00AF     		add	r7, sp, #0
 1129              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1130              		.loc 1 788 0
 1131 0004 034B     		ldr	r3, .L66
 1132 0006 1B68     		ldr	r3, [r3]
 1133 0008 1B04     		lsls	r3, r3, #16
 1134 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/PWM.c **** }
 1135              		.loc 1 789 0
 1136 000c 1800     		movs	r0, r3
 1137 000e BD46     		mov	sp, r7
 1138              		@ sp needed
 1139 0010 80BD     		pop	{r7, pc}
 1140              	.L67:
 1141 0012 C046     		.align	2
 1142              	.L66:
 1143 0014 18012040 		.word	1075839256
 1144              		.cfi_endproc
 1145              	.LFE22:
 1146              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1147              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_SetPeriodSwap
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 35


 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_SetPeriodSwap, %function
 1153              	PWM_SetPeriodSwap:
 1154              	.LFB23:
 790:Generated_Source\PSoC4/PWM.c **** 
 791:Generated_Source\PSoC4/PWM.c **** 
 792:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM.c **** *
 796:Generated_Source\PSoC4/PWM.c **** * Summary:
 797:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM.c **** *
 802:Generated_Source\PSoC4/PWM.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM.c **** *   Values:
 805:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM.c **** *
 808:Generated_Source\PSoC4/PWM.c **** * Return:
 809:Generated_Source\PSoC4/PWM.c **** *  None
 810:Generated_Source\PSoC4/PWM.c **** *
 811:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM.c **** {
 1155              		.loc 1 813 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159 0000 90B5     		push	{r4, r7, lr}
 1160              		.cfi_def_cfa_offset 12
 1161              		.cfi_offset 4, -12
 1162              		.cfi_offset 7, -8
 1163              		.cfi_offset 14, -4
 1164 0002 85B0     		sub	sp, sp, #20
 1165              		.cfi_def_cfa_offset 32
 1166 0004 00AF     		add	r7, sp, #0
 1167              		.cfi_def_cfa_register 7
 1168 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM.c **** 
 816:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1169              		.loc 1 816 0
 1170 0008 0F23     		movs	r3, #15
 1171 000a FC18     		adds	r4, r7, r3
 1172 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1173 0010 0300     		movs	r3, r0
 1174 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/PWM.c **** 
 818:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 1175              		.loc 1 818 0
 1176 0014 0C4B     		ldr	r3, .L69
 1177 0016 0C4A     		ldr	r2, .L69
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 36


 1178 0018 1268     		ldr	r2, [r2]
 1179 001a 0221     		movs	r1, #2
 1180 001c 8A43     		bics	r2, r1
 1181 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1182              		.loc 1 819 0
 1183 0020 094B     		ldr	r3, .L69
 1184 0022 094A     		ldr	r2, .L69
 1185 0024 1168     		ldr	r1, [r2]
 1186 0026 7A68     		ldr	r2, [r7, #4]
 1187 0028 5200     		lsls	r2, r2, #1
 1188 002a 0220     		movs	r0, #2
 1189 002c 0240     		ands	r2, r0
 1190 002e 0A43     		orrs	r2, r1
 1191 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM.c **** 
 822:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1192              		.loc 1 822 0
 1193 0032 0F23     		movs	r3, #15
 1194 0034 FB18     		adds	r3, r7, r3
 1195 0036 1B78     		ldrb	r3, [r3]
 1196 0038 1800     		movs	r0, r3
 1197 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/PWM.c **** }
 1198              		.loc 1 823 0
 1199 003e C046     		nop
 1200 0040 BD46     		mov	sp, r7
 1201 0042 05B0     		add	sp, sp, #20
 1202              		@ sp needed
 1203 0044 90BD     		pop	{r4, r7, pc}
 1204              	.L70:
 1205 0046 C046     		.align	2
 1206              	.L69:
 1207 0048 00012040 		.word	1075839232
 1208              		.cfi_endproc
 1209              	.LFE23:
 1210              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1211              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1212              		.align	2
 1213              		.global	PWM_WriteCompare
 1214              		.code	16
 1215              		.thumb_func
 1216              		.type	PWM_WriteCompare, %function
 1217              	PWM_WriteCompare:
 1218              	.LFB24:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** 
 826:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 828:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM.c **** *
 830:Generated_Source\PSoC4/PWM.c **** * Summary:
 831:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM.c **** *
 834:Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 37


 835:Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM.c **** *
 837:Generated_Source\PSoC4/PWM.c **** * Return:
 838:Generated_Source\PSoC4/PWM.c **** *  None
 839:Generated_Source\PSoC4/PWM.c **** *
 840:Generated_Source\PSoC4/PWM.c **** * Note:
 841:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM.c **** *
 848:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM.c **** {
 1219              		.loc 1 850 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 8
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 82B0     		sub	sp, sp, #8
 1228              		.cfi_def_cfa_offset 16
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM.c **** 
 855:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM.c **** 
 858:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM.c ****         {
 860:Generated_Source\PSoC4/PWM.c ****             compare++;
 861:Generated_Source\PSoC4/PWM.c ****         }
 862:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM.c ****         {
 864:Generated_Source\PSoC4/PWM.c ****             compare--;
 865:Generated_Source\PSoC4/PWM.c ****         }
 866:Generated_Source\PSoC4/PWM.c ****         else
 867:Generated_Source\PSoC4/PWM.c ****         {
 868:Generated_Source\PSoC4/PWM.c ****         }
 869:Generated_Source\PSoC4/PWM.c ****         
 870:Generated_Source\PSoC4/PWM.c ****     
 871:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM.c ****     
 873:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1232              		.loc 1 873 0
 1233 0008 044B     		ldr	r3, .L72
 1234 000a 7A68     		ldr	r2, [r7, #4]
 1235 000c 1204     		lsls	r2, r2, #16
 1236 000e 120C     		lsrs	r2, r2, #16
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 38


 1237 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/PWM.c **** }
 1238              		.loc 1 874 0
 1239 0012 C046     		nop
 1240 0014 BD46     		mov	sp, r7
 1241 0016 02B0     		add	sp, sp, #8
 1242              		@ sp needed
 1243 0018 80BD     		pop	{r7, pc}
 1244              	.L73:
 1245 001a C046     		.align	2
 1246              	.L72:
 1247 001c 0C012040 		.word	1075839244
 1248              		.cfi_endproc
 1249              	.LFE24:
 1250              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1251              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1252              		.align	2
 1253              		.global	PWM_ReadCompare
 1254              		.code	16
 1255              		.thumb_func
 1256              		.type	PWM_ReadCompare, %function
 1257              	PWM_ReadCompare:
 1258              	.LFB25:
 875:Generated_Source\PSoC4/PWM.c **** 
 876:Generated_Source\PSoC4/PWM.c **** 
 877:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 879:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM.c **** *
 881:Generated_Source\PSoC4/PWM.c **** * Summary:
 882:Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM.c **** *
 888:Generated_Source\PSoC4/PWM.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM.c **** *  None
 890:Generated_Source\PSoC4/PWM.c **** *
 891:Generated_Source\PSoC4/PWM.c **** * Return:
 892:Generated_Source\PSoC4/PWM.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM.c **** *
 894:Generated_Source\PSoC4/PWM.c **** * Note:
 895:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM.c **** *
 899:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM.c **** {
 1259              		.loc 1 901 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 1, uses_anonymous_args = 0
 1263 0000 80B5     		push	{r7, lr}
 1264              		.cfi_def_cfa_offset 8
 1265              		.cfi_offset 7, -8
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 39


 1266              		.cfi_offset 14, -4
 1267 0002 00AF     		add	r7, sp, #0
 1268              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM.c **** 
 907:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM.c ****         
 910:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM.c ****         
 912:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM.c ****         {
 914:Generated_Source\PSoC4/PWM.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM.c ****         }
 916:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM.c ****         {
 918:Generated_Source\PSoC4/PWM.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM.c ****         }
 920:Generated_Source\PSoC4/PWM.c ****         else
 921:Generated_Source\PSoC4/PWM.c ****         {
 922:Generated_Source\PSoC4/PWM.c ****         }
 923:Generated_Source\PSoC4/PWM.c **** 
 924:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM.c ****     #else
 926:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1269              		.loc 1 926 0
 1270 0004 034B     		ldr	r3, .L76
 1271 0006 1B68     		ldr	r3, [r3]
 1272 0008 1B04     		lsls	r3, r3, #16
 1273 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM.c **** }
 1274              		.loc 1 928 0
 1275 000c 1800     		movs	r0, r3
 1276 000e BD46     		mov	sp, r7
 1277              		@ sp needed
 1278 0010 80BD     		pop	{r7, pc}
 1279              	.L77:
 1280 0012 C046     		.align	2
 1281              	.L76:
 1282 0014 0C012040 		.word	1075839244
 1283              		.cfi_endproc
 1284              	.LFE25:
 1285              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1286              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1287              		.align	2
 1288              		.global	PWM_WriteCompareBuf
 1289              		.code	16
 1290              		.thumb_func
 1291              		.type	PWM_WriteCompareBuf, %function
 1292              	PWM_WriteCompareBuf:
 1293              	.LFB26:
 929:Generated_Source\PSoC4/PWM.c **** 
 930:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 40


 931:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM.c **** *
 935:Generated_Source\PSoC4/PWM.c **** * Summary:
 936:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM.c **** *
 939:Generated_Source\PSoC4/PWM.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM.c **** *
 942:Generated_Source\PSoC4/PWM.c **** * Return:
 943:Generated_Source\PSoC4/PWM.c **** *  None
 944:Generated_Source\PSoC4/PWM.c **** *
 945:Generated_Source\PSoC4/PWM.c **** * Note:
 946:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM.c **** *
 953:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM.c **** {
 1294              		.loc 1 955 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 8
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 0000 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 82B0     		sub	sp, sp, #8
 1303              		.cfi_def_cfa_offset 16
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 1306 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM.c **** 
 960:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM.c **** 
 963:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM.c ****         {
 965:Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM.c ****         }
 967:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM.c ****         {
 969:Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM.c ****         }
 971:Generated_Source\PSoC4/PWM.c ****         else
 972:Generated_Source\PSoC4/PWM.c ****         {
 973:Generated_Source\PSoC4/PWM.c ****         }
 974:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 41


 975:Generated_Source\PSoC4/PWM.c ****     
 976:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1307              		.loc 1 976 0
 1308 0008 044B     		ldr	r3, .L79
 1309 000a 7A68     		ldr	r2, [r7, #4]
 1310 000c 1204     		lsls	r2, r2, #16
 1311 000e 120C     		lsrs	r2, r2, #16
 1312 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/PWM.c **** }
 1313              		.loc 1 977 0
 1314 0012 C046     		nop
 1315 0014 BD46     		mov	sp, r7
 1316 0016 02B0     		add	sp, sp, #8
 1317              		@ sp needed
 1318 0018 80BD     		pop	{r7, pc}
 1319              	.L80:
 1320 001a C046     		.align	2
 1321              	.L79:
 1322 001c 10012040 		.word	1075839248
 1323              		.cfi_endproc
 1324              	.LFE26:
 1325              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1326              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1327              		.align	2
 1328              		.global	PWM_ReadCompareBuf
 1329              		.code	16
 1330              		.thumb_func
 1331              		.type	PWM_ReadCompareBuf, %function
 1332              	PWM_ReadCompareBuf:
 1333              	.LFB27:
 978:Generated_Source\PSoC4/PWM.c **** 
 979:Generated_Source\PSoC4/PWM.c **** 
 980:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM.c **** *
 984:Generated_Source\PSoC4/PWM.c **** * Summary:
 985:Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM.c **** *
 988:Generated_Source\PSoC4/PWM.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM.c **** *  None
 990:Generated_Source\PSoC4/PWM.c **** *
 991:Generated_Source\PSoC4/PWM.c **** * Return:
 992:Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM.c **** *
 994:Generated_Source\PSoC4/PWM.c **** * Note:
 995:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM.c **** *
 999:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM.c **** {
 1334              		.loc 1 1001 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 42


 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338 0000 80B5     		push	{r7, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 7, -8
 1341              		.cfi_offset 14, -4
 1342 0002 00AF     		add	r7, sp, #0
 1343              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM.c **** 
1007:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM.c **** 
1010:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM.c ****         
1012:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM.c ****         {
1014:Generated_Source\PSoC4/PWM.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM.c ****         }
1016:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM.c ****         {
1018:Generated_Source\PSoC4/PWM.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM.c ****         }
1020:Generated_Source\PSoC4/PWM.c ****         else
1021:Generated_Source\PSoC4/PWM.c ****         {
1022:Generated_Source\PSoC4/PWM.c ****         }
1023:Generated_Source\PSoC4/PWM.c **** 
1024:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM.c ****     #else
1026:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1344              		.loc 1 1026 0
 1345 0004 034B     		ldr	r3, .L83
 1346 0006 1B68     		ldr	r3, [r3]
 1347 0008 1B04     		lsls	r3, r3, #16
 1348 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM.c **** }
 1349              		.loc 1 1028 0
 1350 000c 1800     		movs	r0, r3
 1351 000e BD46     		mov	sp, r7
 1352              		@ sp needed
 1353 0010 80BD     		pop	{r7, pc}
 1354              	.L84:
 1355 0012 C046     		.align	2
 1356              	.L83:
 1357 0014 10012040 		.word	1075839248
 1358              		.cfi_endproc
 1359              	.LFE27:
 1360              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1361              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1362              		.align	2
 1363              		.global	PWM_ReadCapture
 1364              		.code	16
 1365              		.thumb_func
 1366              		.type	PWM_ReadCapture, %function
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 43


 1367              	PWM_ReadCapture:
 1368              	.LFB28:
1029:Generated_Source\PSoC4/PWM.c **** 
1030:Generated_Source\PSoC4/PWM.c **** 
1031:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1033:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM.c **** *
1035:Generated_Source\PSoC4/PWM.c **** * Summary:
1036:Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM.c **** *
1039:Generated_Source\PSoC4/PWM.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM.c **** *  None
1041:Generated_Source\PSoC4/PWM.c **** *
1042:Generated_Source\PSoC4/PWM.c **** * Return:
1043:Generated_Source\PSoC4/PWM.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM.c **** *
1045:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM.c **** {
 1369              		.loc 1 1047 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 0
 1372              		@ frame_needed = 1, uses_anonymous_args = 0
 1373 0000 80B5     		push	{r7, lr}
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 7, -8
 1376              		.cfi_offset 14, -4
 1377 0002 00AF     		add	r7, sp, #0
 1378              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1379              		.loc 1 1048 0
 1380 0004 034B     		ldr	r3, .L87
 1381 0006 1B68     		ldr	r3, [r3]
 1382 0008 1B04     		lsls	r3, r3, #16
 1383 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/PWM.c **** }
 1384              		.loc 1 1049 0
 1385 000c 1800     		movs	r0, r3
 1386 000e BD46     		mov	sp, r7
 1387              		@ sp needed
 1388 0010 80BD     		pop	{r7, pc}
 1389              	.L88:
 1390 0012 C046     		.align	2
 1391              	.L87:
 1392 0014 0C012040 		.word	1075839244
 1393              		.cfi_endproc
 1394              	.LFE28:
 1395              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1396              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1397              		.align	2
 1398              		.global	PWM_ReadCaptureBuf
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	PWM_ReadCaptureBuf, %function
 1402              	PWM_ReadCaptureBuf:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 44


 1403              	.LFB29:
1050:Generated_Source\PSoC4/PWM.c **** 
1051:Generated_Source\PSoC4/PWM.c **** 
1052:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM.c **** *
1056:Generated_Source\PSoC4/PWM.c **** * Summary:
1057:Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM.c **** *
1060:Generated_Source\PSoC4/PWM.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM.c **** *  None
1062:Generated_Source\PSoC4/PWM.c **** *
1063:Generated_Source\PSoC4/PWM.c **** * Return:
1064:Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM.c **** *
1066:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM.c **** {
 1404              		.loc 1 1068 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408 0000 80B5     		push	{r7, lr}
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 7, -8
 1411              		.cfi_offset 14, -4
 1412 0002 00AF     		add	r7, sp, #0
 1413              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1414              		.loc 1 1069 0
 1415 0004 034B     		ldr	r3, .L91
 1416 0006 1B68     		ldr	r3, [r3]
 1417 0008 1B04     		lsls	r3, r3, #16
 1418 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/PWM.c **** }
 1419              		.loc 1 1070 0
 1420 000c 1800     		movs	r0, r3
 1421 000e BD46     		mov	sp, r7
 1422              		@ sp needed
 1423 0010 80BD     		pop	{r7, pc}
 1424              	.L92:
 1425 0012 C046     		.align	2
 1426              	.L91:
 1427 0014 10012040 		.word	1075839248
 1428              		.cfi_endproc
 1429              	.LFE29:
 1430              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1431              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1432              		.align	2
 1433              		.global	PWM_SetCaptureMode
 1434              		.code	16
 1435              		.thumb_func
 1436              		.type	PWM_SetCaptureMode, %function
 1437              	PWM_SetCaptureMode:
 1438              	.LFB30:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 45


1071:Generated_Source\PSoC4/PWM.c **** 
1072:Generated_Source\PSoC4/PWM.c **** 
1073:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1075:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM.c **** *
1077:Generated_Source\PSoC4/PWM.c **** * Summary:
1078:Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM.c **** *
1082:Generated_Source\PSoC4/PWM.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM.c **** *   Values:
1085:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM.c **** *
1090:Generated_Source\PSoC4/PWM.c **** * Return:
1091:Generated_Source\PSoC4/PWM.c **** *  None
1092:Generated_Source\PSoC4/PWM.c **** *
1093:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM.c **** {
 1439              		.loc 1 1095 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 16
 1442              		@ frame_needed = 1, uses_anonymous_args = 0
 1443 0000 90B5     		push	{r4, r7, lr}
 1444              		.cfi_def_cfa_offset 12
 1445              		.cfi_offset 4, -12
 1446              		.cfi_offset 7, -8
 1447              		.cfi_offset 14, -4
 1448 0002 85B0     		sub	sp, sp, #20
 1449              		.cfi_def_cfa_offset 32
 1450 0004 00AF     		add	r7, sp, #0
 1451              		.cfi_def_cfa_register 7
 1452 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM.c **** 
1098:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1453              		.loc 1 1098 0
 1454 0008 0F23     		movs	r3, #15
 1455 000a FC18     		adds	r4, r7, r3
 1456 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1457 0010 0300     		movs	r3, r0
 1458 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/PWM.c **** 
1100:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1459              		.loc 1 1100 0
 1460 0014 0A4B     		ldr	r3, .L94
 1461 0016 0A4A     		ldr	r2, .L94
 1462 0018 1268     		ldr	r2, [r2]
 1463 001a 0321     		movs	r1, #3
 1464 001c 8A43     		bics	r2, r1
 1465 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 46


1101:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1466              		.loc 1 1101 0
 1467 0020 074B     		ldr	r3, .L94
 1468 0022 074A     		ldr	r2, .L94
 1469 0024 1168     		ldr	r1, [r2]
 1470 0026 7A68     		ldr	r2, [r7, #4]
 1471 0028 0A43     		orrs	r2, r1
 1472 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/PWM.c **** 
1103:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1473              		.loc 1 1103 0
 1474 002c 0F23     		movs	r3, #15
 1475 002e FB18     		adds	r3, r7, r3
 1476 0030 1B78     		ldrb	r3, [r3]
 1477 0032 1800     		movs	r0, r3
 1478 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/PWM.c **** }
 1479              		.loc 1 1104 0
 1480 0038 C046     		nop
 1481 003a BD46     		mov	sp, r7
 1482 003c 05B0     		add	sp, sp, #20
 1483              		@ sp needed
 1484 003e 90BD     		pop	{r4, r7, pc}
 1485              	.L95:
 1486              		.align	2
 1487              	.L94:
 1488 0040 24012040 		.word	1075839268
 1489              		.cfi_endproc
 1490              	.LFE30:
 1491              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1492              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1493              		.align	2
 1494              		.global	PWM_SetReloadMode
 1495              		.code	16
 1496              		.thumb_func
 1497              		.type	PWM_SetReloadMode, %function
 1498              	PWM_SetReloadMode:
 1499              	.LFB31:
1105:Generated_Source\PSoC4/PWM.c **** 
1106:Generated_Source\PSoC4/PWM.c **** 
1107:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1109:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM.c **** *
1111:Generated_Source\PSoC4/PWM.c **** * Summary:
1112:Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM.c **** *  input.
1114:Generated_Source\PSoC4/PWM.c **** *
1115:Generated_Source\PSoC4/PWM.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM.c **** *   Values:
1118:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM.c **** *
1123:Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 47


1124:Generated_Source\PSoC4/PWM.c **** *  None
1125:Generated_Source\PSoC4/PWM.c **** *
1126:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM.c **** {
 1500              		.loc 1 1128 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 16
 1503              		@ frame_needed = 1, uses_anonymous_args = 0
 1504 0000 90B5     		push	{r4, r7, lr}
 1505              		.cfi_def_cfa_offset 12
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 7, -8
 1508              		.cfi_offset 14, -4
 1509 0002 85B0     		sub	sp, sp, #20
 1510              		.cfi_def_cfa_offset 32
 1511 0004 00AF     		add	r7, sp, #0
 1512              		.cfi_def_cfa_register 7
 1513 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM.c **** 
1131:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1514              		.loc 1 1131 0
 1515 0008 0F23     		movs	r3, #15
 1516 000a FC18     		adds	r4, r7, r3
 1517 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1518 0010 0300     		movs	r3, r0
 1519 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/PWM.c **** 
1133:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1520              		.loc 1 1133 0
 1521 0014 0B4B     		ldr	r3, .L97
 1522 0016 0B4A     		ldr	r2, .L97
 1523 0018 1268     		ldr	r2, [r2]
 1524 001a 3021     		movs	r1, #48
 1525 001c 8A43     		bics	r2, r1
 1526 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1527              		.loc 1 1134 0
 1528 0020 084B     		ldr	r3, .L97
 1529 0022 084A     		ldr	r2, .L97
 1530 0024 1168     		ldr	r1, [r2]
 1531 0026 7A68     		ldr	r2, [r7, #4]
 1532 0028 1201     		lsls	r2, r2, #4
 1533 002a 0A43     		orrs	r2, r1
 1534 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/PWM.c **** 
1136:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1535              		.loc 1 1136 0
 1536 002e 0F23     		movs	r3, #15
 1537 0030 FB18     		adds	r3, r7, r3
 1538 0032 1B78     		ldrb	r3, [r3]
 1539 0034 1800     		movs	r0, r3
 1540 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/PWM.c **** }
 1541              		.loc 1 1137 0
 1542 003a C046     		nop
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 48


 1543 003c BD46     		mov	sp, r7
 1544 003e 05B0     		add	sp, sp, #20
 1545              		@ sp needed
 1546 0040 90BD     		pop	{r4, r7, pc}
 1547              	.L98:
 1548 0042 C046     		.align	2
 1549              	.L97:
 1550 0044 24012040 		.word	1075839268
 1551              		.cfi_endproc
 1552              	.LFE31:
 1553              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1554              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1555              		.align	2
 1556              		.global	PWM_SetStartMode
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	PWM_SetStartMode, %function
 1560              	PWM_SetStartMode:
 1561              	.LFB32:
1138:Generated_Source\PSoC4/PWM.c **** 
1139:Generated_Source\PSoC4/PWM.c **** 
1140:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1142:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM.c **** *
1144:Generated_Source\PSoC4/PWM.c **** * Summary:
1145:Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM.c **** *
1148:Generated_Source\PSoC4/PWM.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM.c **** *   Values:
1151:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM.c **** *
1156:Generated_Source\PSoC4/PWM.c **** * Return:
1157:Generated_Source\PSoC4/PWM.c **** *  None
1158:Generated_Source\PSoC4/PWM.c **** *
1159:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM.c **** {
 1562              		.loc 1 1161 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 16
 1565              		@ frame_needed = 1, uses_anonymous_args = 0
 1566 0000 90B5     		push	{r4, r7, lr}
 1567              		.cfi_def_cfa_offset 12
 1568              		.cfi_offset 4, -12
 1569              		.cfi_offset 7, -8
 1570              		.cfi_offset 14, -4
 1571 0002 85B0     		sub	sp, sp, #20
 1572              		.cfi_def_cfa_offset 32
 1573 0004 00AF     		add	r7, sp, #0
 1574              		.cfi_def_cfa_register 7
 1575 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 49


1162:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM.c **** 
1164:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1576              		.loc 1 1164 0
 1577 0008 0F23     		movs	r3, #15
 1578 000a FC18     		adds	r4, r7, r3
 1579 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1580 0010 0300     		movs	r3, r0
 1581 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/PWM.c **** 
1166:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1582              		.loc 1 1166 0
 1583 0014 0B4B     		ldr	r3, .L100
 1584 0016 0B4A     		ldr	r2, .L100
 1585 0018 1268     		ldr	r2, [r2]
 1586 001a 0B49     		ldr	r1, .L100+4
 1587 001c 0A40     		ands	r2, r1
 1588 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1589              		.loc 1 1167 0
 1590 0020 084B     		ldr	r3, .L100
 1591 0022 084A     		ldr	r2, .L100
 1592 0024 1168     		ldr	r1, [r2]
 1593 0026 7A68     		ldr	r2, [r7, #4]
 1594 0028 1202     		lsls	r2, r2, #8
 1595 002a 0A43     		orrs	r2, r1
 1596 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/PWM.c **** 
1169:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1597              		.loc 1 1169 0
 1598 002e 0F23     		movs	r3, #15
 1599 0030 FB18     		adds	r3, r7, r3
 1600 0032 1B78     		ldrb	r3, [r3]
 1601 0034 1800     		movs	r0, r3
 1602 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/PWM.c **** }
 1603              		.loc 1 1170 0
 1604 003a C046     		nop
 1605 003c BD46     		mov	sp, r7
 1606 003e 05B0     		add	sp, sp, #20
 1607              		@ sp needed
 1608 0040 90BD     		pop	{r4, r7, pc}
 1609              	.L101:
 1610 0042 C046     		.align	2
 1611              	.L100:
 1612 0044 24012040 		.word	1075839268
 1613 0048 FFFCFFFF 		.word	-769
 1614              		.cfi_endproc
 1615              	.LFE32:
 1616              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1617              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1618              		.align	2
 1619              		.global	PWM_SetStopMode
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	PWM_SetStopMode, %function
 1623              	PWM_SetStopMode:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 50


 1624              	.LFB33:
1171:Generated_Source\PSoC4/PWM.c **** 
1172:Generated_Source\PSoC4/PWM.c **** 
1173:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1175:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM.c **** *
1177:Generated_Source\PSoC4/PWM.c **** * Summary:
1178:Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM.c **** *
1180:Generated_Source\PSoC4/PWM.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM.c **** *   Values:
1183:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM.c **** *
1188:Generated_Source\PSoC4/PWM.c **** * Return:
1189:Generated_Source\PSoC4/PWM.c **** *  None
1190:Generated_Source\PSoC4/PWM.c **** *
1191:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM.c **** {
 1625              		.loc 1 1193 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 16
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629 0000 90B5     		push	{r4, r7, lr}
 1630              		.cfi_def_cfa_offset 12
 1631              		.cfi_offset 4, -12
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634 0002 85B0     		sub	sp, sp, #20
 1635              		.cfi_def_cfa_offset 32
 1636 0004 00AF     		add	r7, sp, #0
 1637              		.cfi_def_cfa_register 7
 1638 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM.c **** 
1196:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1639              		.loc 1 1196 0
 1640 0008 0F23     		movs	r3, #15
 1641 000a FC18     		adds	r4, r7, r3
 1642 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1643 0010 0300     		movs	r3, r0
 1644 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/PWM.c **** 
1198:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1645              		.loc 1 1198 0
 1646 0014 0B4B     		ldr	r3, .L103
 1647 0016 0B4A     		ldr	r2, .L103
 1648 0018 1268     		ldr	r2, [r2]
 1649 001a C021     		movs	r1, #192
 1650 001c 8A43     		bics	r2, r1
 1651 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 51


 1652              		.loc 1 1199 0
 1653 0020 084B     		ldr	r3, .L103
 1654 0022 084A     		ldr	r2, .L103
 1655 0024 1168     		ldr	r1, [r2]
 1656 0026 7A68     		ldr	r2, [r7, #4]
 1657 0028 9201     		lsls	r2, r2, #6
 1658 002a 0A43     		orrs	r2, r1
 1659 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/PWM.c **** 
1201:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1660              		.loc 1 1201 0
 1661 002e 0F23     		movs	r3, #15
 1662 0030 FB18     		adds	r3, r7, r3
 1663 0032 1B78     		ldrb	r3, [r3]
 1664 0034 1800     		movs	r0, r3
 1665 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/PWM.c **** }
 1666              		.loc 1 1202 0
 1667 003a C046     		nop
 1668 003c BD46     		mov	sp, r7
 1669 003e 05B0     		add	sp, sp, #20
 1670              		@ sp needed
 1671 0040 90BD     		pop	{r4, r7, pc}
 1672              	.L104:
 1673 0042 C046     		.align	2
 1674              	.L103:
 1675 0044 24012040 		.word	1075839268
 1676              		.cfi_endproc
 1677              	.LFE33:
 1678              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1679              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1680              		.align	2
 1681              		.global	PWM_SetCountMode
 1682              		.code	16
 1683              		.thumb_func
 1684              		.type	PWM_SetCountMode, %function
 1685              	PWM_SetCountMode:
 1686              	.LFB34:
1203:Generated_Source\PSoC4/PWM.c **** 
1204:Generated_Source\PSoC4/PWM.c **** 
1205:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1207:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM.c **** *
1209:Generated_Source\PSoC4/PWM.c **** * Summary:
1210:Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM.c **** *  input.
1212:Generated_Source\PSoC4/PWM.c **** *
1213:Generated_Source\PSoC4/PWM.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM.c **** *   Values:
1216:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM.c **** *
1221:Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 52


1222:Generated_Source\PSoC4/PWM.c **** *  None
1223:Generated_Source\PSoC4/PWM.c **** *
1224:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM.c **** {
 1687              		.loc 1 1226 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 16
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691 0000 90B5     		push	{r4, r7, lr}
 1692              		.cfi_def_cfa_offset 12
 1693              		.cfi_offset 4, -12
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 85B0     		sub	sp, sp, #20
 1697              		.cfi_def_cfa_offset 32
 1698 0004 00AF     		add	r7, sp, #0
 1699              		.cfi_def_cfa_register 7
 1700 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM.c **** 
1229:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1701              		.loc 1 1229 0
 1702 0008 0F23     		movs	r3, #15
 1703 000a FC18     		adds	r4, r7, r3
 1704 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1705 0010 0300     		movs	r3, r0
 1706 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/PWM.c **** 
1231:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1707              		.loc 1 1231 0
 1708 0014 0B4B     		ldr	r3, .L106
 1709 0016 0B4A     		ldr	r2, .L106
 1710 0018 1268     		ldr	r2, [r2]
 1711 001a 0C21     		movs	r1, #12
 1712 001c 8A43     		bics	r2, r1
 1713 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1714              		.loc 1 1232 0
 1715 0020 084B     		ldr	r3, .L106
 1716 0022 084A     		ldr	r2, .L106
 1717 0024 1168     		ldr	r1, [r2]
 1718 0026 7A68     		ldr	r2, [r7, #4]
 1719 0028 9200     		lsls	r2, r2, #2
 1720 002a 0A43     		orrs	r2, r1
 1721 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/PWM.c **** 
1234:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1722              		.loc 1 1234 0
 1723 002e 0F23     		movs	r3, #15
 1724 0030 FB18     		adds	r3, r7, r3
 1725 0032 1B78     		ldrb	r3, [r3]
 1726 0034 1800     		movs	r0, r3
 1727 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/PWM.c **** }
 1728              		.loc 1 1235 0
 1729 003a C046     		nop
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 53


 1730 003c BD46     		mov	sp, r7
 1731 003e 05B0     		add	sp, sp, #20
 1732              		@ sp needed
 1733 0040 90BD     		pop	{r4, r7, pc}
 1734              	.L107:
 1735 0042 C046     		.align	2
 1736              	.L106:
 1737 0044 24012040 		.word	1075839268
 1738              		.cfi_endproc
 1739              	.LFE34:
 1740              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1741              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1742              		.align	2
 1743              		.global	PWM_TriggerCommand
 1744              		.code	16
 1745              		.thumb_func
 1746              		.type	PWM_TriggerCommand, %function
 1747              	PWM_TriggerCommand:
 1748              	.LFB35:
1236:Generated_Source\PSoC4/PWM.c **** 
1237:Generated_Source\PSoC4/PWM.c **** 
1238:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1240:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM.c **** *
1242:Generated_Source\PSoC4/PWM.c **** * Summary:
1243:Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM.c **** *
1247:Generated_Source\PSoC4/PWM.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM.c **** *        define.
1253:Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM.c **** *   Values:
1256:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM.c **** *
1261:Generated_Source\PSoC4/PWM.c **** * Return:
1262:Generated_Source\PSoC4/PWM.c **** *  None
1263:Generated_Source\PSoC4/PWM.c **** *
1264:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM.c **** {
 1749              		.loc 1 1266 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 16
 1752              		@ frame_needed = 1, uses_anonymous_args = 0
 1753 0000 90B5     		push	{r4, r7, lr}
 1754              		.cfi_def_cfa_offset 12
 1755              		.cfi_offset 4, -12
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 54


 1756              		.cfi_offset 7, -8
 1757              		.cfi_offset 14, -4
 1758 0002 85B0     		sub	sp, sp, #20
 1759              		.cfi_def_cfa_offset 32
 1760 0004 00AF     		add	r7, sp, #0
 1761              		.cfi_def_cfa_register 7
 1762 0006 7860     		str	r0, [r7, #4]
 1763 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM.c **** 
1269:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1764              		.loc 1 1269 0
 1765 000a 0F23     		movs	r3, #15
 1766 000c FC18     		adds	r4, r7, r3
 1767 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1768 0012 0300     		movs	r3, r0
 1769 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/PWM.c **** 
1271:Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1770              		.loc 1 1271 0
 1771 0016 084B     		ldr	r3, .L109
 1772 0018 7968     		ldr	r1, [r7, #4]
 1773 001a 3A68     		ldr	r2, [r7]
 1774 001c 9140     		lsls	r1, r1, r2
 1775 001e 0A00     		movs	r2, r1
 1776 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/PWM.c **** 
1273:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1777              		.loc 1 1273 0
 1778 0022 0F23     		movs	r3, #15
 1779 0024 FB18     		adds	r3, r7, r3
 1780 0026 1B78     		ldrb	r3, [r3]
 1781 0028 1800     		movs	r0, r3
 1782 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/PWM.c **** }
 1783              		.loc 1 1274 0
 1784 002e C046     		nop
 1785 0030 BD46     		mov	sp, r7
 1786 0032 05B0     		add	sp, sp, #20
 1787              		@ sp needed
 1788 0034 90BD     		pop	{r4, r7, pc}
 1789              	.L110:
 1790 0036 C046     		.align	2
 1791              	.L109:
 1792 0038 08002040 		.word	1075838984
 1793              		.cfi_endproc
 1794              	.LFE35:
 1795              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1796              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1797              		.align	2
 1798              		.global	PWM_ReadStatus
 1799              		.code	16
 1800              		.thumb_func
 1801              		.type	PWM_ReadStatus, %function
 1802              	PWM_ReadStatus:
 1803              	.LFB36:
1275:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 55


1276:Generated_Source\PSoC4/PWM.c **** 
1277:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1279:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM.c **** *
1281:Generated_Source\PSoC4/PWM.c **** * Summary:
1282:Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1283:Generated_Source\PSoC4/PWM.c **** *
1284:Generated_Source\PSoC4/PWM.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM.c **** *  None
1286:Generated_Source\PSoC4/PWM.c **** *
1287:Generated_Source\PSoC4/PWM.c **** * Return:
1288:Generated_Source\PSoC4/PWM.c **** *  Status
1289:Generated_Source\PSoC4/PWM.c **** *   Values:
1290:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM.c **** *
1293:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM.c **** {
 1804              		.loc 1 1295 0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 1, uses_anonymous_args = 0
 1808 0000 80B5     		push	{r7, lr}
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 7, -8
 1811              		.cfi_offset 14, -4
 1812 0002 00AF     		add	r7, sp, #0
 1813              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1814              		.loc 1 1296 0
 1815 0004 054B     		ldr	r3, .L113
 1816 0006 1B68     		ldr	r3, [r3]
 1817 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1818              		.loc 1 1297 0
 1819 000a 044B     		ldr	r3, .L113
 1820 000c 1B68     		ldr	r3, [r3]
 1821 000e 0121     		movs	r1, #1
 1822 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1823              		.loc 1 1296 0
 1824 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/PWM.c **** }
 1825              		.loc 1 1298 0
 1826 0014 1800     		movs	r0, r3
 1827 0016 BD46     		mov	sp, r7
 1828              		@ sp needed
 1829 0018 80BD     		pop	{r7, pc}
 1830              	.L114:
 1831 001a C046     		.align	2
 1832              	.L113:
 1833 001c 04012040 		.word	1075839236
 1834              		.cfi_endproc
 1835              	.LFE36:
 1836              		.size	PWM_ReadStatus, .-PWM_ReadStatus
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 56


 1837              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1838              		.align	2
 1839              		.global	PWM_SetInterruptMode
 1840              		.code	16
 1841              		.thumb_func
 1842              		.type	PWM_SetInterruptMode, %function
 1843              	PWM_SetInterruptMode:
 1844              	.LFB37:
1299:Generated_Source\PSoC4/PWM.c **** 
1300:Generated_Source\PSoC4/PWM.c **** 
1301:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1303:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM.c **** *
1305:Generated_Source\PSoC4/PWM.c **** * Summary:
1306:Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM.c **** *
1309:Generated_Source\PSoC4/PWM.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM.c **** *   Values:
1312:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM.c **** *
1315:Generated_Source\PSoC4/PWM.c **** * Return:
1316:Generated_Source\PSoC4/PWM.c **** *  None
1317:Generated_Source\PSoC4/PWM.c **** *
1318:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM.c **** {
 1845              		.loc 1 1320 0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 8
 1848              		@ frame_needed = 1, uses_anonymous_args = 0
 1849 0000 80B5     		push	{r7, lr}
 1850              		.cfi_def_cfa_offset 8
 1851              		.cfi_offset 7, -8
 1852              		.cfi_offset 14, -4
 1853 0002 82B0     		sub	sp, sp, #8
 1854              		.cfi_def_cfa_offset 16
 1855 0004 00AF     		add	r7, sp, #0
 1856              		.cfi_def_cfa_register 7
 1857 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1858              		.loc 1 1321 0
 1859 0008 034B     		ldr	r3, .L116
 1860 000a 7A68     		ldr	r2, [r7, #4]
 1861 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/PWM.c **** }
 1862              		.loc 1 1322 0
 1863 000e C046     		nop
 1864 0010 BD46     		mov	sp, r7
 1865 0012 02B0     		add	sp, sp, #8
 1866              		@ sp needed
 1867 0014 80BD     		pop	{r7, pc}
 1868              	.L117:
 1869 0016 C046     		.align	2
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 57


 1870              	.L116:
 1871 0018 38012040 		.word	1075839288
 1872              		.cfi_endproc
 1873              	.LFE37:
 1874              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1875              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1876              		.align	2
 1877              		.global	PWM_GetInterruptSourceMasked
 1878              		.code	16
 1879              		.thumb_func
 1880              		.type	PWM_GetInterruptSourceMasked, %function
 1881              	PWM_GetInterruptSourceMasked:
 1882              	.LFB38:
1323:Generated_Source\PSoC4/PWM.c **** 
1324:Generated_Source\PSoC4/PWM.c **** 
1325:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM.c **** *
1329:Generated_Source\PSoC4/PWM.c **** * Summary:
1330:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM.c **** *
1332:Generated_Source\PSoC4/PWM.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM.c **** *   None
1334:Generated_Source\PSoC4/PWM.c **** *
1335:Generated_Source\PSoC4/PWM.c **** * Return:
1336:Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM.c **** *   Values:
1338:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM.c **** *
1341:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM.c **** {
 1883              		.loc 1 1343 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 1, uses_anonymous_args = 0
 1887 0000 80B5     		push	{r7, lr}
 1888              		.cfi_def_cfa_offset 8
 1889              		.cfi_offset 7, -8
 1890              		.cfi_offset 14, -4
 1891 0002 00AF     		add	r7, sp, #0
 1892              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1893              		.loc 1 1344 0
 1894 0004 024B     		ldr	r3, .L120
 1895 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/PWM.c **** }
 1896              		.loc 1 1345 0
 1897 0008 1800     		movs	r0, r3
 1898 000a BD46     		mov	sp, r7
 1899              		@ sp needed
 1900 000c 80BD     		pop	{r7, pc}
 1901              	.L121:
 1902 000e C046     		.align	2
 1903              	.L120:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 58


 1904 0010 3C012040 		.word	1075839292
 1905              		.cfi_endproc
 1906              	.LFE38:
 1907              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1908              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1909              		.align	2
 1910              		.global	PWM_GetInterruptSource
 1911              		.code	16
 1912              		.thumb_func
 1913              		.type	PWM_GetInterruptSource, %function
 1914              	PWM_GetInterruptSource:
 1915              	.LFB39:
1346:Generated_Source\PSoC4/PWM.c **** 
1347:Generated_Source\PSoC4/PWM.c **** 
1348:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1350:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM.c **** *
1352:Generated_Source\PSoC4/PWM.c **** * Summary:
1353:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM.c **** *
1355:Generated_Source\PSoC4/PWM.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM.c **** *  None
1357:Generated_Source\PSoC4/PWM.c **** *
1358:Generated_Source\PSoC4/PWM.c **** * Return:
1359:Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM.c **** *   Values:
1361:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM.c **** *
1364:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM.c **** {
 1916              		.loc 1 1366 0
 1917              		.cfi_startproc
 1918              		@ args = 0, pretend = 0, frame = 0
 1919              		@ frame_needed = 1, uses_anonymous_args = 0
 1920 0000 80B5     		push	{r7, lr}
 1921              		.cfi_def_cfa_offset 8
 1922              		.cfi_offset 7, -8
 1923              		.cfi_offset 14, -4
 1924 0002 00AF     		add	r7, sp, #0
 1925              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1926              		.loc 1 1367 0
 1927 0004 024B     		ldr	r3, .L124
 1928 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/PWM.c **** }
 1929              		.loc 1 1368 0
 1930 0008 1800     		movs	r0, r3
 1931 000a BD46     		mov	sp, r7
 1932              		@ sp needed
 1933 000c 80BD     		pop	{r7, pc}
 1934              	.L125:
 1935 000e C046     		.align	2
 1936              	.L124:
 1937 0010 30012040 		.word	1075839280
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 59


 1938              		.cfi_endproc
 1939              	.LFE39:
 1940              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1941              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1942              		.align	2
 1943              		.global	PWM_ClearInterrupt
 1944              		.code	16
 1945              		.thumb_func
 1946              		.type	PWM_ClearInterrupt, %function
 1947              	PWM_ClearInterrupt:
 1948              	.LFB40:
1369:Generated_Source\PSoC4/PWM.c **** 
1370:Generated_Source\PSoC4/PWM.c **** 
1371:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1373:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM.c **** *
1375:Generated_Source\PSoC4/PWM.c **** * Summary:
1376:Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM.c **** *
1378:Generated_Source\PSoC4/PWM.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM.c **** *   Values:
1381:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM.c **** *
1384:Generated_Source\PSoC4/PWM.c **** * Return:
1385:Generated_Source\PSoC4/PWM.c **** *  None
1386:Generated_Source\PSoC4/PWM.c **** *
1387:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM.c **** {
 1949              		.loc 1 1389 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 8
 1952              		@ frame_needed = 1, uses_anonymous_args = 0
 1953 0000 80B5     		push	{r7, lr}
 1954              		.cfi_def_cfa_offset 8
 1955              		.cfi_offset 7, -8
 1956              		.cfi_offset 14, -4
 1957 0002 82B0     		sub	sp, sp, #8
 1958              		.cfi_def_cfa_offset 16
 1959 0004 00AF     		add	r7, sp, #0
 1960              		.cfi_def_cfa_register 7
 1961 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1962              		.loc 1 1390 0
 1963 0008 034B     		ldr	r3, .L127
 1964 000a 7A68     		ldr	r2, [r7, #4]
 1965 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/PWM.c **** }
 1966              		.loc 1 1391 0
 1967 000e C046     		nop
 1968 0010 BD46     		mov	sp, r7
 1969 0012 02B0     		add	sp, sp, #8
 1970              		@ sp needed
 1971 0014 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 60


 1972              	.L128:
 1973 0016 C046     		.align	2
 1974              	.L127:
 1975 0018 30012040 		.word	1075839280
 1976              		.cfi_endproc
 1977              	.LFE40:
 1978              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1979              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1980              		.align	2
 1981              		.global	PWM_SetInterrupt
 1982              		.code	16
 1983              		.thumb_func
 1984              		.type	PWM_SetInterrupt, %function
 1985              	PWM_SetInterrupt:
 1986              	.LFB41:
1392:Generated_Source\PSoC4/PWM.c **** 
1393:Generated_Source\PSoC4/PWM.c **** 
1394:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1396:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM.c **** *
1398:Generated_Source\PSoC4/PWM.c **** * Summary:
1399:Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM.c **** *
1401:Generated_Source\PSoC4/PWM.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM.c **** *   Values:
1404:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM.c **** *
1407:Generated_Source\PSoC4/PWM.c **** * Return:
1408:Generated_Source\PSoC4/PWM.c **** *  None
1409:Generated_Source\PSoC4/PWM.c **** *
1410:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM.c **** {
 1987              		.loc 1 1412 0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 8
 1990              		@ frame_needed = 1, uses_anonymous_args = 0
 1991 0000 80B5     		push	{r7, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 7, -8
 1994              		.cfi_offset 14, -4
 1995 0002 82B0     		sub	sp, sp, #8
 1996              		.cfi_def_cfa_offset 16
 1997 0004 00AF     		add	r7, sp, #0
 1998              		.cfi_def_cfa_register 7
 1999 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 2000              		.loc 1 1413 0
 2001 0008 034B     		ldr	r3, .L130
 2002 000a 7A68     		ldr	r2, [r7, #4]
 2003 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/PWM.c **** }
 2004              		.loc 1 1414 0
 2005 000e C046     		nop
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 61


 2006 0010 BD46     		mov	sp, r7
 2007 0012 02B0     		add	sp, sp, #8
 2008              		@ sp needed
 2009 0014 80BD     		pop	{r7, pc}
 2010              	.L131:
 2011 0016 C046     		.align	2
 2012              	.L130:
 2013 0018 34012040 		.word	1075839284
 2014              		.cfi_endproc
 2015              	.LFE41:
 2016              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 2017              		.text
 2018              	.Letext0:
 2019              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2020              		.section	.debug_info,"",%progbits
 2021              	.Ldebug_info0:
 2022 0000 F7060000 		.4byte	0x6f7
 2023 0004 0400     		.2byte	0x4
 2024 0006 00000000 		.4byte	.Ldebug_abbrev0
 2025 000a 04       		.byte	0x4
 2026 000b 01       		.uleb128 0x1
 2027 000c 08020000 		.4byte	.LASF77
 2028 0010 0C       		.byte	0xc
 2029 0011 6D000000 		.4byte	.LASF78
 2030 0015 6B040000 		.4byte	.LASF79
 2031 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2032 001d 00000000 		.4byte	0
 2033 0021 00000000 		.4byte	.Ldebug_line0
 2034 0025 02       		.uleb128 0x2
 2035 0026 01       		.byte	0x1
 2036 0027 06       		.byte	0x6
 2037 0028 A8000000 		.4byte	.LASF0
 2038 002c 02       		.uleb128 0x2
 2039 002d 01       		.byte	0x1
 2040 002e 08       		.byte	0x8
 2041 002f 5B030000 		.4byte	.LASF1
 2042 0033 02       		.uleb128 0x2
 2043 0034 02       		.byte	0x2
 2044 0035 05       		.byte	0x5
 2045 0036 92030000 		.4byte	.LASF2
 2046 003a 02       		.uleb128 0x2
 2047 003b 02       		.byte	0x2
 2048 003c 07       		.byte	0x7
 2049 003d DA010000 		.4byte	.LASF3
 2050 0041 02       		.uleb128 0x2
 2051 0042 04       		.byte	0x4
 2052 0043 05       		.byte	0x5
 2053 0044 F0000000 		.4byte	.LASF4
 2054 0048 02       		.uleb128 0x2
 2055 0049 04       		.byte	0x4
 2056 004a 07       		.byte	0x7
 2057 004b BF010000 		.4byte	.LASF5
 2058 004f 02       		.uleb128 0x2
 2059 0050 08       		.byte	0x8
 2060 0051 05       		.byte	0x5
 2061 0052 9A000000 		.4byte	.LASF6
 2062 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 62


 2063 0057 08       		.byte	0x8
 2064 0058 07       		.byte	0x7
 2065 0059 2B000000 		.4byte	.LASF7
 2066 005d 03       		.uleb128 0x3
 2067 005e 04       		.byte	0x4
 2068 005f 05       		.byte	0x5
 2069 0060 696E7400 		.ascii	"int\000"
 2070 0064 02       		.uleb128 0x2
 2071 0065 04       		.byte	0x4
 2072 0066 07       		.byte	0x7
 2073 0067 97010000 		.4byte	.LASF8
 2074 006b 04       		.uleb128 0x4
 2075 006c F9000000 		.4byte	.LASF9
 2076 0070 02       		.byte	0x2
 2077 0071 E401     		.2byte	0x1e4
 2078 0073 2C000000 		.4byte	0x2c
 2079 0077 04       		.uleb128 0x4
 2080 0078 46010000 		.4byte	.LASF10
 2081 007c 02       		.byte	0x2
 2082 007d E601     		.2byte	0x1e6
 2083 007f 48000000 		.4byte	0x48
 2084 0083 02       		.uleb128 0x2
 2085 0084 04       		.byte	0x4
 2086 0085 04       		.byte	0x4
 2087 0086 29030000 		.4byte	.LASF11
 2088 008a 02       		.uleb128 0x2
 2089 008b 08       		.byte	0x8
 2090 008c 04       		.byte	0x4
 2091 008d FF000000 		.4byte	.LASF12
 2092 0091 02       		.uleb128 0x2
 2093 0092 01       		.byte	0x1
 2094 0093 08       		.byte	0x8
 2095 0094 E8030000 		.4byte	.LASF13
 2096 0098 04       		.uleb128 0x4
 2097 0099 CA020000 		.4byte	.LASF14
 2098 009d 02       		.byte	0x2
 2099 009e 9002     		.2byte	0x290
 2100 00a0 A4000000 		.4byte	0xa4
 2101 00a4 05       		.uleb128 0x5
 2102 00a5 77000000 		.4byte	0x77
 2103 00a9 02       		.uleb128 0x2
 2104 00aa 08       		.byte	0x8
 2105 00ab 04       		.byte	0x4
 2106 00ac F4020000 		.4byte	.LASF15
 2107 00b0 02       		.uleb128 0x2
 2108 00b1 04       		.byte	0x4
 2109 00b2 07       		.byte	0x7
 2110 00b3 EB020000 		.4byte	.LASF16
 2111 00b7 06       		.uleb128 0x6
 2112 00b8 69030000 		.4byte	.LASF17
 2113 00bc 01       		.byte	0x1
 2114 00bd 26       		.byte	0x26
 2115 00be 00000000 		.4byte	.LFB2
 2116 00c2 64000000 		.4byte	.LFE2-.LFB2
 2117 00c6 01       		.uleb128 0x1
 2118 00c7 9C       		.byte	0x9c
 2119 00c8 07       		.uleb128 0x7
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 63


 2120 00c9 06000000 		.4byte	.LASF19
 2121 00cd 01       		.byte	0x1
 2122 00ce B1       		.byte	0xb1
 2123 00cf 00000000 		.4byte	.LFB3
 2124 00d3 3C000000 		.4byte	.LFE3-.LFB3
 2125 00d7 01       		.uleb128 0x1
 2126 00d8 9C       		.byte	0x9c
 2127 00d9 EC000000 		.4byte	0xec
 2128 00dd 08       		.uleb128 0x8
 2129 00de 49040000 		.4byte	.LASF21
 2130 00e2 01       		.byte	0x1
 2131 00e3 B3       		.byte	0xb3
 2132 00e4 6B000000 		.4byte	0x6b
 2133 00e8 02       		.uleb128 0x2
 2134 00e9 91       		.byte	0x91
 2135 00ea 6F       		.sleb128 -17
 2136 00eb 00       		.byte	0
 2137 00ec 06       		.uleb128 0x6
 2138 00ed FE010000 		.4byte	.LASF18
 2139 00f1 01       		.byte	0x1
 2140 00f2 E6       		.byte	0xe6
 2141 00f3 00000000 		.4byte	.LFB4
 2142 00f7 24000000 		.4byte	.LFE4-.LFB4
 2143 00fb 01       		.uleb128 0x1
 2144 00fc 9C       		.byte	0x9c
 2145 00fd 09       		.uleb128 0x9
 2146 00fe 2C010000 		.4byte	.LASF20
 2147 0102 01       		.byte	0x1
 2148 0103 0001     		.2byte	0x100
 2149 0105 00000000 		.4byte	.LFB5
 2150 0109 34000000 		.4byte	.LFE5-.LFB5
 2151 010d 01       		.uleb128 0x1
 2152 010e 9C       		.byte	0x9c
 2153 010f 23010000 		.4byte	0x123
 2154 0113 0A       		.uleb128 0xa
 2155 0114 49040000 		.4byte	.LASF21
 2156 0118 01       		.byte	0x1
 2157 0119 0201     		.2byte	0x102
 2158 011b 6B000000 		.4byte	0x6b
 2159 011f 02       		.uleb128 0x2
 2160 0120 91       		.byte	0x91
 2161 0121 6F       		.sleb128 -17
 2162 0122 00       		.byte	0
 2163 0123 09       		.uleb128 0x9
 2164 0124 C0040000 		.4byte	.LASF22
 2165 0128 01       		.byte	0x1
 2166 0129 2501     		.2byte	0x125
 2167 012b 00000000 		.4byte	.LFB6
 2168 012f 48000000 		.4byte	.LFE6-.LFB6
 2169 0133 01       		.uleb128 0x1
 2170 0134 9C       		.byte	0x9c
 2171 0135 58010000 		.4byte	0x158
 2172 0139 0B       		.uleb128 0xb
 2173 013a ED030000 		.4byte	.LASF24
 2174 013e 01       		.byte	0x1
 2175 013f 2501     		.2byte	0x125
 2176 0141 77000000 		.4byte	0x77
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 64


 2177 0145 02       		.uleb128 0x2
 2178 0146 91       		.byte	0x91
 2179 0147 64       		.sleb128 -28
 2180 0148 0A       		.uleb128 0xa
 2181 0149 49040000 		.4byte	.LASF21
 2182 014d 01       		.byte	0x1
 2183 014e 2701     		.2byte	0x127
 2184 0150 6B000000 		.4byte	0x6b
 2185 0154 02       		.uleb128 0x2
 2186 0155 91       		.byte	0x91
 2187 0156 6F       		.sleb128 -17
 2188 0157 00       		.byte	0
 2189 0158 09       		.uleb128 0x9
 2190 0159 DA030000 		.4byte	.LASF23
 2191 015d 01       		.byte	0x1
 2192 015e 4601     		.2byte	0x146
 2193 0160 00000000 		.4byte	.LFB7
 2194 0164 48000000 		.4byte	.LFE7-.LFB7
 2195 0168 01       		.uleb128 0x1
 2196 0169 9C       		.byte	0x9c
 2197 016a 8D010000 		.4byte	0x18d
 2198 016e 0B       		.uleb128 0xb
 2199 016f 55000000 		.4byte	.LASF25
 2200 0173 01       		.byte	0x1
 2201 0174 4601     		.2byte	0x146
 2202 0176 77000000 		.4byte	0x77
 2203 017a 02       		.uleb128 0x2
 2204 017b 91       		.byte	0x91
 2205 017c 64       		.sleb128 -28
 2206 017d 0A       		.uleb128 0xa
 2207 017e 49040000 		.4byte	.LASF21
 2208 0182 01       		.byte	0x1
 2209 0183 4801     		.2byte	0x148
 2210 0185 6B000000 		.4byte	0x6b
 2211 0189 02       		.uleb128 0x2
 2212 018a 91       		.byte	0x91
 2213 018b 6F       		.sleb128 -17
 2214 018c 00       		.byte	0
 2215 018d 09       		.uleb128 0x9
 2216 018e ED010000 		.4byte	.LASF26
 2217 0192 01       		.byte	0x1
 2218 0193 6B01     		.2byte	0x16b
 2219 0195 00000000 		.4byte	.LFB8
 2220 0199 48000000 		.4byte	.LFE8-.LFB8
 2221 019d 01       		.uleb128 0x1
 2222 019e 9C       		.byte	0x9c
 2223 019f C2010000 		.4byte	0x1c2
 2224 01a3 0B       		.uleb128 0xb
 2225 01a4 2F030000 		.4byte	.LASF27
 2226 01a8 01       		.byte	0x1
 2227 01a9 6B01     		.2byte	0x16b
 2228 01ab 77000000 		.4byte	0x77
 2229 01af 02       		.uleb128 0x2
 2230 01b0 91       		.byte	0x91
 2231 01b1 64       		.sleb128 -28
 2232 01b2 0A       		.uleb128 0xa
 2233 01b3 49040000 		.4byte	.LASF21
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 65


 2234 01b7 01       		.byte	0x1
 2235 01b8 6D01     		.2byte	0x16d
 2236 01ba 6B000000 		.4byte	0x6b
 2237 01be 02       		.uleb128 0x2
 2238 01bf 91       		.byte	0x91
 2239 01c0 6F       		.sleb128 -17
 2240 01c1 00       		.byte	0
 2241 01c2 09       		.uleb128 0x9
 2242 01c3 08030000 		.4byte	.LASF28
 2243 01c7 01       		.byte	0x1
 2244 01c8 8B01     		.2byte	0x18b
 2245 01ca 00000000 		.4byte	.LFB9
 2246 01ce 50000000 		.4byte	.LFE9-.LFB9
 2247 01d2 01       		.uleb128 0x1
 2248 01d3 9C       		.byte	0x9c
 2249 01d4 F7010000 		.4byte	0x1f7
 2250 01d8 0B       		.uleb128 0xb
 2251 01d9 B2040000 		.4byte	.LASF29
 2252 01dd 01       		.byte	0x1
 2253 01de 8B01     		.2byte	0x18b
 2254 01e0 77000000 		.4byte	0x77
 2255 01e4 02       		.uleb128 0x2
 2256 01e5 91       		.byte	0x91
 2257 01e6 64       		.sleb128 -28
 2258 01e7 0A       		.uleb128 0xa
 2259 01e8 49040000 		.4byte	.LASF21
 2260 01ec 01       		.byte	0x1
 2261 01ed 8D01     		.2byte	0x18d
 2262 01ef 6B000000 		.4byte	0x6b
 2263 01f3 02       		.uleb128 0x2
 2264 01f4 91       		.byte	0x91
 2265 01f5 6F       		.sleb128 -17
 2266 01f6 00       		.byte	0
 2267 01f7 0C       		.uleb128 0xc
 2268 01f8 83030000 		.4byte	.LASF30
 2269 01fc 01       		.byte	0x1
 2270 01fd C101     		.2byte	0x1c1
 2271 01ff 00000000 		.4byte	.LFB10
 2272 0203 20000000 		.4byte	.LFE10-.LFB10
 2273 0207 01       		.uleb128 0x1
 2274 0208 9C       		.byte	0x9c
 2275 0209 1D020000 		.4byte	0x21d
 2276 020d 0B       		.uleb128 0xb
 2277 020e D1010000 		.4byte	.LASF31
 2278 0212 01       		.byte	0x1
 2279 0213 C101     		.2byte	0x1c1
 2280 0215 77000000 		.4byte	0x77
 2281 0219 02       		.uleb128 0x2
 2282 021a 91       		.byte	0x91
 2283 021b 74       		.sleb128 -12
 2284 021c 00       		.byte	0
 2285 021d 09       		.uleb128 0x9
 2286 021e 11000000 		.4byte	.LASF32
 2287 0222 01       		.byte	0x1
 2288 0223 E501     		.2byte	0x1e5
 2289 0225 00000000 		.4byte	.LFB11
 2290 0229 4C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 66


 2291 022d 01       		.uleb128 0x1
 2292 022e 9C       		.byte	0x9c
 2293 022f 52020000 		.4byte	0x252
 2294 0233 0B       		.uleb128 0xb
 2295 0234 E1040000 		.4byte	.LASF33
 2296 0238 01       		.byte	0x1
 2297 0239 E501     		.2byte	0x1e5
 2298 023b 77000000 		.4byte	0x77
 2299 023f 02       		.uleb128 0x2
 2300 0240 91       		.byte	0x91
 2301 0241 64       		.sleb128 -28
 2302 0242 0A       		.uleb128 0xa
 2303 0243 49040000 		.4byte	.LASF21
 2304 0247 01       		.byte	0x1
 2305 0248 E701     		.2byte	0x1e7
 2306 024a 6B000000 		.4byte	0x6b
 2307 024e 02       		.uleb128 0x2
 2308 024f 91       		.byte	0x91
 2309 0250 6F       		.sleb128 -17
 2310 0251 00       		.byte	0
 2311 0252 09       		.uleb128 0x9
 2312 0253 CC040000 		.4byte	.LASF34
 2313 0257 01       		.byte	0x1
 2314 0258 0702     		.2byte	0x207
 2315 025a 00000000 		.4byte	.LFB12
 2316 025e 4C000000 		.4byte	.LFE12-.LFB12
 2317 0262 01       		.uleb128 0x1
 2318 0263 9C       		.byte	0x9c
 2319 0264 87020000 		.4byte	0x287
 2320 0268 0B       		.uleb128 0xb
 2321 0269 72030000 		.4byte	.LASF35
 2322 026d 01       		.byte	0x1
 2323 026e 0702     		.2byte	0x207
 2324 0270 77000000 		.4byte	0x77
 2325 0274 02       		.uleb128 0x2
 2326 0275 91       		.byte	0x91
 2327 0276 64       		.sleb128 -28
 2328 0277 0A       		.uleb128 0xa
 2329 0278 49040000 		.4byte	.LASF21
 2330 027c 01       		.byte	0x1
 2331 027d 0902     		.2byte	0x209
 2332 027f 6B000000 		.4byte	0x6b
 2333 0283 02       		.uleb128 0x2
 2334 0284 91       		.byte	0x91
 2335 0285 6F       		.sleb128 -17
 2336 0286 00       		.byte	0
 2337 0287 09       		.uleb128 0x9
 2338 0288 A4010000 		.4byte	.LASF36
 2339 028c 01       		.byte	0x1
 2340 028d 2802     		.2byte	0x228
 2341 028f 00000000 		.4byte	.LFB13
 2342 0293 50000000 		.4byte	.LFE13-.LFB13
 2343 0297 01       		.uleb128 0x1
 2344 0298 9C       		.byte	0x9c
 2345 0299 BC020000 		.4byte	0x2bc
 2346 029d 0B       		.uleb128 0xb
 2347 029e 7E010000 		.4byte	.LASF37
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 67


 2348 02a2 01       		.byte	0x1
 2349 02a3 2802     		.2byte	0x228
 2350 02a5 77000000 		.4byte	0x77
 2351 02a9 02       		.uleb128 0x2
 2352 02aa 91       		.byte	0x91
 2353 02ab 64       		.sleb128 -28
 2354 02ac 0A       		.uleb128 0xa
 2355 02ad 49040000 		.4byte	.LASF21
 2356 02b1 01       		.byte	0x1
 2357 02b2 2A02     		.2byte	0x22a
 2358 02b4 6B000000 		.4byte	0x6b
 2359 02b8 02       		.uleb128 0x2
 2360 02b9 91       		.byte	0x91
 2361 02ba 6F       		.sleb128 -17
 2362 02bb 00       		.byte	0
 2363 02bc 09       		.uleb128 0x9
 2364 02bd 35010000 		.4byte	.LASF38
 2365 02c1 01       		.byte	0x1
 2366 02c2 4902     		.2byte	0x249
 2367 02c4 00000000 		.4byte	.LFB14
 2368 02c8 48000000 		.4byte	.LFE14-.LFB14
 2369 02cc 01       		.uleb128 0x1
 2370 02cd 9C       		.byte	0x9c
 2371 02ce F1020000 		.4byte	0x2f1
 2372 02d2 0B       		.uleb128 0xb
 2373 02d3 6A010000 		.4byte	.LASF39
 2374 02d7 01       		.byte	0x1
 2375 02d8 4902     		.2byte	0x249
 2376 02da 77000000 		.4byte	0x77
 2377 02de 02       		.uleb128 0x2
 2378 02df 91       		.byte	0x91
 2379 02e0 64       		.sleb128 -28
 2380 02e1 0A       		.uleb128 0xa
 2381 02e2 49040000 		.4byte	.LASF21
 2382 02e6 01       		.byte	0x1
 2383 02e7 4B02     		.2byte	0x24b
 2384 02e9 6B000000 		.4byte	0x6b
 2385 02ed 02       		.uleb128 0x2
 2386 02ee 91       		.byte	0x91
 2387 02ef 6F       		.sleb128 -17
 2388 02f0 00       		.byte	0
 2389 02f1 0C       		.uleb128 0xc
 2390 02f2 5C000000 		.4byte	.LASF40
 2391 02f6 01       		.byte	0x1
 2392 02f7 6702     		.2byte	0x267
 2393 02f9 00000000 		.4byte	.LFB15
 2394 02fd 20000000 		.4byte	.LFE15-.LFB15
 2395 0301 01       		.uleb128 0x1
 2396 0302 9C       		.byte	0x9c
 2397 0303 17030000 		.4byte	0x317
 2398 0307 0B       		.uleb128 0xb
 2399 0308 00000000 		.4byte	.LASF41
 2400 030c 01       		.byte	0x1
 2401 030d 6702     		.2byte	0x267
 2402 030f 77000000 		.4byte	0x77
 2403 0313 02       		.uleb128 0x2
 2404 0314 91       		.byte	0x91
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 68


 2405 0315 74       		.sleb128 -12
 2406 0316 00       		.byte	0
 2407 0317 0D       		.uleb128 0xd
 2408 0318 8A000000 		.4byte	.LASF46
 2409 031c 01       		.byte	0x1
 2410 031d 7B02     		.2byte	0x27b
 2411 031f 77000000 		.4byte	0x77
 2412 0323 00000000 		.4byte	.LFB16
 2413 0327 18000000 		.4byte	.LFE16-.LFB16
 2414 032b 01       		.uleb128 0x1
 2415 032c 9C       		.byte	0x9c
 2416 032d 09       		.uleb128 0x9
 2417 032e 12050000 		.4byte	.LASF42
 2418 0332 01       		.byte	0x1
 2419 0333 9802     		.2byte	0x298
 2420 0335 00000000 		.4byte	.LFB17
 2421 0339 48000000 		.4byte	.LFE17-.LFB17
 2422 033d 01       		.uleb128 0x1
 2423 033e 9C       		.byte	0x9c
 2424 033f 62030000 		.4byte	0x362
 2425 0343 0B       		.uleb128 0xb
 2426 0344 15040000 		.4byte	.LASF43
 2427 0348 01       		.byte	0x1
 2428 0349 9802     		.2byte	0x298
 2429 034b 77000000 		.4byte	0x77
 2430 034f 02       		.uleb128 0x2
 2431 0350 91       		.byte	0x91
 2432 0351 64       		.sleb128 -28
 2433 0352 0A       		.uleb128 0xa
 2434 0353 49040000 		.4byte	.LASF21
 2435 0357 01       		.byte	0x1
 2436 0358 9A02     		.2byte	0x29a
 2437 035a 6B000000 		.4byte	0x6b
 2438 035e 02       		.uleb128 0x2
 2439 035f 91       		.byte	0x91
 2440 0360 6F       		.sleb128 -17
 2441 0361 00       		.byte	0
 2442 0362 0C       		.uleb128 0xc
 2443 0363 BA020000 		.4byte	.LASF44
 2444 0367 01       		.byte	0x1
 2445 0368 B502     		.2byte	0x2b5
 2446 036a 00000000 		.4byte	.LFB18
 2447 036e 20000000 		.4byte	.LFE18-.LFB18
 2448 0372 01       		.uleb128 0x1
 2449 0373 9C       		.byte	0x9c
 2450 0374 88030000 		.4byte	0x388
 2451 0378 0B       		.uleb128 0xb
 2452 0379 24000000 		.4byte	.LASF45
 2453 037d 01       		.byte	0x1
 2454 037e B502     		.2byte	0x2b5
 2455 0380 77000000 		.4byte	0x77
 2456 0384 02       		.uleb128 0x2
 2457 0385 91       		.byte	0x91
 2458 0386 74       		.sleb128 -12
 2459 0387 00       		.byte	0
 2460 0388 0D       		.uleb128 0xd
 2461 0389 DC020000 		.4byte	.LASF47
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 69


 2462 038d 01       		.byte	0x1
 2463 038e C902     		.2byte	0x2c9
 2464 0390 77000000 		.4byte	0x77
 2465 0394 00000000 		.4byte	.LFB19
 2466 0398 18000000 		.4byte	.LFE19-.LFB19
 2467 039c 01       		.uleb128 0x1
 2468 039d 9C       		.byte	0x9c
 2469 039e 09       		.uleb128 0x9
 2470 039f 19010000 		.4byte	.LASF48
 2471 03a3 01       		.byte	0x1
 2472 03a4 E302     		.2byte	0x2e3
 2473 03a6 00000000 		.4byte	.LFB20
 2474 03aa 48000000 		.4byte	.LFE20-.LFB20
 2475 03ae 01       		.uleb128 0x1
 2476 03af 9C       		.byte	0x9c
 2477 03b0 D3030000 		.4byte	0x3d3
 2478 03b4 0B       		.uleb128 0xb
 2479 03b5 F0040000 		.4byte	.LASF49
 2480 03b9 01       		.byte	0x1
 2481 03ba E302     		.2byte	0x2e3
 2482 03bc 77000000 		.4byte	0x77
 2483 03c0 02       		.uleb128 0x2
 2484 03c1 91       		.byte	0x91
 2485 03c2 64       		.sleb128 -28
 2486 03c3 0A       		.uleb128 0xa
 2487 03c4 49040000 		.4byte	.LASF21
 2488 03c8 01       		.byte	0x1
 2489 03c9 E502     		.2byte	0x2e5
 2490 03cb 6B000000 		.4byte	0x6b
 2491 03cf 02       		.uleb128 0x2
 2492 03d0 91       		.byte	0x91
 2493 03d1 6F       		.sleb128 -17
 2494 03d2 00       		.byte	0
 2495 03d3 0C       		.uleb128 0xc
 2496 03d4 C7030000 		.4byte	.LASF50
 2497 03d8 01       		.byte	0x1
 2498 03d9 FE02     		.2byte	0x2fe
 2499 03db 00000000 		.4byte	.LFB21
 2500 03df 20000000 		.4byte	.LFE21-.LFB21
 2501 03e3 01       		.uleb128 0x1
 2502 03e4 9C       		.byte	0x9c
 2503 03e5 F9030000 		.4byte	0x3f9
 2504 03e9 0B       		.uleb128 0xb
 2505 03ea 2C040000 		.4byte	.LASF51
 2506 03ee 01       		.byte	0x1
 2507 03ef FE02     		.2byte	0x2fe
 2508 03f1 77000000 		.4byte	0x77
 2509 03f5 02       		.uleb128 0x2
 2510 03f6 91       		.byte	0x91
 2511 03f7 74       		.sleb128 -12
 2512 03f8 00       		.byte	0
 2513 03f9 0D       		.uleb128 0xd
 2514 03fa 17030000 		.4byte	.LASF52
 2515 03fe 01       		.byte	0x1
 2516 03ff 1203     		.2byte	0x312
 2517 0401 77000000 		.4byte	0x77
 2518 0405 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 70


 2519 0409 18000000 		.4byte	.LFE22-.LFB22
 2520 040d 01       		.uleb128 0x1
 2521 040e 9C       		.byte	0x9c
 2522 040f 09       		.uleb128 0x9
 2523 0410 49030000 		.4byte	.LASF53
 2524 0414 01       		.byte	0x1
 2525 0415 2C03     		.2byte	0x32c
 2526 0417 00000000 		.4byte	.LFB23
 2527 041b 4C000000 		.4byte	.LFE23-.LFB23
 2528 041f 01       		.uleb128 0x1
 2529 0420 9C       		.byte	0x9c
 2530 0421 44040000 		.4byte	0x444
 2531 0425 0B       		.uleb128 0xb
 2532 0426 F0040000 		.4byte	.LASF49
 2533 042a 01       		.byte	0x1
 2534 042b 2C03     		.2byte	0x32c
 2535 042d 77000000 		.4byte	0x77
 2536 0431 02       		.uleb128 0x2
 2537 0432 91       		.byte	0x91
 2538 0433 64       		.sleb128 -28
 2539 0434 0A       		.uleb128 0xa
 2540 0435 49040000 		.4byte	.LASF21
 2541 0439 01       		.byte	0x1
 2542 043a 2E03     		.2byte	0x32e
 2543 043c 6B000000 		.4byte	0x6b
 2544 0440 02       		.uleb128 0x2
 2545 0441 91       		.byte	0x91
 2546 0442 6F       		.sleb128 -17
 2547 0443 00       		.byte	0
 2548 0444 0C       		.uleb128 0xc
 2549 0445 A9020000 		.4byte	.LASF54
 2550 0449 01       		.byte	0x1
 2551 044a 5103     		.2byte	0x351
 2552 044c 00000000 		.4byte	.LFB24
 2553 0450 20000000 		.4byte	.LFE24-.LFB24
 2554 0454 01       		.uleb128 0x1
 2555 0455 9C       		.byte	0x9c
 2556 0456 6A040000 		.4byte	0x46a
 2557 045a 0B       		.uleb128 0xb
 2558 045b 00030000 		.4byte	.LASF55
 2559 045f 01       		.byte	0x1
 2560 0460 5103     		.2byte	0x351
 2561 0462 77000000 		.4byte	0x77
 2562 0466 02       		.uleb128 0x2
 2563 0467 91       		.byte	0x91
 2564 0468 74       		.sleb128 -12
 2565 0469 00       		.byte	0
 2566 046a 0D       		.uleb128 0xd
 2567 046b 25050000 		.4byte	.LASF56
 2568 046f 01       		.byte	0x1
 2569 0470 8403     		.2byte	0x384
 2570 0472 77000000 		.4byte	0x77
 2571 0476 00000000 		.4byte	.LFB25
 2572 047a 18000000 		.4byte	.LFE25-.LFB25
 2573 047e 01       		.uleb128 0x1
 2574 047f 9C       		.byte	0x9c
 2575 0480 0C       		.uleb128 0xc
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 71


 2576 0481 B4000000 		.4byte	.LASF57
 2577 0485 01       		.byte	0x1
 2578 0486 BA03     		.2byte	0x3ba
 2579 0488 00000000 		.4byte	.LFB26
 2580 048c 20000000 		.4byte	.LFE26-.LFB26
 2581 0490 01       		.uleb128 0x1
 2582 0491 9C       		.byte	0x9c
 2583 0492 A6040000 		.4byte	0x4a6
 2584 0496 0B       		.uleb128 0xb
 2585 0497 21040000 		.4byte	.LASF58
 2586 049b 01       		.byte	0x1
 2587 049c BA03     		.2byte	0x3ba
 2588 049e 77000000 		.4byte	0x77
 2589 04a2 02       		.uleb128 0x2
 2590 04a3 91       		.byte	0x91
 2591 04a4 74       		.sleb128 -12
 2592 04a5 00       		.byte	0
 2593 04a6 0D       		.uleb128 0xd
 2594 04a7 06010000 		.4byte	.LASF59
 2595 04ab 01       		.byte	0x1
 2596 04ac E803     		.2byte	0x3e8
 2597 04ae 77000000 		.4byte	0x77
 2598 04b2 00000000 		.4byte	.LFB27
 2599 04b6 18000000 		.4byte	.LFE27-.LFB27
 2600 04ba 01       		.uleb128 0x1
 2601 04bb 9C       		.byte	0x9c
 2602 04bc 0D       		.uleb128 0xd
 2603 04bd 39030000 		.4byte	.LASF60
 2604 04c1 01       		.byte	0x1
 2605 04c2 1604     		.2byte	0x416
 2606 04c4 77000000 		.4byte	0x77
 2607 04c8 00000000 		.4byte	.LFB28
 2608 04cc 18000000 		.4byte	.LFE28-.LFB28
 2609 04d0 01       		.uleb128 0x1
 2610 04d1 9C       		.byte	0x9c
 2611 04d2 0D       		.uleb128 0xd
 2612 04d3 36040000 		.4byte	.LASF61
 2613 04d7 01       		.byte	0x1
 2614 04d8 2B04     		.2byte	0x42b
 2615 04da 77000000 		.4byte	0x77
 2616 04de 00000000 		.4byte	.LFB29
 2617 04e2 18000000 		.4byte	.LFE29-.LFB29
 2618 04e6 01       		.uleb128 0x1
 2619 04e7 9C       		.byte	0x9c
 2620 04e8 09       		.uleb128 0x9
 2621 04e9 42000000 		.4byte	.LASF62
 2622 04ed 01       		.byte	0x1
 2623 04ee 4604     		.2byte	0x446
 2624 04f0 00000000 		.4byte	.LFB30
 2625 04f4 44000000 		.4byte	.LFE30-.LFB30
 2626 04f8 01       		.uleb128 0x1
 2627 04f9 9C       		.byte	0x9c
 2628 04fa 1D050000 		.4byte	0x51d
 2629 04fe 0B       		.uleb128 0xb
 2630 04ff 5E010000 		.4byte	.LASF63
 2631 0503 01       		.byte	0x1
 2632 0504 4604     		.2byte	0x446
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 72


 2633 0506 77000000 		.4byte	0x77
 2634 050a 02       		.uleb128 0x2
 2635 050b 91       		.byte	0x91
 2636 050c 64       		.sleb128 -28
 2637 050d 0A       		.uleb128 0xa
 2638 050e 49040000 		.4byte	.LASF21
 2639 0512 01       		.byte	0x1
 2640 0513 4804     		.2byte	0x448
 2641 0515 6B000000 		.4byte	0x6b
 2642 0519 02       		.uleb128 0x2
 2643 051a 91       		.byte	0x91
 2644 051b 6F       		.sleb128 -17
 2645 051c 00       		.byte	0
 2646 051d 09       		.uleb128 0x9
 2647 051e 03040000 		.4byte	.LASF64
 2648 0522 01       		.byte	0x1
 2649 0523 6704     		.2byte	0x467
 2650 0525 00000000 		.4byte	.LFB31
 2651 0529 48000000 		.4byte	.LFE31-.LFB31
 2652 052d 01       		.uleb128 0x1
 2653 052e 9C       		.byte	0x9c
 2654 052f 52050000 		.4byte	0x552
 2655 0533 0B       		.uleb128 0xb
 2656 0534 5E010000 		.4byte	.LASF63
 2657 0538 01       		.byte	0x1
 2658 0539 6704     		.2byte	0x467
 2659 053b 77000000 		.4byte	0x77
 2660 053f 02       		.uleb128 0x2
 2661 0540 91       		.byte	0x91
 2662 0541 64       		.sleb128 -28
 2663 0542 0A       		.uleb128 0xa
 2664 0543 49040000 		.4byte	.LASF21
 2665 0547 01       		.byte	0x1
 2666 0548 6904     		.2byte	0x469
 2667 054a 6B000000 		.4byte	0x6b
 2668 054e 02       		.uleb128 0x2
 2669 054f 91       		.byte	0x91
 2670 0550 6F       		.sleb128 -17
 2671 0551 00       		.byte	0
 2672 0552 09       		.uleb128 0x9
 2673 0553 4D010000 		.4byte	.LASF65
 2674 0557 01       		.byte	0x1
 2675 0558 8804     		.2byte	0x488
 2676 055a 00000000 		.4byte	.LFB32
 2677 055e 4C000000 		.4byte	.LFE32-.LFB32
 2678 0562 01       		.uleb128 0x1
 2679 0563 9C       		.byte	0x9c
 2680 0564 87050000 		.4byte	0x587
 2681 0568 0B       		.uleb128 0xb
 2682 0569 5E010000 		.4byte	.LASF63
 2683 056d 01       		.byte	0x1
 2684 056e 8804     		.2byte	0x488
 2685 0570 77000000 		.4byte	0x77
 2686 0574 02       		.uleb128 0x2
 2687 0575 91       		.byte	0x91
 2688 0576 64       		.sleb128 -28
 2689 0577 0A       		.uleb128 0xa
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 73


 2690 0578 49040000 		.4byte	.LASF21
 2691 057c 01       		.byte	0x1
 2692 057d 8A04     		.2byte	0x48a
 2693 057f 6B000000 		.4byte	0x6b
 2694 0583 02       		.uleb128 0x2
 2695 0584 91       		.byte	0x91
 2696 0585 6F       		.sleb128 -17
 2697 0586 00       		.byte	0
 2698 0587 09       		.uleb128 0x9
 2699 0588 87010000 		.4byte	.LASF66
 2700 058c 01       		.byte	0x1
 2701 058d A804     		.2byte	0x4a8
 2702 058f 00000000 		.4byte	.LFB33
 2703 0593 48000000 		.4byte	.LFE33-.LFB33
 2704 0597 01       		.uleb128 0x1
 2705 0598 9C       		.byte	0x9c
 2706 0599 BC050000 		.4byte	0x5bc
 2707 059d 0B       		.uleb128 0xb
 2708 059e 5E010000 		.4byte	.LASF63
 2709 05a2 01       		.byte	0x1
 2710 05a3 A804     		.2byte	0x4a8
 2711 05a5 77000000 		.4byte	0x77
 2712 05a9 02       		.uleb128 0x2
 2713 05aa 91       		.byte	0x91
 2714 05ab 64       		.sleb128 -28
 2715 05ac 0A       		.uleb128 0xa
 2716 05ad 49040000 		.4byte	.LASF21
 2717 05b1 01       		.byte	0x1
 2718 05b2 AA04     		.2byte	0x4aa
 2719 05b4 6B000000 		.4byte	0x6b
 2720 05b8 02       		.uleb128 0x2
 2721 05b9 91       		.byte	0x91
 2722 05ba 6F       		.sleb128 -17
 2723 05bb 00       		.byte	0
 2724 05bc 09       		.uleb128 0x9
 2725 05bd 5A040000 		.4byte	.LASF67
 2726 05c1 01       		.byte	0x1
 2727 05c2 C904     		.2byte	0x4c9
 2728 05c4 00000000 		.4byte	.LFB34
 2729 05c8 48000000 		.4byte	.LFE34-.LFB34
 2730 05cc 01       		.uleb128 0x1
 2731 05cd 9C       		.byte	0x9c
 2732 05ce F1050000 		.4byte	0x5f1
 2733 05d2 0B       		.uleb128 0xb
 2734 05d3 5E010000 		.4byte	.LASF63
 2735 05d7 01       		.byte	0x1
 2736 05d8 C904     		.2byte	0x4c9
 2737 05da 77000000 		.4byte	0x77
 2738 05de 02       		.uleb128 0x2
 2739 05df 91       		.byte	0x91
 2740 05e0 64       		.sleb128 -28
 2741 05e1 0A       		.uleb128 0xa
 2742 05e2 49040000 		.4byte	.LASF21
 2743 05e6 01       		.byte	0x1
 2744 05e7 CB04     		.2byte	0x4cb
 2745 05e9 6B000000 		.4byte	0x6b
 2746 05ed 02       		.uleb128 0x2
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 74


 2747 05ee 91       		.byte	0x91
 2748 05ef 6F       		.sleb128 -17
 2749 05f0 00       		.byte	0
 2750 05f1 09       		.uleb128 0x9
 2751 05f2 96020000 		.4byte	.LASF68
 2752 05f6 01       		.byte	0x1
 2753 05f7 F104     		.2byte	0x4f1
 2754 05f9 00000000 		.4byte	.LFB35
 2755 05fd 3C000000 		.4byte	.LFE35-.LFB35
 2756 0601 01       		.uleb128 0x1
 2757 0602 9C       		.byte	0x9c
 2758 0603 35060000 		.4byte	0x635
 2759 0607 0B       		.uleb128 0xb
 2760 0608 6A010000 		.4byte	.LASF39
 2761 060c 01       		.byte	0x1
 2762 060d F104     		.2byte	0x4f1
 2763 060f 77000000 		.4byte	0x77
 2764 0613 02       		.uleb128 0x2
 2765 0614 91       		.byte	0x91
 2766 0615 64       		.sleb128 -28
 2767 0616 0B       		.uleb128 0xb
 2768 0617 B7010000 		.4byte	.LASF69
 2769 061b 01       		.byte	0x1
 2770 061c F104     		.2byte	0x4f1
 2771 061e 77000000 		.4byte	0x77
 2772 0622 02       		.uleb128 0x2
 2773 0623 91       		.byte	0x91
 2774 0624 60       		.sleb128 -32
 2775 0625 0A       		.uleb128 0xa
 2776 0626 49040000 		.4byte	.LASF21
 2777 062a 01       		.byte	0x1
 2778 062b F304     		.2byte	0x4f3
 2779 062d 6B000000 		.4byte	0x6b
 2780 0631 02       		.uleb128 0x2
 2781 0632 91       		.byte	0x91
 2782 0633 6F       		.sleb128 -17
 2783 0634 00       		.byte	0
 2784 0635 0D       		.uleb128 0xd
 2785 0636 6F010000 		.4byte	.LASF70
 2786 063a 01       		.byte	0x1
 2787 063b 0E05     		.2byte	0x50e
 2788 063d 77000000 		.4byte	0x77
 2789 0641 00000000 		.4byte	.LFB36
 2790 0645 20000000 		.4byte	.LFE36-.LFB36
 2791 0649 01       		.uleb128 0x1
 2792 064a 9C       		.byte	0x9c
 2793 064b 0C       		.uleb128 0xc
 2794 064c C8000000 		.4byte	.LASF71
 2795 0650 01       		.byte	0x1
 2796 0651 2705     		.2byte	0x527
 2797 0653 00000000 		.4byte	.LFB37
 2798 0657 1C000000 		.4byte	.LFE37-.LFB37
 2799 065b 01       		.uleb128 0x1
 2800 065c 9C       		.byte	0x9c
 2801 065d 71060000 		.4byte	0x671
 2802 0661 0B       		.uleb128 0xb
 2803 0662 B9030000 		.4byte	.LASF72
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 75


 2804 0666 01       		.byte	0x1
 2805 0667 2705     		.2byte	0x527
 2806 0669 77000000 		.4byte	0x77
 2807 066d 02       		.uleb128 0x2
 2808 066e 91       		.byte	0x91
 2809 066f 74       		.sleb128 -12
 2810 0670 00       		.byte	0
 2811 0671 0D       		.uleb128 0xd
 2812 0672 9C030000 		.4byte	.LASF73
 2813 0676 01       		.byte	0x1
 2814 0677 3E05     		.2byte	0x53e
 2815 0679 77000000 		.4byte	0x77
 2816 067d 00000000 		.4byte	.LFB38
 2817 0681 14000000 		.4byte	.LFE38-.LFB38
 2818 0685 01       		.uleb128 0x1
 2819 0686 9C       		.byte	0x9c
 2820 0687 0D       		.uleb128 0xd
 2821 0688 FB040000 		.4byte	.LASF74
 2822 068c 01       		.byte	0x1
 2823 068d 5505     		.2byte	0x555
 2824 068f 77000000 		.4byte	0x77
 2825 0693 00000000 		.4byte	.LFB39
 2826 0697 14000000 		.4byte	.LFE39-.LFB39
 2827 069b 01       		.uleb128 0x1
 2828 069c 9C       		.byte	0x9c
 2829 069d 0C       		.uleb128 0xc
 2830 069e DD000000 		.4byte	.LASF75
 2831 06a2 01       		.byte	0x1
 2832 06a3 6C05     		.2byte	0x56c
 2833 06a5 00000000 		.4byte	.LFB40
 2834 06a9 1C000000 		.4byte	.LFE40-.LFB40
 2835 06ad 01       		.uleb128 0x1
 2836 06ae 9C       		.byte	0x9c
 2837 06af C3060000 		.4byte	0x6c3
 2838 06b3 0B       		.uleb128 0xb
 2839 06b4 B9030000 		.4byte	.LASF72
 2840 06b8 01       		.byte	0x1
 2841 06b9 6C05     		.2byte	0x56c
 2842 06bb 77000000 		.4byte	0x77
 2843 06bf 02       		.uleb128 0x2
 2844 06c0 91       		.byte	0x91
 2845 06c1 74       		.sleb128 -12
 2846 06c2 00       		.byte	0
 2847 06c3 0C       		.uleb128 0xc
 2848 06c4 F2030000 		.4byte	.LASF76
 2849 06c8 01       		.byte	0x1
 2850 06c9 8305     		.2byte	0x583
 2851 06cb 00000000 		.4byte	.LFB41
 2852 06cf 1C000000 		.4byte	.LFE41-.LFB41
 2853 06d3 01       		.uleb128 0x1
 2854 06d4 9C       		.byte	0x9c
 2855 06d5 E9060000 		.4byte	0x6e9
 2856 06d9 0B       		.uleb128 0xb
 2857 06da B9030000 		.4byte	.LASF72
 2858 06de 01       		.byte	0x1
 2859 06df 8305     		.2byte	0x583
 2860 06e1 77000000 		.4byte	0x77
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 76


 2861 06e5 02       		.uleb128 0x2
 2862 06e6 91       		.byte	0x91
 2863 06e7 74       		.sleb128 -12
 2864 06e8 00       		.byte	0
 2865 06e9 0E       		.uleb128 0xe
 2866 06ea D0020000 		.4byte	.LASF80
 2867 06ee 01       		.byte	0x1
 2868 06ef 15       		.byte	0x15
 2869 06f0 6B000000 		.4byte	0x6b
 2870 06f4 05       		.uleb128 0x5
 2871 06f5 03       		.byte	0x3
 2872 06f6 00000000 		.4byte	PWM_initVar
 2873 06fa 00       		.byte	0
 2874              		.section	.debug_abbrev,"",%progbits
 2875              	.Ldebug_abbrev0:
 2876 0000 01       		.uleb128 0x1
 2877 0001 11       		.uleb128 0x11
 2878 0002 01       		.byte	0x1
 2879 0003 25       		.uleb128 0x25
 2880 0004 0E       		.uleb128 0xe
 2881 0005 13       		.uleb128 0x13
 2882 0006 0B       		.uleb128 0xb
 2883 0007 03       		.uleb128 0x3
 2884 0008 0E       		.uleb128 0xe
 2885 0009 1B       		.uleb128 0x1b
 2886 000a 0E       		.uleb128 0xe
 2887 000b 55       		.uleb128 0x55
 2888 000c 17       		.uleb128 0x17
 2889 000d 11       		.uleb128 0x11
 2890 000e 01       		.uleb128 0x1
 2891 000f 10       		.uleb128 0x10
 2892 0010 17       		.uleb128 0x17
 2893 0011 00       		.byte	0
 2894 0012 00       		.byte	0
 2895 0013 02       		.uleb128 0x2
 2896 0014 24       		.uleb128 0x24
 2897 0015 00       		.byte	0
 2898 0016 0B       		.uleb128 0xb
 2899 0017 0B       		.uleb128 0xb
 2900 0018 3E       		.uleb128 0x3e
 2901 0019 0B       		.uleb128 0xb
 2902 001a 03       		.uleb128 0x3
 2903 001b 0E       		.uleb128 0xe
 2904 001c 00       		.byte	0
 2905 001d 00       		.byte	0
 2906 001e 03       		.uleb128 0x3
 2907 001f 24       		.uleb128 0x24
 2908 0020 00       		.byte	0
 2909 0021 0B       		.uleb128 0xb
 2910 0022 0B       		.uleb128 0xb
 2911 0023 3E       		.uleb128 0x3e
 2912 0024 0B       		.uleb128 0xb
 2913 0025 03       		.uleb128 0x3
 2914 0026 08       		.uleb128 0x8
 2915 0027 00       		.byte	0
 2916 0028 00       		.byte	0
 2917 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 77


 2918 002a 16       		.uleb128 0x16
 2919 002b 00       		.byte	0
 2920 002c 03       		.uleb128 0x3
 2921 002d 0E       		.uleb128 0xe
 2922 002e 3A       		.uleb128 0x3a
 2923 002f 0B       		.uleb128 0xb
 2924 0030 3B       		.uleb128 0x3b
 2925 0031 05       		.uleb128 0x5
 2926 0032 49       		.uleb128 0x49
 2927 0033 13       		.uleb128 0x13
 2928 0034 00       		.byte	0
 2929 0035 00       		.byte	0
 2930 0036 05       		.uleb128 0x5
 2931 0037 35       		.uleb128 0x35
 2932 0038 00       		.byte	0
 2933 0039 49       		.uleb128 0x49
 2934 003a 13       		.uleb128 0x13
 2935 003b 00       		.byte	0
 2936 003c 00       		.byte	0
 2937 003d 06       		.uleb128 0x6
 2938 003e 2E       		.uleb128 0x2e
 2939 003f 00       		.byte	0
 2940 0040 3F       		.uleb128 0x3f
 2941 0041 19       		.uleb128 0x19
 2942 0042 03       		.uleb128 0x3
 2943 0043 0E       		.uleb128 0xe
 2944 0044 3A       		.uleb128 0x3a
 2945 0045 0B       		.uleb128 0xb
 2946 0046 3B       		.uleb128 0x3b
 2947 0047 0B       		.uleb128 0xb
 2948 0048 27       		.uleb128 0x27
 2949 0049 19       		.uleb128 0x19
 2950 004a 11       		.uleb128 0x11
 2951 004b 01       		.uleb128 0x1
 2952 004c 12       		.uleb128 0x12
 2953 004d 06       		.uleb128 0x6
 2954 004e 40       		.uleb128 0x40
 2955 004f 18       		.uleb128 0x18
 2956 0050 9642     		.uleb128 0x2116
 2957 0052 19       		.uleb128 0x19
 2958 0053 00       		.byte	0
 2959 0054 00       		.byte	0
 2960 0055 07       		.uleb128 0x7
 2961 0056 2E       		.uleb128 0x2e
 2962 0057 01       		.byte	0x1
 2963 0058 3F       		.uleb128 0x3f
 2964 0059 19       		.uleb128 0x19
 2965 005a 03       		.uleb128 0x3
 2966 005b 0E       		.uleb128 0xe
 2967 005c 3A       		.uleb128 0x3a
 2968 005d 0B       		.uleb128 0xb
 2969 005e 3B       		.uleb128 0x3b
 2970 005f 0B       		.uleb128 0xb
 2971 0060 27       		.uleb128 0x27
 2972 0061 19       		.uleb128 0x19
 2973 0062 11       		.uleb128 0x11
 2974 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 78


 2975 0064 12       		.uleb128 0x12
 2976 0065 06       		.uleb128 0x6
 2977 0066 40       		.uleb128 0x40
 2978 0067 18       		.uleb128 0x18
 2979 0068 9642     		.uleb128 0x2116
 2980 006a 19       		.uleb128 0x19
 2981 006b 01       		.uleb128 0x1
 2982 006c 13       		.uleb128 0x13
 2983 006d 00       		.byte	0
 2984 006e 00       		.byte	0
 2985 006f 08       		.uleb128 0x8
 2986 0070 34       		.uleb128 0x34
 2987 0071 00       		.byte	0
 2988 0072 03       		.uleb128 0x3
 2989 0073 0E       		.uleb128 0xe
 2990 0074 3A       		.uleb128 0x3a
 2991 0075 0B       		.uleb128 0xb
 2992 0076 3B       		.uleb128 0x3b
 2993 0077 0B       		.uleb128 0xb
 2994 0078 49       		.uleb128 0x49
 2995 0079 13       		.uleb128 0x13
 2996 007a 02       		.uleb128 0x2
 2997 007b 18       		.uleb128 0x18
 2998 007c 00       		.byte	0
 2999 007d 00       		.byte	0
 3000 007e 09       		.uleb128 0x9
 3001 007f 2E       		.uleb128 0x2e
 3002 0080 01       		.byte	0x1
 3003 0081 3F       		.uleb128 0x3f
 3004 0082 19       		.uleb128 0x19
 3005 0083 03       		.uleb128 0x3
 3006 0084 0E       		.uleb128 0xe
 3007 0085 3A       		.uleb128 0x3a
 3008 0086 0B       		.uleb128 0xb
 3009 0087 3B       		.uleb128 0x3b
 3010 0088 05       		.uleb128 0x5
 3011 0089 27       		.uleb128 0x27
 3012 008a 19       		.uleb128 0x19
 3013 008b 11       		.uleb128 0x11
 3014 008c 01       		.uleb128 0x1
 3015 008d 12       		.uleb128 0x12
 3016 008e 06       		.uleb128 0x6
 3017 008f 40       		.uleb128 0x40
 3018 0090 18       		.uleb128 0x18
 3019 0091 9642     		.uleb128 0x2116
 3020 0093 19       		.uleb128 0x19
 3021 0094 01       		.uleb128 0x1
 3022 0095 13       		.uleb128 0x13
 3023 0096 00       		.byte	0
 3024 0097 00       		.byte	0
 3025 0098 0A       		.uleb128 0xa
 3026 0099 34       		.uleb128 0x34
 3027 009a 00       		.byte	0
 3028 009b 03       		.uleb128 0x3
 3029 009c 0E       		.uleb128 0xe
 3030 009d 3A       		.uleb128 0x3a
 3031 009e 0B       		.uleb128 0xb
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 79


 3032 009f 3B       		.uleb128 0x3b
 3033 00a0 05       		.uleb128 0x5
 3034 00a1 49       		.uleb128 0x49
 3035 00a2 13       		.uleb128 0x13
 3036 00a3 02       		.uleb128 0x2
 3037 00a4 18       		.uleb128 0x18
 3038 00a5 00       		.byte	0
 3039 00a6 00       		.byte	0
 3040 00a7 0B       		.uleb128 0xb
 3041 00a8 05       		.uleb128 0x5
 3042 00a9 00       		.byte	0
 3043 00aa 03       		.uleb128 0x3
 3044 00ab 0E       		.uleb128 0xe
 3045 00ac 3A       		.uleb128 0x3a
 3046 00ad 0B       		.uleb128 0xb
 3047 00ae 3B       		.uleb128 0x3b
 3048 00af 05       		.uleb128 0x5
 3049 00b0 49       		.uleb128 0x49
 3050 00b1 13       		.uleb128 0x13
 3051 00b2 02       		.uleb128 0x2
 3052 00b3 18       		.uleb128 0x18
 3053 00b4 00       		.byte	0
 3054 00b5 00       		.byte	0
 3055 00b6 0C       		.uleb128 0xc
 3056 00b7 2E       		.uleb128 0x2e
 3057 00b8 01       		.byte	0x1
 3058 00b9 3F       		.uleb128 0x3f
 3059 00ba 19       		.uleb128 0x19
 3060 00bb 03       		.uleb128 0x3
 3061 00bc 0E       		.uleb128 0xe
 3062 00bd 3A       		.uleb128 0x3a
 3063 00be 0B       		.uleb128 0xb
 3064 00bf 3B       		.uleb128 0x3b
 3065 00c0 05       		.uleb128 0x5
 3066 00c1 27       		.uleb128 0x27
 3067 00c2 19       		.uleb128 0x19
 3068 00c3 11       		.uleb128 0x11
 3069 00c4 01       		.uleb128 0x1
 3070 00c5 12       		.uleb128 0x12
 3071 00c6 06       		.uleb128 0x6
 3072 00c7 40       		.uleb128 0x40
 3073 00c8 18       		.uleb128 0x18
 3074 00c9 9742     		.uleb128 0x2117
 3075 00cb 19       		.uleb128 0x19
 3076 00cc 01       		.uleb128 0x1
 3077 00cd 13       		.uleb128 0x13
 3078 00ce 00       		.byte	0
 3079 00cf 00       		.byte	0
 3080 00d0 0D       		.uleb128 0xd
 3081 00d1 2E       		.uleb128 0x2e
 3082 00d2 00       		.byte	0
 3083 00d3 3F       		.uleb128 0x3f
 3084 00d4 19       		.uleb128 0x19
 3085 00d5 03       		.uleb128 0x3
 3086 00d6 0E       		.uleb128 0xe
 3087 00d7 3A       		.uleb128 0x3a
 3088 00d8 0B       		.uleb128 0xb
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 80


 3089 00d9 3B       		.uleb128 0x3b
 3090 00da 05       		.uleb128 0x5
 3091 00db 27       		.uleb128 0x27
 3092 00dc 19       		.uleb128 0x19
 3093 00dd 49       		.uleb128 0x49
 3094 00de 13       		.uleb128 0x13
 3095 00df 11       		.uleb128 0x11
 3096 00e0 01       		.uleb128 0x1
 3097 00e1 12       		.uleb128 0x12
 3098 00e2 06       		.uleb128 0x6
 3099 00e3 40       		.uleb128 0x40
 3100 00e4 18       		.uleb128 0x18
 3101 00e5 9742     		.uleb128 0x2117
 3102 00e7 19       		.uleb128 0x19
 3103 00e8 00       		.byte	0
 3104 00e9 00       		.byte	0
 3105 00ea 0E       		.uleb128 0xe
 3106 00eb 34       		.uleb128 0x34
 3107 00ec 00       		.byte	0
 3108 00ed 03       		.uleb128 0x3
 3109 00ee 0E       		.uleb128 0xe
 3110 00ef 3A       		.uleb128 0x3a
 3111 00f0 0B       		.uleb128 0xb
 3112 00f1 3B       		.uleb128 0x3b
 3113 00f2 0B       		.uleb128 0xb
 3114 00f3 49       		.uleb128 0x49
 3115 00f4 13       		.uleb128 0x13
 3116 00f5 3F       		.uleb128 0x3f
 3117 00f6 19       		.uleb128 0x19
 3118 00f7 02       		.uleb128 0x2
 3119 00f8 18       		.uleb128 0x18
 3120 00f9 00       		.byte	0
 3121 00fa 00       		.byte	0
 3122 00fb 00       		.byte	0
 3123              		.section	.debug_aranges,"",%progbits
 3124 0000 54010000 		.4byte	0x154
 3125 0004 0200     		.2byte	0x2
 3126 0006 00000000 		.4byte	.Ldebug_info0
 3127 000a 04       		.byte	0x4
 3128 000b 00       		.byte	0
 3129 000c 0000     		.2byte	0
 3130 000e 0000     		.2byte	0
 3131 0010 00000000 		.4byte	.LFB2
 3132 0014 64000000 		.4byte	.LFE2-.LFB2
 3133 0018 00000000 		.4byte	.LFB3
 3134 001c 3C000000 		.4byte	.LFE3-.LFB3
 3135 0020 00000000 		.4byte	.LFB4
 3136 0024 24000000 		.4byte	.LFE4-.LFB4
 3137 0028 00000000 		.4byte	.LFB5
 3138 002c 34000000 		.4byte	.LFE5-.LFB5
 3139 0030 00000000 		.4byte	.LFB6
 3140 0034 48000000 		.4byte	.LFE6-.LFB6
 3141 0038 00000000 		.4byte	.LFB7
 3142 003c 48000000 		.4byte	.LFE7-.LFB7
 3143 0040 00000000 		.4byte	.LFB8
 3144 0044 48000000 		.4byte	.LFE8-.LFB8
 3145 0048 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 81


 3146 004c 50000000 		.4byte	.LFE9-.LFB9
 3147 0050 00000000 		.4byte	.LFB10
 3148 0054 20000000 		.4byte	.LFE10-.LFB10
 3149 0058 00000000 		.4byte	.LFB11
 3150 005c 4C000000 		.4byte	.LFE11-.LFB11
 3151 0060 00000000 		.4byte	.LFB12
 3152 0064 4C000000 		.4byte	.LFE12-.LFB12
 3153 0068 00000000 		.4byte	.LFB13
 3154 006c 50000000 		.4byte	.LFE13-.LFB13
 3155 0070 00000000 		.4byte	.LFB14
 3156 0074 48000000 		.4byte	.LFE14-.LFB14
 3157 0078 00000000 		.4byte	.LFB15
 3158 007c 20000000 		.4byte	.LFE15-.LFB15
 3159 0080 00000000 		.4byte	.LFB16
 3160 0084 18000000 		.4byte	.LFE16-.LFB16
 3161 0088 00000000 		.4byte	.LFB17
 3162 008c 48000000 		.4byte	.LFE17-.LFB17
 3163 0090 00000000 		.4byte	.LFB18
 3164 0094 20000000 		.4byte	.LFE18-.LFB18
 3165 0098 00000000 		.4byte	.LFB19
 3166 009c 18000000 		.4byte	.LFE19-.LFB19
 3167 00a0 00000000 		.4byte	.LFB20
 3168 00a4 48000000 		.4byte	.LFE20-.LFB20
 3169 00a8 00000000 		.4byte	.LFB21
 3170 00ac 20000000 		.4byte	.LFE21-.LFB21
 3171 00b0 00000000 		.4byte	.LFB22
 3172 00b4 18000000 		.4byte	.LFE22-.LFB22
 3173 00b8 00000000 		.4byte	.LFB23
 3174 00bc 4C000000 		.4byte	.LFE23-.LFB23
 3175 00c0 00000000 		.4byte	.LFB24
 3176 00c4 20000000 		.4byte	.LFE24-.LFB24
 3177 00c8 00000000 		.4byte	.LFB25
 3178 00cc 18000000 		.4byte	.LFE25-.LFB25
 3179 00d0 00000000 		.4byte	.LFB26
 3180 00d4 20000000 		.4byte	.LFE26-.LFB26
 3181 00d8 00000000 		.4byte	.LFB27
 3182 00dc 18000000 		.4byte	.LFE27-.LFB27
 3183 00e0 00000000 		.4byte	.LFB28
 3184 00e4 18000000 		.4byte	.LFE28-.LFB28
 3185 00e8 00000000 		.4byte	.LFB29
 3186 00ec 18000000 		.4byte	.LFE29-.LFB29
 3187 00f0 00000000 		.4byte	.LFB30
 3188 00f4 44000000 		.4byte	.LFE30-.LFB30
 3189 00f8 00000000 		.4byte	.LFB31
 3190 00fc 48000000 		.4byte	.LFE31-.LFB31
 3191 0100 00000000 		.4byte	.LFB32
 3192 0104 4C000000 		.4byte	.LFE32-.LFB32
 3193 0108 00000000 		.4byte	.LFB33
 3194 010c 48000000 		.4byte	.LFE33-.LFB33
 3195 0110 00000000 		.4byte	.LFB34
 3196 0114 48000000 		.4byte	.LFE34-.LFB34
 3197 0118 00000000 		.4byte	.LFB35
 3198 011c 3C000000 		.4byte	.LFE35-.LFB35
 3199 0120 00000000 		.4byte	.LFB36
 3200 0124 20000000 		.4byte	.LFE36-.LFB36
 3201 0128 00000000 		.4byte	.LFB37
 3202 012c 1C000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 82


 3203 0130 00000000 		.4byte	.LFB38
 3204 0134 14000000 		.4byte	.LFE38-.LFB38
 3205 0138 00000000 		.4byte	.LFB39
 3206 013c 14000000 		.4byte	.LFE39-.LFB39
 3207 0140 00000000 		.4byte	.LFB40
 3208 0144 1C000000 		.4byte	.LFE40-.LFB40
 3209 0148 00000000 		.4byte	.LFB41
 3210 014c 1C000000 		.4byte	.LFE41-.LFB41
 3211 0150 00000000 		.4byte	0
 3212 0154 00000000 		.4byte	0
 3213              		.section	.debug_ranges,"",%progbits
 3214              	.Ldebug_ranges0:
 3215 0000 00000000 		.4byte	.LFB2
 3216 0004 64000000 		.4byte	.LFE2
 3217 0008 00000000 		.4byte	.LFB3
 3218 000c 3C000000 		.4byte	.LFE3
 3219 0010 00000000 		.4byte	.LFB4
 3220 0014 24000000 		.4byte	.LFE4
 3221 0018 00000000 		.4byte	.LFB5
 3222 001c 34000000 		.4byte	.LFE5
 3223 0020 00000000 		.4byte	.LFB6
 3224 0024 48000000 		.4byte	.LFE6
 3225 0028 00000000 		.4byte	.LFB7
 3226 002c 48000000 		.4byte	.LFE7
 3227 0030 00000000 		.4byte	.LFB8
 3228 0034 48000000 		.4byte	.LFE8
 3229 0038 00000000 		.4byte	.LFB9
 3230 003c 50000000 		.4byte	.LFE9
 3231 0040 00000000 		.4byte	.LFB10
 3232 0044 20000000 		.4byte	.LFE10
 3233 0048 00000000 		.4byte	.LFB11
 3234 004c 4C000000 		.4byte	.LFE11
 3235 0050 00000000 		.4byte	.LFB12
 3236 0054 4C000000 		.4byte	.LFE12
 3237 0058 00000000 		.4byte	.LFB13
 3238 005c 50000000 		.4byte	.LFE13
 3239 0060 00000000 		.4byte	.LFB14
 3240 0064 48000000 		.4byte	.LFE14
 3241 0068 00000000 		.4byte	.LFB15
 3242 006c 20000000 		.4byte	.LFE15
 3243 0070 00000000 		.4byte	.LFB16
 3244 0074 18000000 		.4byte	.LFE16
 3245 0078 00000000 		.4byte	.LFB17
 3246 007c 48000000 		.4byte	.LFE17
 3247 0080 00000000 		.4byte	.LFB18
 3248 0084 20000000 		.4byte	.LFE18
 3249 0088 00000000 		.4byte	.LFB19
 3250 008c 18000000 		.4byte	.LFE19
 3251 0090 00000000 		.4byte	.LFB20
 3252 0094 48000000 		.4byte	.LFE20
 3253 0098 00000000 		.4byte	.LFB21
 3254 009c 20000000 		.4byte	.LFE21
 3255 00a0 00000000 		.4byte	.LFB22
 3256 00a4 18000000 		.4byte	.LFE22
 3257 00a8 00000000 		.4byte	.LFB23
 3258 00ac 4C000000 		.4byte	.LFE23
 3259 00b0 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 83


 3260 00b4 20000000 		.4byte	.LFE24
 3261 00b8 00000000 		.4byte	.LFB25
 3262 00bc 18000000 		.4byte	.LFE25
 3263 00c0 00000000 		.4byte	.LFB26
 3264 00c4 20000000 		.4byte	.LFE26
 3265 00c8 00000000 		.4byte	.LFB27
 3266 00cc 18000000 		.4byte	.LFE27
 3267 00d0 00000000 		.4byte	.LFB28
 3268 00d4 18000000 		.4byte	.LFE28
 3269 00d8 00000000 		.4byte	.LFB29
 3270 00dc 18000000 		.4byte	.LFE29
 3271 00e0 00000000 		.4byte	.LFB30
 3272 00e4 44000000 		.4byte	.LFE30
 3273 00e8 00000000 		.4byte	.LFB31
 3274 00ec 48000000 		.4byte	.LFE31
 3275 00f0 00000000 		.4byte	.LFB32
 3276 00f4 4C000000 		.4byte	.LFE32
 3277 00f8 00000000 		.4byte	.LFB33
 3278 00fc 48000000 		.4byte	.LFE33
 3279 0100 00000000 		.4byte	.LFB34
 3280 0104 48000000 		.4byte	.LFE34
 3281 0108 00000000 		.4byte	.LFB35
 3282 010c 3C000000 		.4byte	.LFE35
 3283 0110 00000000 		.4byte	.LFB36
 3284 0114 20000000 		.4byte	.LFE36
 3285 0118 00000000 		.4byte	.LFB37
 3286 011c 1C000000 		.4byte	.LFE37
 3287 0120 00000000 		.4byte	.LFB38
 3288 0124 14000000 		.4byte	.LFE38
 3289 0128 00000000 		.4byte	.LFB39
 3290 012c 14000000 		.4byte	.LFE39
 3291 0130 00000000 		.4byte	.LFB40
 3292 0134 1C000000 		.4byte	.LFE40
 3293 0138 00000000 		.4byte	.LFB41
 3294 013c 1C000000 		.4byte	.LFE41
 3295 0140 00000000 		.4byte	0
 3296 0144 00000000 		.4byte	0
 3297              		.section	.debug_line,"",%progbits
 3298              	.Ldebug_line0:
 3299 0000 6B030000 		.section	.debug_str,"MS",%progbits,1
 3299      02004000 
 3299      00000201 
 3299      FB0E0D00 
 3299      01010101 
 3300              	.LASF41:
 3301 0000 636F756E 		.ascii	"count\000"
 3301      7400
 3302              	.LASF19:
 3303 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3303      456E6162 
 3303      6C6500
 3304              	.LASF32:
 3305 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3305      53657450 
 3305      574D5379 
 3305      6E634B69 
 3305      6C6C00
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 84


 3306              	.LASF45:
 3307 0024 70657269 		.ascii	"period\000"
 3307      6F6400
 3308              	.LASF7:
 3309 002b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3309      206C6F6E 
 3309      6720756E 
 3309      7369676E 
 3309      65642069 
 3310              	.LASF62:
 3311 0042 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3311      53657443 
 3311      61707475 
 3311      72654D6F 
 3311      646500
 3312              	.LASF25:
 3313 0055 71644D6F 		.ascii	"qdMode\000"
 3313      646500
 3314              	.LASF40:
 3315 005c 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3315      57726974 
 3315      65436F75 
 3315      6E746572 
 3315      00
 3316              	.LASF78:
 3317 006d 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 3317      72617465 
 3317      645F536F 
 3317      75726365 
 3317      5C50536F 
 3318              	.LASF46:
 3319 008a 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3319      52656164 
 3319      436F756E 
 3319      74657200 
 3320              	.LASF6:
 3321 009a 6C6F6E67 		.ascii	"long long int\000"
 3321      206C6F6E 
 3321      6720696E 
 3321      7400
 3322              	.LASF0:
 3323 00a8 7369676E 		.ascii	"signed char\000"
 3323      65642063 
 3323      68617200 
 3324              	.LASF57:
 3325 00b4 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3325      57726974 
 3325      65436F6D 
 3325      70617265 
 3325      42756600 
 3326              	.LASF71:
 3327 00c8 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3327      53657449 
 3327      6E746572 
 3327      72757074 
 3327      4D6F6465 
 3328              	.LASF75:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 85


 3329 00dd 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3329      436C6561 
 3329      72496E74 
 3329      65727275 
 3329      707400
 3330              	.LASF4:
 3331 00f0 6C6F6E67 		.ascii	"long int\000"
 3331      20696E74 
 3331      00
 3332              	.LASF9:
 3333 00f9 75696E74 		.ascii	"uint8\000"
 3333      3800
 3334              	.LASF12:
 3335 00ff 646F7562 		.ascii	"double\000"
 3335      6C6500
 3336              	.LASF59:
 3337 0106 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3337      52656164 
 3337      436F6D70 
 3337      61726542 
 3337      756600
 3338              	.LASF48:
 3339 0119 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3339      53657443 
 3339      6F6D7061 
 3339      72655377 
 3339      617000
 3340              	.LASF20:
 3341 012c 50574D5F 		.ascii	"PWM_Stop\000"
 3341      53746F70 
 3341      00
 3342              	.LASF38:
 3343 0135 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3343      53657450 
 3343      574D496E 
 3343      76657274 
 3343      00
 3344              	.LASF10:
 3345 0146 75696E74 		.ascii	"uint32\000"
 3345      333200
 3346              	.LASF65:
 3347 014d 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3347      53657453 
 3347      74617274 
 3347      4D6F6465 
 3347      00
 3348              	.LASF63:
 3349 015e 74726967 		.ascii	"triggerMode\000"
 3349      6765724D 
 3349      6F646500 
 3350              	.LASF39:
 3351 016a 6D61736B 		.ascii	"mask\000"
 3351      00
 3352              	.LASF70:
 3353 016f 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3353      52656164 
 3353      53746174 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 86


 3353      757300
 3354              	.LASF37:
 3355 017e 64656164 		.ascii	"deadTime\000"
 3355      54696D65 
 3355      00
 3356              	.LASF66:
 3357 0187 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3357      53657453 
 3357      746F704D 
 3357      6F646500 
 3358              	.LASF8:
 3359 0197 756E7369 		.ascii	"unsigned int\000"
 3359      676E6564 
 3359      20696E74 
 3359      00
 3360              	.LASF36:
 3361 01a4 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3361      53657450 
 3361      574D4465 
 3361      61645469 
 3361      6D6500
 3362              	.LASF69:
 3363 01b7 636F6D6D 		.ascii	"command\000"
 3363      616E6400 
 3364              	.LASF5:
 3365 01bf 6C6F6E67 		.ascii	"long unsigned int\000"
 3365      20756E73 
 3365      69676E65 
 3365      6420696E 
 3365      7400
 3366              	.LASF31:
 3367 01d1 6D6F6465 		.ascii	"modeMask\000"
 3367      4D61736B 
 3367      00
 3368              	.LASF3:
 3369 01da 73686F72 		.ascii	"short unsigned int\000"
 3369      7420756E 
 3369      7369676E 
 3369      65642069 
 3369      6E7400
 3370              	.LASF26:
 3371 01ed 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3371      53657450 
 3371      72657363 
 3371      616C6572 
 3371      00
 3372              	.LASF18:
 3373 01fe 50574D5F 		.ascii	"PWM_Start\000"
 3373      53746172 
 3373      7400
 3374              	.LASF77:
 3375 0208 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3375      43313120 
 3375      352E342E 
 3375      31203230 
 3375      31363036 
 3376 023b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 87


 3376      20726576 
 3376      6973696F 
 3376      6E203233 
 3376      37373135 
 3377 026e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3377      66756E63 
 3377      74696F6E 
 3377      2D736563 
 3377      74696F6E 
 3378              	.LASF68:
 3379 0296 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3379      54726967 
 3379      67657243 
 3379      6F6D6D61 
 3379      6E6400
 3380              	.LASF54:
 3381 02a9 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3381      57726974 
 3381      65436F6D 
 3381      70617265 
 3381      00
 3382              	.LASF44:
 3383 02ba 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3383      57726974 
 3383      65506572 
 3383      696F6400 
 3384              	.LASF14:
 3385 02ca 72656733 		.ascii	"reg32\000"
 3385      3200
 3386              	.LASF80:
 3387 02d0 50574D5F 		.ascii	"PWM_initVar\000"
 3387      696E6974 
 3387      56617200 
 3388              	.LASF47:
 3389 02dc 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3389      52656164 
 3389      50657269 
 3389      6F6400
 3390              	.LASF16:
 3391 02eb 73697A65 		.ascii	"sizetype\000"
 3391      74797065 
 3391      00
 3392              	.LASF15:
 3393 02f4 6C6F6E67 		.ascii	"long double\000"
 3393      20646F75 
 3393      626C6500 
 3394              	.LASF55:
 3395 0300 636F6D70 		.ascii	"compare\000"
 3395      61726500 
 3396              	.LASF28:
 3397 0308 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3397      5365744F 
 3397      6E655368 
 3397      6F7400
 3398              	.LASF52:
 3399 0317 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3399      52656164 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 88


 3399      50657269 
 3399      6F644275 
 3399      6600
 3400              	.LASF11:
 3401 0329 666C6F61 		.ascii	"float\000"
 3401      7400
 3402              	.LASF27:
 3403 032f 70726573 		.ascii	"prescaler\000"
 3403      63616C65 
 3403      7200
 3404              	.LASF60:
 3405 0339 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3405      52656164 
 3405      43617074 
 3405      75726500 
 3406              	.LASF53:
 3407 0349 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3407      53657450 
 3407      6572696F 
 3407      64537761 
 3407      7000
 3408              	.LASF1:
 3409 035b 756E7369 		.ascii	"unsigned char\000"
 3409      676E6564 
 3409      20636861 
 3409      7200
 3410              	.LASF17:
 3411 0369 50574D5F 		.ascii	"PWM_Init\000"
 3411      496E6974 
 3411      00
 3412              	.LASF35:
 3413 0372 73746F70 		.ascii	"stopOnKillEnable\000"
 3413      4F6E4B69 
 3413      6C6C456E 
 3413      61626C65 
 3413      00
 3414              	.LASF30:
 3415 0383 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3415      53657450 
 3415      574D4D6F 
 3415      646500
 3416              	.LASF2:
 3417 0392 73686F72 		.ascii	"short int\000"
 3417      7420696E 
 3417      7400
 3418              	.LASF73:
 3419 039c 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3419      47657449 
 3419      6E746572 
 3419      72757074 
 3419      536F7572 
 3420              	.LASF72:
 3421 03b9 696E7465 		.ascii	"interruptMask\000"
 3421      72727570 
 3421      744D6173 
 3421      6B00
 3422              	.LASF50:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 89


 3423 03c7 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3423      57726974 
 3423      65506572 
 3423      696F6442 
 3423      756600
 3424              	.LASF23:
 3425 03da 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3425      53657451 
 3425      444D6F64 
 3425      6500
 3426              	.LASF13:
 3427 03e8 63686172 		.ascii	"char\000"
 3427      00
 3428              	.LASF24:
 3429 03ed 6D6F6465 		.ascii	"mode\000"
 3429      00
 3430              	.LASF76:
 3431 03f2 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3431      53657449 
 3431      6E746572 
 3431      72757074 
 3431      00
 3432              	.LASF64:
 3433 0403 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3433      53657452 
 3433      656C6F61 
 3433      644D6F64 
 3433      6500
 3434              	.LASF43:
 3435 0415 636F756E 		.ascii	"counterMode\000"
 3435      7465724D 
 3435      6F646500 
 3436              	.LASF58:
 3437 0421 636F6D70 		.ascii	"compareBuf\000"
 3437      61726542 
 3437      756600
 3438              	.LASF51:
 3439 042c 70657269 		.ascii	"periodBuf\000"
 3439      6F644275 
 3439      6600
 3440              	.LASF61:
 3441 0436 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3441      52656164 
 3441      43617074 
 3441      75726542 
 3441      756600
 3442              	.LASF21:
 3443 0449 656E6162 		.ascii	"enableInterrupts\000"
 3443      6C65496E 
 3443      74657272 
 3443      75707473 
 3443      00
 3444              	.LASF67:
 3445 045a 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3445      53657443 
 3445      6F756E74 
 3445      4D6F6465 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccYM8Kk1.s 			page 90


 3445      00
 3446              	.LASF79:
 3447 046b 433A5C55 		.ascii	"C:\\Users\\bernde\\Documents\\PSoC Creator\\Martins"
 3447      73657273 
 3447      5C626572 
 3447      6E64655C 
 3447      446F6375 
 3448 0499 4D6F7573 		.ascii	"Mouse\\MartinsMouse.cydsn\000"
 3448      655C4D61 
 3448      7274696E 
 3448      734D6F75 
 3448      73652E63 
 3449              	.LASF29:
 3450 04b2 6F6E6553 		.ascii	"oneShotEnable\000"
 3450      686F7445 
 3450      6E61626C 
 3450      6500
 3451              	.LASF22:
 3452 04c0 50574D5F 		.ascii	"PWM_SetMode\000"
 3452      5365744D 
 3452      6F646500 
 3453              	.LASF34:
 3454 04cc 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3454      53657450 
 3454      574D5374 
 3454      6F704F6E 
 3454      4B696C6C 
 3455              	.LASF33:
 3456 04e1 73796E63 		.ascii	"syncKillEnable\000"
 3456      4B696C6C 
 3456      456E6162 
 3456      6C6500
 3457              	.LASF49:
 3458 04f0 73776170 		.ascii	"swapEnable\000"
 3458      456E6162 
 3458      6C6500
 3459              	.LASF74:
 3460 04fb 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3460      47657449 
 3460      6E746572 
 3460      72757074 
 3460      536F7572 
 3461              	.LASF42:
 3462 0512 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3462      53657443 
 3462      6F756E74 
 3462      65724D6F 
 3462      646500
 3463              	.LASF56:
 3464 0525 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3464      52656164 
 3464      436F6D70 
 3464      61726500 
 3465              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
