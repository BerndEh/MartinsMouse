ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Buttons.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Buttons_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	Buttons_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	Buttons_SetDriveMode, %function
  25              	Buttons_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\Buttons.c"
   1:Generated_Source\PSoC4/Buttons.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Buttons.c **** * File Name: Buttons.c  
   3:Generated_Source\PSoC4/Buttons.c **** * Version 2.20
   4:Generated_Source\PSoC4/Buttons.c **** *
   5:Generated_Source\PSoC4/Buttons.c **** * Description:
   6:Generated_Source\PSoC4/Buttons.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/Buttons.c **** *
   8:Generated_Source\PSoC4/Buttons.c **** ********************************************************************************
   9:Generated_Source\PSoC4/Buttons.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/Buttons.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/Buttons.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/Buttons.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/Buttons.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/Buttons.c **** 
  15:Generated_Source\PSoC4/Buttons.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/Buttons.c **** #include "Buttons.h"
  17:Generated_Source\PSoC4/Buttons.c **** 
  18:Generated_Source\PSoC4/Buttons.c **** 
  19:Generated_Source\PSoC4/Buttons.c **** #if defined(Buttons__PC)
  20:Generated_Source\PSoC4/Buttons.c ****     #define Buttons_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/Buttons.c ****     do { \
  22:Generated_Source\PSoC4/Buttons.c ****         Buttons_PC =   (Buttons_PC & \
  23:Generated_Source\PSoC4/Buttons.c ****                                 (uint32)(~(uint32)(Buttons_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/Buttons.c ****                                 (Buttons_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/Buttons.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/Buttons.c ****                                 (Buttons_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/Buttons.c ****     } while (0)
  28:Generated_Source\PSoC4/Buttons.c **** #else
  29:Generated_Source\PSoC4/Buttons.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/Buttons.c ****         #define Buttons_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 2


  31:Generated_Source\PSoC4/Buttons.c ****         do { \
  32:Generated_Source\PSoC4/Buttons.c ****             Buttons_USBIO_CTRL_REG = (Buttons_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/Buttons.c ****                                     (uint32)(~(uint32)(Buttons_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/Buttons.c ****                                     (Buttons_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/Buttons.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/Buttons.c ****                                     (Buttons_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/Buttons.c ****         } while (0)
  38:Generated_Source\PSoC4/Buttons.c ****     #endif
  39:Generated_Source\PSoC4/Buttons.c **** #endif
  40:Generated_Source\PSoC4/Buttons.c ****   
  41:Generated_Source\PSoC4/Buttons.c **** 
  42:Generated_Source\PSoC4/Buttons.c **** #if defined(Buttons__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/Buttons.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/Buttons.c ****     * Function Name: Buttons_SetDriveMode
  45:Generated_Source\PSoC4/Buttons.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/Buttons.c ****     *
  47:Generated_Source\PSoC4/Buttons.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/Buttons.c ****     * 
  49:Generated_Source\PSoC4/Buttons.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/Buttons.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/Buttons.c ****     *
  52:Generated_Source\PSoC4/Buttons.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/Buttons.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/Buttons.c ****     *
  55:Generated_Source\PSoC4/Buttons.c ****     * \param mode
  56:Generated_Source\PSoC4/Buttons.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/Buttons.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/Buttons.c ****     *
  59:Generated_Source\PSoC4/Buttons.c ****     * \return
  60:Generated_Source\PSoC4/Buttons.c ****     *  None
  61:Generated_Source\PSoC4/Buttons.c ****     *
  62:Generated_Source\PSoC4/Buttons.c ****     * \sideeffect
  63:Generated_Source\PSoC4/Buttons.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/Buttons.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/Buttons.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/Buttons.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/Buttons.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/Buttons.c ****     *
  69:Generated_Source\PSoC4/Buttons.c ****     * \funcusage
  70:Generated_Source\PSoC4/Buttons.c ****     *  \snippet Buttons_SUT.c usage_Buttons_SetDriveMode
  71:Generated_Source\PSoC4/Buttons.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/Buttons.c ****     void Buttons_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/Buttons.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0200     		movs	r2, r0
  41 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 3


  42 000a 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/Buttons.c **** 		Buttons_SetP4PinDriveMode(Buttons__0__SHIFT, mode);
  43              		.loc 1 74 0
  44 000c 0B4B     		ldr	r3, .L2
  45 000e 0B4A     		ldr	r2, .L2
  46 0010 1268     		ldr	r2, [r2]
  47 0012 0B49     		ldr	r1, .L2+4
  48 0014 1140     		ands	r1, r2
  49 0016 FA1D     		adds	r2, r7, #7
  50 0018 1278     		ldrb	r2, [r2]
  51 001a 1203     		lsls	r2, r2, #12
  52 001c 0A43     		orrs	r2, r1
  53 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/Buttons.c **** 		Buttons_SetP4PinDriveMode(Buttons__1__SHIFT, mode);
  54              		.loc 1 75 0
  55 0020 064B     		ldr	r3, .L2
  56 0022 064A     		ldr	r2, .L2
  57 0024 1268     		ldr	r2, [r2]
  58 0026 0749     		ldr	r1, .L2+8
  59 0028 1140     		ands	r1, r2
  60 002a FA1D     		adds	r2, r7, #7
  61 002c 1278     		ldrb	r2, [r2]
  62 002e D203     		lsls	r2, r2, #15
  63 0030 0A43     		orrs	r2, r1
  64 0032 1A60     		str	r2, [r3]
  76:Generated_Source\PSoC4/Buttons.c ****     }
  65              		.loc 1 76 0
  66 0034 C046     		nop
  67 0036 BD46     		mov	sp, r7
  68 0038 02B0     		add	sp, sp, #8
  69              		@ sp needed
  70 003a 80BD     		pop	{r7, pc}
  71              	.L3:
  72              		.align	2
  73              	.L2:
  74 003c 08000440 		.word	1074003976
  75 0040 FF8FFFFF 		.word	-28673
  76 0044 FF7FFCFF 		.word	-229377
  77              		.cfi_endproc
  78              	.LFE0:
  79              		.size	Buttons_SetDriveMode, .-Buttons_SetDriveMode
  80              		.section	.text.Buttons_Write,"ax",%progbits
  81              		.align	2
  82              		.global	Buttons_Write
  83              		.code	16
  84              		.thumb_func
  85              		.type	Buttons_Write, %function
  86              	Buttons_Write:
  87              	.LFB1:
  77:Generated_Source\PSoC4/Buttons.c **** #endif
  78:Generated_Source\PSoC4/Buttons.c **** 
  79:Generated_Source\PSoC4/Buttons.c **** 
  80:Generated_Source\PSoC4/Buttons.c **** /*******************************************************************************
  81:Generated_Source\PSoC4/Buttons.c **** * Function Name: Buttons_Write
  82:Generated_Source\PSoC4/Buttons.c **** ****************************************************************************//**
  83:Generated_Source\PSoC4/Buttons.c **** *
  84:Generated_Source\PSoC4/Buttons.c **** * \brief Writes the value to the physical port (data output register), masking
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 4


  85:Generated_Source\PSoC4/Buttons.c **** *  and shifting the bits appropriately. 
  86:Generated_Source\PSoC4/Buttons.c **** *
  87:Generated_Source\PSoC4/Buttons.c **** * The data output register controls the signal applied to the physical pin in 
  88:Generated_Source\PSoC4/Buttons.c **** * conjunction with the drive mode parameter. This function avoids changing 
  89:Generated_Source\PSoC4/Buttons.c **** * other bits in the port by using the appropriate method (read-modify-write or
  90:Generated_Source\PSoC4/Buttons.c **** * bit banding).
  91:Generated_Source\PSoC4/Buttons.c **** *
  92:Generated_Source\PSoC4/Buttons.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  93:Generated_Source\PSoC4/Buttons.c **** * as it is driven by the hardware signal attached to it.
  94:Generated_Source\PSoC4/Buttons.c **** *
  95:Generated_Source\PSoC4/Buttons.c **** * \param value
  96:Generated_Source\PSoC4/Buttons.c **** *  Value to write to the component instance.
  97:Generated_Source\PSoC4/Buttons.c **** *
  98:Generated_Source\PSoC4/Buttons.c **** * \return 
  99:Generated_Source\PSoC4/Buttons.c **** *  None 
 100:Generated_Source\PSoC4/Buttons.c **** *
 101:Generated_Source\PSoC4/Buttons.c **** * \sideeffect
 102:Generated_Source\PSoC4/Buttons.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 103:Generated_Source\PSoC4/Buttons.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 104:Generated_Source\PSoC4/Buttons.c **** *  interrupts this function and performs writes to the Pins component data 
 105:Generated_Source\PSoC4/Buttons.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 106:Generated_Source\PSoC4/Buttons.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 107:Generated_Source\PSoC4/Buttons.c **** *  this function.
 108:Generated_Source\PSoC4/Buttons.c **** *
 109:Generated_Source\PSoC4/Buttons.c **** * \funcusage
 110:Generated_Source\PSoC4/Buttons.c **** *  \snippet Buttons_SUT.c usage_Buttons_Write
 111:Generated_Source\PSoC4/Buttons.c **** *******************************************************************************/
 112:Generated_Source\PSoC4/Buttons.c **** void Buttons_Write(uint8 value)
 113:Generated_Source\PSoC4/Buttons.c **** {
  88              		.loc 1 113 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 16
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 80B5     		push	{r7, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 84B0     		sub	sp, sp, #16
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 100 0006 0200     		movs	r2, r0
 101 0008 FB1D     		adds	r3, r7, #7
 102 000a 1A70     		strb	r2, [r3]
 114:Generated_Source\PSoC4/Buttons.c ****     uint8 drVal = (uint8)(Buttons_DR & (uint8)(~Buttons_MASK));
 103              		.loc 1 114 0
 104 000c 0F4B     		ldr	r3, .L5
 105 000e 1B68     		ldr	r3, [r3]
 106 0010 DAB2     		uxtb	r2, r3
 107 0012 0F23     		movs	r3, #15
 108 0014 FB18     		adds	r3, r7, r3
 109 0016 3021     		movs	r1, #48
 110 0018 8A43     		bics	r2, r1
 111 001a 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/Buttons.c ****     drVal = (drVal | ((uint8)(value << Buttons_SHIFT) & Buttons_MASK));
 112              		.loc 1 115 0
 113 001c FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 5


 114 001e 1B78     		ldrb	r3, [r3]
 115 0020 1B01     		lsls	r3, r3, #4
 116 0022 DBB2     		uxtb	r3, r3
 117 0024 3022     		movs	r2, #48
 118 0026 1340     		ands	r3, r2
 119 0028 D9B2     		uxtb	r1, r3
 120 002a 0F23     		movs	r3, #15
 121 002c FB18     		adds	r3, r7, r3
 122 002e 0F22     		movs	r2, #15
 123 0030 BA18     		adds	r2, r7, r2
 124 0032 1278     		ldrb	r2, [r2]
 125 0034 0A43     		orrs	r2, r1
 126 0036 1A70     		strb	r2, [r3]
 116:Generated_Source\PSoC4/Buttons.c ****     Buttons_DR = (uint32)drVal;
 127              		.loc 1 116 0
 128 0038 044B     		ldr	r3, .L5
 129 003a 0F22     		movs	r2, #15
 130 003c BA18     		adds	r2, r7, r2
 131 003e 1278     		ldrb	r2, [r2]
 132 0040 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/Buttons.c **** }
 133              		.loc 1 117 0
 134 0042 C046     		nop
 135 0044 BD46     		mov	sp, r7
 136 0046 04B0     		add	sp, sp, #16
 137              		@ sp needed
 138 0048 80BD     		pop	{r7, pc}
 139              	.L6:
 140 004a C046     		.align	2
 141              	.L5:
 142 004c 00000440 		.word	1074003968
 143              		.cfi_endproc
 144              	.LFE1:
 145              		.size	Buttons_Write, .-Buttons_Write
 146              		.section	.text.Buttons_Read,"ax",%progbits
 147              		.align	2
 148              		.global	Buttons_Read
 149              		.code	16
 150              		.thumb_func
 151              		.type	Buttons_Read, %function
 152              	Buttons_Read:
 153              	.LFB2:
 118:Generated_Source\PSoC4/Buttons.c **** 
 119:Generated_Source\PSoC4/Buttons.c **** 
 120:Generated_Source\PSoC4/Buttons.c **** /*******************************************************************************
 121:Generated_Source\PSoC4/Buttons.c **** * Function Name: Buttons_Read
 122:Generated_Source\PSoC4/Buttons.c **** ****************************************************************************//**
 123:Generated_Source\PSoC4/Buttons.c **** *
 124:Generated_Source\PSoC4/Buttons.c **** * \brief Reads the associated physical port (pin status register) and masks 
 125:Generated_Source\PSoC4/Buttons.c **** *  the required bits according to the width and bit position of the component
 126:Generated_Source\PSoC4/Buttons.c **** *  instance. 
 127:Generated_Source\PSoC4/Buttons.c **** *
 128:Generated_Source\PSoC4/Buttons.c **** * The pin's status register returns the current logic level present on the 
 129:Generated_Source\PSoC4/Buttons.c **** * physical pin.
 130:Generated_Source\PSoC4/Buttons.c **** *
 131:Generated_Source\PSoC4/Buttons.c **** * \return 
 132:Generated_Source\PSoC4/Buttons.c **** *  The current value for the pins in the component as a right justified number.
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 6


 133:Generated_Source\PSoC4/Buttons.c **** *
 134:Generated_Source\PSoC4/Buttons.c **** * \funcusage
 135:Generated_Source\PSoC4/Buttons.c **** *  \snippet Buttons_SUT.c usage_Buttons_Read  
 136:Generated_Source\PSoC4/Buttons.c **** *******************************************************************************/
 137:Generated_Source\PSoC4/Buttons.c **** uint8 Buttons_Read(void)
 138:Generated_Source\PSoC4/Buttons.c **** {
 154              		.loc 1 138 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 139:Generated_Source\PSoC4/Buttons.c ****     return (uint8)((Buttons_PS & Buttons_MASK) >> Buttons_SHIFT);
 164              		.loc 1 139 0
 165 0004 044B     		ldr	r3, .L9
 166 0006 1B68     		ldr	r3, [r3]
 167 0008 3022     		movs	r2, #48
 168 000a 1340     		ands	r3, r2
 169 000c 1B09     		lsrs	r3, r3, #4
 170 000e DBB2     		uxtb	r3, r3
 140:Generated_Source\PSoC4/Buttons.c **** }
 171              		.loc 1 140 0
 172 0010 1800     		movs	r0, r3
 173 0012 BD46     		mov	sp, r7
 174              		@ sp needed
 175 0014 80BD     		pop	{r7, pc}
 176              	.L10:
 177 0016 C046     		.align	2
 178              	.L9:
 179 0018 04000440 		.word	1074003972
 180              		.cfi_endproc
 181              	.LFE2:
 182              		.size	Buttons_Read, .-Buttons_Read
 183              		.section	.text.Buttons_ReadDataReg,"ax",%progbits
 184              		.align	2
 185              		.global	Buttons_ReadDataReg
 186              		.code	16
 187              		.thumb_func
 188              		.type	Buttons_ReadDataReg, %function
 189              	Buttons_ReadDataReg:
 190              	.LFB3:
 141:Generated_Source\PSoC4/Buttons.c **** 
 142:Generated_Source\PSoC4/Buttons.c **** 
 143:Generated_Source\PSoC4/Buttons.c **** /*******************************************************************************
 144:Generated_Source\PSoC4/Buttons.c **** * Function Name: Buttons_ReadDataReg
 145:Generated_Source\PSoC4/Buttons.c **** ****************************************************************************//**
 146:Generated_Source\PSoC4/Buttons.c **** *
 147:Generated_Source\PSoC4/Buttons.c **** * \brief Reads the associated physical port's data output register and masks 
 148:Generated_Source\PSoC4/Buttons.c **** *  the correct bits according to the width and bit position of the component 
 149:Generated_Source\PSoC4/Buttons.c **** *  instance. 
 150:Generated_Source\PSoC4/Buttons.c **** *
 151:Generated_Source\PSoC4/Buttons.c **** * The data output register controls the signal applied to the physical pin in 
 152:Generated_Source\PSoC4/Buttons.c **** * conjunction with the drive mode parameter. This is not the same as the 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 7


 153:Generated_Source\PSoC4/Buttons.c **** * preferred Buttons_Read() API because the 
 154:Generated_Source\PSoC4/Buttons.c **** * Buttons_ReadDataReg() reads the data register instead of the status 
 155:Generated_Source\PSoC4/Buttons.c **** * register. For output pins this is a useful function to determine the value 
 156:Generated_Source\PSoC4/Buttons.c **** * just written to the pin.
 157:Generated_Source\PSoC4/Buttons.c **** *
 158:Generated_Source\PSoC4/Buttons.c **** * \return 
 159:Generated_Source\PSoC4/Buttons.c **** *  The current value of the data register masked and shifted into a right 
 160:Generated_Source\PSoC4/Buttons.c **** *  justified number for the component instance.
 161:Generated_Source\PSoC4/Buttons.c **** *
 162:Generated_Source\PSoC4/Buttons.c **** * \funcusage
 163:Generated_Source\PSoC4/Buttons.c **** *  \snippet Buttons_SUT.c usage_Buttons_ReadDataReg 
 164:Generated_Source\PSoC4/Buttons.c **** *******************************************************************************/
 165:Generated_Source\PSoC4/Buttons.c **** uint8 Buttons_ReadDataReg(void)
 166:Generated_Source\PSoC4/Buttons.c **** {
 191              		.loc 1 166 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
 167:Generated_Source\PSoC4/Buttons.c ****     return (uint8)((Buttons_DR & Buttons_MASK) >> Buttons_SHIFT);
 201              		.loc 1 167 0
 202 0004 044B     		ldr	r3, .L13
 203 0006 1B68     		ldr	r3, [r3]
 204 0008 3022     		movs	r2, #48
 205 000a 1340     		ands	r3, r2
 206 000c 1B09     		lsrs	r3, r3, #4
 207 000e DBB2     		uxtb	r3, r3
 168:Generated_Source\PSoC4/Buttons.c **** }
 208              		.loc 1 168 0
 209 0010 1800     		movs	r0, r3
 210 0012 BD46     		mov	sp, r7
 211              		@ sp needed
 212 0014 80BD     		pop	{r7, pc}
 213              	.L14:
 214 0016 C046     		.align	2
 215              	.L13:
 216 0018 00000440 		.word	1074003968
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	Buttons_ReadDataReg, .-Buttons_ReadDataReg
 220              		.section	.text.Buttons_SetInterruptMode,"ax",%progbits
 221              		.align	2
 222              		.global	Buttons_SetInterruptMode
 223              		.code	16
 224              		.thumb_func
 225              		.type	Buttons_SetInterruptMode, %function
 226              	Buttons_SetInterruptMode:
 227              	.LFB4:
 169:Generated_Source\PSoC4/Buttons.c **** 
 170:Generated_Source\PSoC4/Buttons.c **** 
 171:Generated_Source\PSoC4/Buttons.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/Buttons.c **** * Function Name: Buttons_SetInterruptMode
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 8


 173:Generated_Source\PSoC4/Buttons.c **** ****************************************************************************//**
 174:Generated_Source\PSoC4/Buttons.c **** *
 175:Generated_Source\PSoC4/Buttons.c **** * \brief Configures the interrupt mode for each of the Pins component's
 176:Generated_Source\PSoC4/Buttons.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 177:Generated_Source\PSoC4/Buttons.c **** *  specified in the Pins component.
 178:Generated_Source\PSoC4/Buttons.c **** *
 179:Generated_Source\PSoC4/Buttons.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 180:Generated_Source\PSoC4/Buttons.c **** *  interrupt may trigger it.
 181:Generated_Source\PSoC4/Buttons.c **** *
 182:Generated_Source\PSoC4/Buttons.c **** * \param position
 183:Generated_Source\PSoC4/Buttons.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 184:Generated_Source\PSoC4/Buttons.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 185:Generated_Source\PSoC4/Buttons.c **** *  component. Or you may use Buttons_INTR_ALL to configure the
 186:Generated_Source\PSoC4/Buttons.c **** *  interrupt mode of all the pins in the Pins component.       
 187:Generated_Source\PSoC4/Buttons.c **** *  - Buttons_0_INTR       (First pin in the list)
 188:Generated_Source\PSoC4/Buttons.c **** *  - Buttons_1_INTR       (Second pin in the list)
 189:Generated_Source\PSoC4/Buttons.c **** *  - ...
 190:Generated_Source\PSoC4/Buttons.c **** *  - Buttons_INTR_ALL     (All pins in Pins component)
 191:Generated_Source\PSoC4/Buttons.c **** *
 192:Generated_Source\PSoC4/Buttons.c **** * \param mode
 193:Generated_Source\PSoC4/Buttons.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 194:Generated_Source\PSoC4/Buttons.c **** *  \ref intrMode.
 195:Generated_Source\PSoC4/Buttons.c **** *
 196:Generated_Source\PSoC4/Buttons.c **** * \return 
 197:Generated_Source\PSoC4/Buttons.c **** *  None
 198:Generated_Source\PSoC4/Buttons.c **** *  
 199:Generated_Source\PSoC4/Buttons.c **** * \sideeffect
 200:Generated_Source\PSoC4/Buttons.c **** *  It is recommended that the interrupt be disabled before calling this 
 201:Generated_Source\PSoC4/Buttons.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 202:Generated_Source\PSoC4/Buttons.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 203:Generated_Source\PSoC4/Buttons.c **** *  port.
 204:Generated_Source\PSoC4/Buttons.c **** *
 205:Generated_Source\PSoC4/Buttons.c **** * \funcusage
 206:Generated_Source\PSoC4/Buttons.c **** *  \snippet Buttons_SUT.c usage_Buttons_SetInterruptMode
 207:Generated_Source\PSoC4/Buttons.c **** *******************************************************************************/
 208:Generated_Source\PSoC4/Buttons.c **** void Buttons_SetInterruptMode(uint16 position, uint16 mode)
 209:Generated_Source\PSoC4/Buttons.c **** {
 228              		.loc 1 209 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 16
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 84B0     		sub	sp, sp, #16
 237              		.cfi_def_cfa_offset 24
 238 0004 00AF     		add	r7, sp, #0
 239              		.cfi_def_cfa_register 7
 240 0006 0200     		movs	r2, r0
 241 0008 BB1D     		adds	r3, r7, #6
 242 000a 1A80     		strh	r2, [r3]
 243 000c 3B1D     		adds	r3, r7, #4
 244 000e 0A1C     		adds	r2, r1, #0
 245 0010 1A80     		strh	r2, [r3]
 210:Generated_Source\PSoC4/Buttons.c ****     uint32 intrCfg;
 211:Generated_Source\PSoC4/Buttons.c ****     
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 9


 212:Generated_Source\PSoC4/Buttons.c ****     intrCfg =  Buttons_INTCFG & (uint32)(~(uint32)position);
 246              		.loc 1 212 0
 247 0012 0B4B     		ldr	r3, .L16
 248 0014 1B68     		ldr	r3, [r3]
 249 0016 BA1D     		adds	r2, r7, #6
 250 0018 1288     		ldrh	r2, [r2]
 251 001a D243     		mvns	r2, r2
 252 001c 1340     		ands	r3, r2
 253 001e FB60     		str	r3, [r7, #12]
 213:Generated_Source\PSoC4/Buttons.c ****     Buttons_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 254              		.loc 1 213 0
 255 0020 074B     		ldr	r3, .L16
 256 0022 BA1D     		adds	r2, r7, #6
 257 0024 391D     		adds	r1, r7, #4
 258 0026 1288     		ldrh	r2, [r2]
 259 0028 0988     		ldrh	r1, [r1]
 260 002a 0A40     		ands	r2, r1
 261 002c 92B2     		uxth	r2, r2
 262 002e 1100     		movs	r1, r2
 263 0030 FA68     		ldr	r2, [r7, #12]
 264 0032 0A43     		orrs	r2, r1
 265 0034 1A60     		str	r2, [r3]
 214:Generated_Source\PSoC4/Buttons.c **** }
 266              		.loc 1 214 0
 267 0036 C046     		nop
 268 0038 BD46     		mov	sp, r7
 269 003a 04B0     		add	sp, sp, #16
 270              		@ sp needed
 271 003c 80BD     		pop	{r7, pc}
 272              	.L17:
 273 003e C046     		.align	2
 274              	.L16:
 275 0040 0C000440 		.word	1074003980
 276              		.cfi_endproc
 277              	.LFE4:
 278              		.size	Buttons_SetInterruptMode, .-Buttons_SetInterruptMode
 279              		.section	.text.Buttons_ClearInterrupt,"ax",%progbits
 280              		.align	2
 281              		.global	Buttons_ClearInterrupt
 282              		.code	16
 283              		.thumb_func
 284              		.type	Buttons_ClearInterrupt, %function
 285              	Buttons_ClearInterrupt:
 286              	.LFB5:
 215:Generated_Source\PSoC4/Buttons.c **** 
 216:Generated_Source\PSoC4/Buttons.c **** 
 217:Generated_Source\PSoC4/Buttons.c **** /*******************************************************************************
 218:Generated_Source\PSoC4/Buttons.c **** * Function Name: Buttons_ClearInterrupt
 219:Generated_Source\PSoC4/Buttons.c **** ****************************************************************************//**
 220:Generated_Source\PSoC4/Buttons.c **** *
 221:Generated_Source\PSoC4/Buttons.c **** * \brief Clears any active interrupts attached with the component and returns 
 222:Generated_Source\PSoC4/Buttons.c **** *  the value of the interrupt status register allowing determination of which
 223:Generated_Source\PSoC4/Buttons.c **** *  pins generated an interrupt event.
 224:Generated_Source\PSoC4/Buttons.c **** *
 225:Generated_Source\PSoC4/Buttons.c **** * \return 
 226:Generated_Source\PSoC4/Buttons.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 227:Generated_Source\PSoC4/Buttons.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 10


 228:Generated_Source\PSoC4/Buttons.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 229:Generated_Source\PSoC4/Buttons.c **** *  
 230:Generated_Source\PSoC4/Buttons.c **** * \sideeffect
 231:Generated_Source\PSoC4/Buttons.c **** *  Clears all bits of the physical port's interrupt status register, not just
 232:Generated_Source\PSoC4/Buttons.c **** *  those associated with the Pins component.
 233:Generated_Source\PSoC4/Buttons.c **** *
 234:Generated_Source\PSoC4/Buttons.c **** * \funcusage
 235:Generated_Source\PSoC4/Buttons.c **** *  \snippet Buttons_SUT.c usage_Buttons_ClearInterrupt
 236:Generated_Source\PSoC4/Buttons.c **** *******************************************************************************/
 237:Generated_Source\PSoC4/Buttons.c **** uint8 Buttons_ClearInterrupt(void)
 238:Generated_Source\PSoC4/Buttons.c **** {
 287              		.loc 1 238 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291 0000 80B5     		push	{r7, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 7, -8
 294              		.cfi_offset 14, -4
 295 0002 82B0     		sub	sp, sp, #8
 296              		.cfi_def_cfa_offset 16
 297 0004 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
 239:Generated_Source\PSoC4/Buttons.c **** 	uint8 maskedStatus = (uint8)(Buttons_INTSTAT & Buttons_MASK);
 299              		.loc 1 239 0
 300 0006 094B     		ldr	r3, .L20
 301 0008 1B68     		ldr	r3, [r3]
 302 000a DAB2     		uxtb	r2, r3
 303 000c FB1D     		adds	r3, r7, #7
 304 000e 3021     		movs	r1, #48
 305 0010 0A40     		ands	r2, r1
 306 0012 1A70     		strb	r2, [r3]
 240:Generated_Source\PSoC4/Buttons.c **** 	Buttons_INTSTAT = maskedStatus;
 307              		.loc 1 240 0
 308 0014 054B     		ldr	r3, .L20
 309 0016 FA1D     		adds	r2, r7, #7
 310 0018 1278     		ldrb	r2, [r2]
 311 001a 1A60     		str	r2, [r3]
 241:Generated_Source\PSoC4/Buttons.c ****     return maskedStatus >> Buttons_SHIFT;
 312              		.loc 1 241 0
 313 001c FB1D     		adds	r3, r7, #7
 314 001e 1B78     		ldrb	r3, [r3]
 315 0020 1B09     		lsrs	r3, r3, #4
 316 0022 DBB2     		uxtb	r3, r3
 242:Generated_Source\PSoC4/Buttons.c **** }
 317              		.loc 1 242 0
 318 0024 1800     		movs	r0, r3
 319 0026 BD46     		mov	sp, r7
 320 0028 02B0     		add	sp, sp, #8
 321              		@ sp needed
 322 002a 80BD     		pop	{r7, pc}
 323              	.L21:
 324              		.align	2
 325              	.L20:
 326 002c 10000440 		.word	1074003984
 327              		.cfi_endproc
 328              	.LFE5:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 11


 329              		.size	Buttons_ClearInterrupt, .-Buttons_ClearInterrupt
 330              		.text
 331              	.Letext0:
 332              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 333              		.section	.debug_info,"",%progbits
 334              	.Ldebug_info0:
 335 0000 96010000 		.4byte	0x196
 336 0004 0400     		.2byte	0x4
 337 0006 00000000 		.4byte	.Ldebug_abbrev0
 338 000a 04       		.byte	0x4
 339 000b 01       		.uleb128 0x1
 340 000c C2000000 		.4byte	.LASF28
 341 0010 0C       		.byte	0xc
 342 0011 A5010000 		.4byte	.LASF29
 343 0015 25000000 		.4byte	.LASF30
 344 0019 00000000 		.4byte	.Ldebug_ranges0+0
 345 001d 00000000 		.4byte	0
 346 0021 00000000 		.4byte	.Ldebug_line0
 347 0025 02       		.uleb128 0x2
 348 0026 01       		.byte	0x1
 349 0027 06       		.byte	0x6
 350 0028 54020000 		.4byte	.LASF0
 351 002c 02       		.uleb128 0x2
 352 002d 01       		.byte	0x1
 353 002e 08       		.byte	0x8
 354 002f 89000000 		.4byte	.LASF1
 355 0033 02       		.uleb128 0x2
 356 0034 02       		.byte	0x2
 357 0035 05       		.byte	0x5
 358 0036 17020000 		.4byte	.LASF2
 359 003a 02       		.uleb128 0x2
 360 003b 02       		.byte	0x2
 361 003c 07       		.byte	0x7
 362 003d AF000000 		.4byte	.LASF3
 363 0041 02       		.uleb128 0x2
 364 0042 04       		.byte	0x4
 365 0043 05       		.byte	0x5
 366 0044 4B020000 		.4byte	.LASF4
 367 0048 02       		.uleb128 0x2
 368 0049 04       		.byte	0x4
 369 004a 07       		.byte	0x7
 370 004b 9D000000 		.4byte	.LASF5
 371 004f 02       		.uleb128 0x2
 372 0050 08       		.byte	0x8
 373 0051 05       		.byte	0x5
 374 0052 F7010000 		.4byte	.LASF6
 375 0056 02       		.uleb128 0x2
 376 0057 08       		.byte	0x8
 377 0058 07       		.byte	0x7
 378 0059 C6010000 		.4byte	.LASF7
 379 005d 03       		.uleb128 0x3
 380 005e 04       		.byte	0x4
 381 005f 05       		.byte	0x5
 382 0060 696E7400 		.ascii	"int\000"
 383 0064 02       		.uleb128 0x2
 384 0065 04       		.byte	0x4
 385 0066 07       		.byte	0x7
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 12


 386 0067 98010000 		.4byte	.LASF8
 387 006b 04       		.uleb128 0x4
 388 006c 21020000 		.4byte	.LASF9
 389 0070 02       		.byte	0x2
 390 0071 E401     		.2byte	0x1e4
 391 0073 2C000000 		.4byte	0x2c
 392 0077 04       		.uleb128 0x4
 393 0078 79010000 		.4byte	.LASF10
 394 007c 02       		.byte	0x2
 395 007d E501     		.2byte	0x1e5
 396 007f 3A000000 		.4byte	0x3a
 397 0083 04       		.uleb128 0x4
 398 0084 89010000 		.4byte	.LASF11
 399 0088 02       		.byte	0x2
 400 0089 E601     		.2byte	0x1e6
 401 008b 48000000 		.4byte	0x48
 402 008f 02       		.uleb128 0x2
 403 0090 04       		.byte	0x4
 404 0091 04       		.byte	0x4
 405 0092 83000000 		.4byte	.LASF12
 406 0096 02       		.uleb128 0x2
 407 0097 08       		.byte	0x8
 408 0098 04       		.byte	0x4
 409 0099 72010000 		.4byte	.LASF13
 410 009d 02       		.uleb128 0x2
 411 009e 01       		.byte	0x1
 412 009f 08       		.byte	0x8
 413 00a0 12020000 		.4byte	.LASF14
 414 00a4 04       		.uleb128 0x4
 415 00a5 00000000 		.4byte	.LASF15
 416 00a9 02       		.byte	0x2
 417 00aa 9002     		.2byte	0x290
 418 00ac B0000000 		.4byte	0xb0
 419 00b0 05       		.uleb128 0x5
 420 00b1 83000000 		.4byte	0x83
 421 00b5 06       		.uleb128 0x6
 422 00b6 DD010000 		.4byte	.LASF16
 423 00ba 01       		.byte	0x1
 424 00bb 48       		.byte	0x48
 425 00bc 00000000 		.4byte	.LFB0
 426 00c0 48000000 		.4byte	.LFE0-.LFB0
 427 00c4 01       		.uleb128 0x1
 428 00c5 9C       		.byte	0x9c
 429 00c6 D9000000 		.4byte	0xd9
 430 00ca 07       		.uleb128 0x7
 431 00cb F2010000 		.4byte	.LASF18
 432 00cf 01       		.byte	0x1
 433 00d0 48       		.byte	0x48
 434 00d1 6B000000 		.4byte	0x6b
 435 00d5 02       		.uleb128 0x2
 436 00d6 91       		.byte	0x91
 437 00d7 77       		.sleb128 -9
 438 00d8 00       		.byte	0
 439 00d9 06       		.uleb128 0x6
 440 00da 50010000 		.4byte	.LASF17
 441 00de 01       		.byte	0x1
 442 00df 70       		.byte	0x70
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 13


 443 00e0 00000000 		.4byte	.LFB1
 444 00e4 50000000 		.4byte	.LFE1-.LFB1
 445 00e8 01       		.uleb128 0x1
 446 00e9 9C       		.byte	0x9c
 447 00ea 0B010000 		.4byte	0x10b
 448 00ee 07       		.uleb128 0x7
 449 00ef 06000000 		.4byte	.LASF19
 450 00f3 01       		.byte	0x1
 451 00f4 70       		.byte	0x70
 452 00f5 6B000000 		.4byte	0x6b
 453 00f9 02       		.uleb128 0x2
 454 00fa 91       		.byte	0x91
 455 00fb 6F       		.sleb128 -17
 456 00fc 08       		.uleb128 0x8
 457 00fd 97000000 		.4byte	.LASF24
 458 0101 01       		.byte	0x1
 459 0102 72       		.byte	0x72
 460 0103 6B000000 		.4byte	0x6b
 461 0107 02       		.uleb128 0x2
 462 0108 91       		.byte	0x91
 463 0109 77       		.sleb128 -9
 464 010a 00       		.byte	0
 465 010b 09       		.uleb128 0x9
 466 010c 3E020000 		.4byte	.LASF20
 467 0110 01       		.byte	0x1
 468 0111 89       		.byte	0x89
 469 0112 6B000000 		.4byte	0x6b
 470 0116 00000000 		.4byte	.LFB2
 471 011a 1C000000 		.4byte	.LFE2-.LFB2
 472 011e 01       		.uleb128 0x1
 473 011f 9C       		.byte	0x9c
 474 0120 09       		.uleb128 0x9
 475 0121 5E010000 		.4byte	.LASF21
 476 0125 01       		.byte	0x1
 477 0126 A5       		.byte	0xa5
 478 0127 6B000000 		.4byte	0x6b
 479 012b 00000000 		.4byte	.LFB3
 480 012f 1C000000 		.4byte	.LFE3-.LFB3
 481 0133 01       		.uleb128 0x1
 482 0134 9C       		.byte	0x9c
 483 0135 06       		.uleb128 0x6
 484 0136 0C000000 		.4byte	.LASF22
 485 013a 01       		.byte	0x1
 486 013b D0       		.byte	0xd0
 487 013c 00000000 		.4byte	.LFB4
 488 0140 44000000 		.4byte	.LFE4-.LFB4
 489 0144 01       		.uleb128 0x1
 490 0145 9C       		.byte	0x9c
 491 0146 75010000 		.4byte	0x175
 492 014a 07       		.uleb128 0x7
 493 014b 80010000 		.4byte	.LASF23
 494 014f 01       		.byte	0x1
 495 0150 D0       		.byte	0xd0
 496 0151 77000000 		.4byte	0x77
 497 0155 02       		.uleb128 0x2
 498 0156 91       		.byte	0x91
 499 0157 6E       		.sleb128 -18
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 14


 500 0158 07       		.uleb128 0x7
 501 0159 F2010000 		.4byte	.LASF18
 502 015d 01       		.byte	0x1
 503 015e D0       		.byte	0xd0
 504 015f 77000000 		.4byte	0x77
 505 0163 02       		.uleb128 0x2
 506 0164 91       		.byte	0x91
 507 0165 6C       		.sleb128 -20
 508 0166 08       		.uleb128 0x8
 509 0167 90010000 		.4byte	.LASF25
 510 016b 01       		.byte	0x1
 511 016c D2       		.byte	0xd2
 512 016d 83000000 		.4byte	0x83
 513 0171 02       		.uleb128 0x2
 514 0172 91       		.byte	0x91
 515 0173 74       		.sleb128 -12
 516 0174 00       		.byte	0
 517 0175 0A       		.uleb128 0xa
 518 0176 27020000 		.4byte	.LASF26
 519 017a 01       		.byte	0x1
 520 017b ED       		.byte	0xed
 521 017c 6B000000 		.4byte	0x6b
 522 0180 00000000 		.4byte	.LFB5
 523 0184 30000000 		.4byte	.LFE5-.LFB5
 524 0188 01       		.uleb128 0x1
 525 0189 9C       		.byte	0x9c
 526 018a 08       		.uleb128 0x8
 527 018b 05020000 		.4byte	.LASF27
 528 018f 01       		.byte	0x1
 529 0190 EF       		.byte	0xef
 530 0191 6B000000 		.4byte	0x6b
 531 0195 02       		.uleb128 0x2
 532 0196 91       		.byte	0x91
 533 0197 77       		.sleb128 -9
 534 0198 00       		.byte	0
 535 0199 00       		.byte	0
 536              		.section	.debug_abbrev,"",%progbits
 537              	.Ldebug_abbrev0:
 538 0000 01       		.uleb128 0x1
 539 0001 11       		.uleb128 0x11
 540 0002 01       		.byte	0x1
 541 0003 25       		.uleb128 0x25
 542 0004 0E       		.uleb128 0xe
 543 0005 13       		.uleb128 0x13
 544 0006 0B       		.uleb128 0xb
 545 0007 03       		.uleb128 0x3
 546 0008 0E       		.uleb128 0xe
 547 0009 1B       		.uleb128 0x1b
 548 000a 0E       		.uleb128 0xe
 549 000b 55       		.uleb128 0x55
 550 000c 17       		.uleb128 0x17
 551 000d 11       		.uleb128 0x11
 552 000e 01       		.uleb128 0x1
 553 000f 10       		.uleb128 0x10
 554 0010 17       		.uleb128 0x17
 555 0011 00       		.byte	0
 556 0012 00       		.byte	0
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 15


 557 0013 02       		.uleb128 0x2
 558 0014 24       		.uleb128 0x24
 559 0015 00       		.byte	0
 560 0016 0B       		.uleb128 0xb
 561 0017 0B       		.uleb128 0xb
 562 0018 3E       		.uleb128 0x3e
 563 0019 0B       		.uleb128 0xb
 564 001a 03       		.uleb128 0x3
 565 001b 0E       		.uleb128 0xe
 566 001c 00       		.byte	0
 567 001d 00       		.byte	0
 568 001e 03       		.uleb128 0x3
 569 001f 24       		.uleb128 0x24
 570 0020 00       		.byte	0
 571 0021 0B       		.uleb128 0xb
 572 0022 0B       		.uleb128 0xb
 573 0023 3E       		.uleb128 0x3e
 574 0024 0B       		.uleb128 0xb
 575 0025 03       		.uleb128 0x3
 576 0026 08       		.uleb128 0x8
 577 0027 00       		.byte	0
 578 0028 00       		.byte	0
 579 0029 04       		.uleb128 0x4
 580 002a 16       		.uleb128 0x16
 581 002b 00       		.byte	0
 582 002c 03       		.uleb128 0x3
 583 002d 0E       		.uleb128 0xe
 584 002e 3A       		.uleb128 0x3a
 585 002f 0B       		.uleb128 0xb
 586 0030 3B       		.uleb128 0x3b
 587 0031 05       		.uleb128 0x5
 588 0032 49       		.uleb128 0x49
 589 0033 13       		.uleb128 0x13
 590 0034 00       		.byte	0
 591 0035 00       		.byte	0
 592 0036 05       		.uleb128 0x5
 593 0037 35       		.uleb128 0x35
 594 0038 00       		.byte	0
 595 0039 49       		.uleb128 0x49
 596 003a 13       		.uleb128 0x13
 597 003b 00       		.byte	0
 598 003c 00       		.byte	0
 599 003d 06       		.uleb128 0x6
 600 003e 2E       		.uleb128 0x2e
 601 003f 01       		.byte	0x1
 602 0040 3F       		.uleb128 0x3f
 603 0041 19       		.uleb128 0x19
 604 0042 03       		.uleb128 0x3
 605 0043 0E       		.uleb128 0xe
 606 0044 3A       		.uleb128 0x3a
 607 0045 0B       		.uleb128 0xb
 608 0046 3B       		.uleb128 0x3b
 609 0047 0B       		.uleb128 0xb
 610 0048 27       		.uleb128 0x27
 611 0049 19       		.uleb128 0x19
 612 004a 11       		.uleb128 0x11
 613 004b 01       		.uleb128 0x1
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 16


 614 004c 12       		.uleb128 0x12
 615 004d 06       		.uleb128 0x6
 616 004e 40       		.uleb128 0x40
 617 004f 18       		.uleb128 0x18
 618 0050 9742     		.uleb128 0x2117
 619 0052 19       		.uleb128 0x19
 620 0053 01       		.uleb128 0x1
 621 0054 13       		.uleb128 0x13
 622 0055 00       		.byte	0
 623 0056 00       		.byte	0
 624 0057 07       		.uleb128 0x7
 625 0058 05       		.uleb128 0x5
 626 0059 00       		.byte	0
 627 005a 03       		.uleb128 0x3
 628 005b 0E       		.uleb128 0xe
 629 005c 3A       		.uleb128 0x3a
 630 005d 0B       		.uleb128 0xb
 631 005e 3B       		.uleb128 0x3b
 632 005f 0B       		.uleb128 0xb
 633 0060 49       		.uleb128 0x49
 634 0061 13       		.uleb128 0x13
 635 0062 02       		.uleb128 0x2
 636 0063 18       		.uleb128 0x18
 637 0064 00       		.byte	0
 638 0065 00       		.byte	0
 639 0066 08       		.uleb128 0x8
 640 0067 34       		.uleb128 0x34
 641 0068 00       		.byte	0
 642 0069 03       		.uleb128 0x3
 643 006a 0E       		.uleb128 0xe
 644 006b 3A       		.uleb128 0x3a
 645 006c 0B       		.uleb128 0xb
 646 006d 3B       		.uleb128 0x3b
 647 006e 0B       		.uleb128 0xb
 648 006f 49       		.uleb128 0x49
 649 0070 13       		.uleb128 0x13
 650 0071 02       		.uleb128 0x2
 651 0072 18       		.uleb128 0x18
 652 0073 00       		.byte	0
 653 0074 00       		.byte	0
 654 0075 09       		.uleb128 0x9
 655 0076 2E       		.uleb128 0x2e
 656 0077 00       		.byte	0
 657 0078 3F       		.uleb128 0x3f
 658 0079 19       		.uleb128 0x19
 659 007a 03       		.uleb128 0x3
 660 007b 0E       		.uleb128 0xe
 661 007c 3A       		.uleb128 0x3a
 662 007d 0B       		.uleb128 0xb
 663 007e 3B       		.uleb128 0x3b
 664 007f 0B       		.uleb128 0xb
 665 0080 27       		.uleb128 0x27
 666 0081 19       		.uleb128 0x19
 667 0082 49       		.uleb128 0x49
 668 0083 13       		.uleb128 0x13
 669 0084 11       		.uleb128 0x11
 670 0085 01       		.uleb128 0x1
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 17


 671 0086 12       		.uleb128 0x12
 672 0087 06       		.uleb128 0x6
 673 0088 40       		.uleb128 0x40
 674 0089 18       		.uleb128 0x18
 675 008a 9742     		.uleb128 0x2117
 676 008c 19       		.uleb128 0x19
 677 008d 00       		.byte	0
 678 008e 00       		.byte	0
 679 008f 0A       		.uleb128 0xa
 680 0090 2E       		.uleb128 0x2e
 681 0091 01       		.byte	0x1
 682 0092 3F       		.uleb128 0x3f
 683 0093 19       		.uleb128 0x19
 684 0094 03       		.uleb128 0x3
 685 0095 0E       		.uleb128 0xe
 686 0096 3A       		.uleb128 0x3a
 687 0097 0B       		.uleb128 0xb
 688 0098 3B       		.uleb128 0x3b
 689 0099 0B       		.uleb128 0xb
 690 009a 27       		.uleb128 0x27
 691 009b 19       		.uleb128 0x19
 692 009c 49       		.uleb128 0x49
 693 009d 13       		.uleb128 0x13
 694 009e 11       		.uleb128 0x11
 695 009f 01       		.uleb128 0x1
 696 00a0 12       		.uleb128 0x12
 697 00a1 06       		.uleb128 0x6
 698 00a2 40       		.uleb128 0x40
 699 00a3 18       		.uleb128 0x18
 700 00a4 9742     		.uleb128 0x2117
 701 00a6 19       		.uleb128 0x19
 702 00a7 00       		.byte	0
 703 00a8 00       		.byte	0
 704 00a9 00       		.byte	0
 705              		.section	.debug_aranges,"",%progbits
 706 0000 44000000 		.4byte	0x44
 707 0004 0200     		.2byte	0x2
 708 0006 00000000 		.4byte	.Ldebug_info0
 709 000a 04       		.byte	0x4
 710 000b 00       		.byte	0
 711 000c 0000     		.2byte	0
 712 000e 0000     		.2byte	0
 713 0010 00000000 		.4byte	.LFB0
 714 0014 48000000 		.4byte	.LFE0-.LFB0
 715 0018 00000000 		.4byte	.LFB1
 716 001c 50000000 		.4byte	.LFE1-.LFB1
 717 0020 00000000 		.4byte	.LFB2
 718 0024 1C000000 		.4byte	.LFE2-.LFB2
 719 0028 00000000 		.4byte	.LFB3
 720 002c 1C000000 		.4byte	.LFE3-.LFB3
 721 0030 00000000 		.4byte	.LFB4
 722 0034 44000000 		.4byte	.LFE4-.LFB4
 723 0038 00000000 		.4byte	.LFB5
 724 003c 30000000 		.4byte	.LFE5-.LFB5
 725 0040 00000000 		.4byte	0
 726 0044 00000000 		.4byte	0
 727              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 18


 728              	.Ldebug_ranges0:
 729 0000 00000000 		.4byte	.LFB0
 730 0004 48000000 		.4byte	.LFE0
 731 0008 00000000 		.4byte	.LFB1
 732 000c 50000000 		.4byte	.LFE1
 733 0010 00000000 		.4byte	.LFB2
 734 0014 1C000000 		.4byte	.LFE2
 735 0018 00000000 		.4byte	.LFB3
 736 001c 1C000000 		.4byte	.LFE3
 737 0020 00000000 		.4byte	.LFB4
 738 0024 44000000 		.4byte	.LFE4
 739 0028 00000000 		.4byte	.LFB5
 740 002c 30000000 		.4byte	.LFE5
 741 0030 00000000 		.4byte	0
 742 0034 00000000 		.4byte	0
 743              		.section	.debug_line,"",%progbits
 744              	.Ldebug_line0:
 745 0000 BC000000 		.section	.debug_str,"MS",%progbits,1
 745      02004400 
 745      00000201 
 745      FB0E0D00 
 745      01010101 
 746              	.LASF15:
 747 0000 72656733 		.ascii	"reg32\000"
 747      3200
 748              	.LASF19:
 749 0006 76616C75 		.ascii	"value\000"
 749      6500
 750              	.LASF22:
 751 000c 42757474 		.ascii	"Buttons_SetInterruptMode\000"
 751      6F6E735F 
 751      53657449 
 751      6E746572 
 751      72757074 
 752              	.LASF30:
 753 0025 433A5C55 		.ascii	"C:\\Users\\bernde\\Documents\\PSoC Creator\\Martins"
 753      73657273 
 753      5C626572 
 753      6E64655C 
 753      446F6375 
 754 0053 4D6F7573 		.ascii	"MouseOhneWheelFinal\\MartinsMouseOhneWheel.cydsn\000"
 754      654F686E 
 754      65576865 
 754      656C4669 
 754      6E616C5C 
 755              	.LASF12:
 756 0083 666C6F61 		.ascii	"float\000"
 756      7400
 757              	.LASF1:
 758 0089 756E7369 		.ascii	"unsigned char\000"
 758      676E6564 
 758      20636861 
 758      7200
 759              	.LASF24:
 760 0097 64725661 		.ascii	"drVal\000"
 760      6C00
 761              	.LASF5:
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 19


 762 009d 6C6F6E67 		.ascii	"long unsigned int\000"
 762      20756E73 
 762      69676E65 
 762      6420696E 
 762      7400
 763              	.LASF3:
 764 00af 73686F72 		.ascii	"short unsigned int\000"
 764      7420756E 
 764      7369676E 
 764      65642069 
 764      6E7400
 765              	.LASF28:
 766 00c2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 766      43313120 
 766      352E342E 
 766      31203230 
 766      31363036 
 767 00f5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 767      20726576 
 767      6973696F 
 767      6E203233 
 767      37373135 
 768 0128 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 768      66756E63 
 768      74696F6E 
 768      2D736563 
 768      74696F6E 
 769              	.LASF17:
 770 0150 42757474 		.ascii	"Buttons_Write\000"
 770      6F6E735F 
 770      57726974 
 770      6500
 771              	.LASF21:
 772 015e 42757474 		.ascii	"Buttons_ReadDataReg\000"
 772      6F6E735F 
 772      52656164 
 772      44617461 
 772      52656700 
 773              	.LASF13:
 774 0172 646F7562 		.ascii	"double\000"
 774      6C6500
 775              	.LASF10:
 776 0179 75696E74 		.ascii	"uint16\000"
 776      313600
 777              	.LASF23:
 778 0180 706F7369 		.ascii	"position\000"
 778      74696F6E 
 778      00
 779              	.LASF11:
 780 0189 75696E74 		.ascii	"uint32\000"
 780      333200
 781              	.LASF25:
 782 0190 696E7472 		.ascii	"intrCfg\000"
 782      43666700 
 783              	.LASF8:
 784 0198 756E7369 		.ascii	"unsigned int\000"
 784      676E6564 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 20


 784      20696E74 
 784      00
 785              	.LASF29:
 786 01a5 47656E65 		.ascii	"Generated_Source\\PSoC4\\Buttons.c\000"
 786      72617465 
 786      645F536F 
 786      75726365 
 786      5C50536F 
 787              	.LASF7:
 788 01c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 788      206C6F6E 
 788      6720756E 
 788      7369676E 
 788      65642069 
 789              	.LASF16:
 790 01dd 42757474 		.ascii	"Buttons_SetDriveMode\000"
 790      6F6E735F 
 790      53657444 
 790      72697665 
 790      4D6F6465 
 791              	.LASF18:
 792 01f2 6D6F6465 		.ascii	"mode\000"
 792      00
 793              	.LASF6:
 794 01f7 6C6F6E67 		.ascii	"long long int\000"
 794      206C6F6E 
 794      6720696E 
 794      7400
 795              	.LASF27:
 796 0205 6D61736B 		.ascii	"maskedStatus\000"
 796      65645374 
 796      61747573 
 796      00
 797              	.LASF14:
 798 0212 63686172 		.ascii	"char\000"
 798      00
 799              	.LASF2:
 800 0217 73686F72 		.ascii	"short int\000"
 800      7420696E 
 800      7400
 801              	.LASF9:
 802 0221 75696E74 		.ascii	"uint8\000"
 802      3800
 803              	.LASF26:
 804 0227 42757474 		.ascii	"Buttons_ClearInterrupt\000"
 804      6F6E735F 
 804      436C6561 
 804      72496E74 
 804      65727275 
 805              	.LASF20:
 806 023e 42757474 		.ascii	"Buttons_Read\000"
 806      6F6E735F 
 806      52656164 
 806      00
 807              	.LASF4:
 808 024b 6C6F6E67 		.ascii	"long int\000"
 808      20696E74 
ARM GAS  C:\Users\bernde\AppData\Local\Temp\ccyO5eul.s 			page 21


 808      00
 809              	.LASF0:
 810 0254 7369676E 		.ascii	"signed char\000"
 810      65642063 
 810      68617200 
 811              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
